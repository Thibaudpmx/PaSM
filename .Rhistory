ggplot()+
geom_line(aes(nCohort, value, col = Method)) +
geom_ribbon(data = pregather, aes(x = nCohort, ymin = Old, ymax = New), alpha = 0.3)+
geom_point(aes(nCohort, value, col = Method))+
geom_vline(xintercept = 2E5)+
theme_bw()
datas %>%
mutate(Old = 55.1 * nCohort / 2E5) %>%
mutate(timeTotal = if_else(timeTotal < 4, timeTotal * 60, timeTotal)) %>%  #transform into minutes whats in sec (carefull reproductibiliy...)
rename(New = timeTotal) %>%
{pregather <<- .} %>%
gather("Method", "value", Old, New) %>%
ggplot()+
geom_line(aes(nCohort, value, col = Method), size = 2) +
geom_ribbon(data = pregather, aes(x = nCohort, ymin = Old, ymax = New), alpha = 0.3)+
geom_point(aes(nCohort, value, col = Method), size = 3)+
geom_vline(xintercept = 2E5)+
theme_bw()
datas %>%
mutate(Old = 55.1 * nCohort / 2E5) %>%
mutate(timeTotal = if_else(timeTotal < 4, timeTotal * 60, timeTotal)) %>%  #transform into minutes whats in sec (carefull reproductibiliy...)
rename(New = timeTotal) %>%
{pregather <<- .} %>%
gather("Method", "value", Old, New) %>%
ggplot()+
geom_vline(xintercept = 2E5, lty = 2)+
geom_line(aes(nCohort, value, col = Method), size = 2) +
geom_ribbon(data = pregather, aes(x = nCohort, ymin = Old, ymax = New), alpha = 0.3)+
geom_point(aes(nCohort, value, col = Method), size = 3)+
theme_bw() +
g10()
datas %>%
mutate(Old = 55.1 * nCohort / 2E5) %>%
mutate(timeTotal = if_else(timeTotal < 4, timeTotal * 60, timeTotal)) %>%  #transform into minutes whats in sec (carefull reproductibiliy...)
rename(New = timeTotal) %>%
{pregather <<- .} %>%
gather("Method", "value", Old, New) %>%
ggplot()+
geom_vline(xintercept = 2E5, lty = 2)+
geom_line(aes(nCohort, value, col = Method), size = 2) +
geom_ribbon(data = pregather, aes(x = nCohort, ymin = Old, ymax = New), alpha = 0.3)+
geom_point(aes(nCohort, value, col = Method), size = 3)+
theme_bw() +
labs(x = "Number of VPs in original cohort", y = "Time of computation (sec)")
#  plot A - making: Simeoni analysis -----------------------------------------------
setwd("D:/these/Second_project/QSP/modeling_work/VT_simeoni/article_QSPVP/data/Simeoni")
allTimes <- readRDS("full_analysis.RDS")
readRDS("timeReference.RDS") %>%
as.data.frame() %>%
mutate(time = time * 10E-10) %>%
summarise(min = min(time), max = max(time), median = median(time)) -> ref
allTimes %>%
mutate(pcteffe = VPfound / 200000) %>%
filter(pct != pcteffe) # note: 1 or 2 of differences can be explained by internal rounding
plotA <- allTimes %>%
mutate(pct = as.double(pct)) %>%
mutate(nparam = as.character(nparam)) %>%
group_by(nparam, pct) %>%
summarise(timeTotal = median(timeTotal)) %>%
ungroup() %>%
ggplot()+
geom_rect(aes(xmin = 48, xmax = 52, ymin = 39, ymax = 41.5), col = "red",alpha = 0)+
geom_segment(aes(x = 56, xend = 52, y = 45, yend = 42), col = "red",  arrow = arrow(length = unit(0.2, "cm")))+
# geom_text(aes(x = 62, y = 46, label = "next plots"), col = "red", size = 3)+ # Note: last 3 brut way, not reproducible
geom_point(aes(x = (1-pct) * 100, y = timeTotal, col = nparam))+
geom_line(aes(x = (1-pct)* 100, y = timeTotal, col = nparam))+
geom_hline(data = ref, aes(yintercept = min), lty = 1)+
geom_hline(data = ref, aes(yintercept = max), lty = 1)+
geom_rect(data = ref, aes(xmin = -Inf, xmax = Inf, ymin = min, ymax =  max, fill = "Time of\nreference"), lty = 1,alpha = 0.2)+
geom_hline(data = ref, aes(yintercept = median), lty = 2)+
theme_bw()+
scale_fill_manual(values = "grey")+
labs(x = "Percentage of rejected VP", y = "Total Time analysis (sec)", col = "Number\nvarying\nparameters", fill = ""); plotA
allTimes %>%
mutate(timeTotal= as.double(timeTotal)) %>%
left_join(
allTimes %>%
group_by(nparam, pct) %>%
summarise(  timeTotal = median(as.double(timeTotal)) ) %>%
mutate(test = T)
) %>%
filter(test) %>%
select(nparam, pct, iteration,test) -> iteration_to_keep
plotB <- allTimes %>%
filter(nparam == 5 & pct == 0.5) %>%
left_join(iteration_to_keep) %>%
filter(test) %>%
gather("time", "value",GreenFilter, Other, RedFilter, RxODE) %>%
mutate(pct = "New") %>%
bind_rows( tibble(pct = "Old", time = c("Other", "RxODE"), value = c(7.1,47.9)) %>% crossing(nparam = 5)) %>%
group_by(pct) %>%
mutate(total = sum(value)) %>%
ungroup() %>%
ggplot()+
geom_segment(aes(x = "New", xend = "New", y = 53, yend = 50), col = "red",  arrow = arrow(length = unit(0.2, "cm")))+
geom_col(aes(pct, value, fill = fct_reorder(time, value, .desc = F)), alpha = 0.5)+
# geom_col(data =,aes(pct, value, fill = time), alpha = 0.4)+
theme_bw()+
# facet_wrap(~nparam)+
scale_fill_manual(values = c("grey", "red", "darkgreen", "blue"))+
# geom_rect(data = ref, aes(xmin = -Inf, xmax = Inf, ymin = min, ymax =  max), lty = 1,alpha = 0.2)+
# geom_hline(data = ref, aes(yintercept = median), lty = 2)+
labs(x = "Method", y = "Time of analysis (sec)", fill = "Step")+
geom_text(aes(pct, value, fill = fct_reorder(time, value, .desc = F), label = as.double(value) %>% round(1)), position = position_stack(vjust = .5))+
geom_label(aes(pct, total+ 5 ,  label = paste0("Total:",as.double(total) %>% round(1), "s"))); plotB
setwd("D:/these/Second_project/QSP/modeling_work/VT_simeoni/article_QSPVP/data/time_impact")
names(allTimesRxODE) <- map(times_to_try, ~ length(.x) %>% as.character)
times_to_try <- list(seq(0,48,48), seq(0,48,4),seq(0,48,2),seq(0,48,1),seq(0,48,0.5),seq(0,48,0.1))
names(allTimesRxODE) <- map(times_to_try, ~ length(.x) %>% as.character)
time_Impact <- function(times = 1:40){
cohort <- cohort_creator(nmodif = 2)
self$protocols[] %>%
bind_rows() %>%
mutate(proto = names( self$protocols)) -> protocols
eventsadmin  <- crossing(id = 1:2000, proto  = unique(target$protocol)) %>%
left_join(protocols, by = "proto" ) %>%
mutate(evid = 1)
eventsadmin  <-   eventsadmin %>%
bind_rows(
eventsadmin  %>%
mutate(evid = 0, amt = 0) %>%
select(-time) %>%
crossing(time = times)
) %>%
arrange(id, time)
demo <- cohort %>%
rowid_to_column("ids") %>%
mutate(group = floor(ids/2000)+1)
idtorems <- double()
resultsap <- list()
# for(a in unique(demo$group)){
a <- 1
x <- demo %>% filter(group == a) %>%
rowid_to_column("id")
events <- eventsadmin%>% filter(id <2000)
t0 <- Sys.time()
res <- self$model$solve(x, events  , c(X2 = 0)) %>%
as_tibble
difftime(Sys.time(), t0)
}
allTimesRxODE <-  map(times_to_try, function(x){
time_Impact(x) * 100
})
cohort_creator <- function(nmodif){
base <- crossing( k2 = 0.5,
lambda0 = 0.1,
Vd =  40,
lambda1 = 12,
ke = 1 ,
w0 = 50
)
nperparam <- ceiling(200000^(1/nmodif)) # count how many parameter values per paramer, superior round
list <-   map(1:nmodif, function(x){ # for each parameter, create the sequence function
min <- base[[x]]/5
max <- base[[x]]*5
step <- (max - min)/(nperparam-1)
expr(seq( !!min,  !!max, !!step  ))
}
)
names(list) <- names(base[1:nmodif])
if(nmodif < length(base)){ # create the data.frame of the cohort
output <- crossing(base[-c(1:nmodif)], !!!list)
}else{
output <- crossing(!!!list)
}
set.seed(255661) # let's add a seed to have a deterministic behavior
output %>%
sample_n(200000) %>% # and randomly sample 200.000 VPs (due to the ceiling function, nrow(output) > 200K)
mutate(k1 = 0.5, psi = 20) #%>%
# map(~length(unique(.x)))
}
pcttargets <- c(1,0.875,0.99, 0.75,0.5,0.25,0.125,0.01,0)
time_Impact <- function(times = 1:40){
cohort <- cohort_creator(nmodif = 2)
self$protocols[] %>%
bind_rows() %>%
mutate(proto = names( self$protocols)) -> protocols
eventsadmin  <- crossing(id = 1:2000, proto  = unique(target$protocol)) %>%
left_join(protocols, by = "proto" ) %>%
mutate(evid = 1)
eventsadmin  <-   eventsadmin %>%
bind_rows(
eventsadmin  %>%
mutate(evid = 0, amt = 0) %>%
select(-time) %>%
crossing(time = times)
) %>%
arrange(id, time)
demo <- cohort %>%
rowid_to_column("ids") %>%
mutate(group = floor(ids/2000)+1)
idtorems <- double()
resultsap <- list()
# for(a in unique(demo$group)){
a <- 1
x <- demo %>% filter(group == a) %>%
rowid_to_column("id")
events <- eventsadmin%>% filter(id <2000)
t0 <- Sys.time()
res <- self$model$solve(x, events  , c(X2 = 0)) %>%
as_tibble
difftime(Sys.time(), t0)
}
allTimesRxODE <-  map(times_to_try, function(x){
time_Impact(x) * 100
})
times_to_try <- list(seq(0,48,48), seq(0,48,4),seq(0,48,2),seq(0,48,1),seq(0,48,0.5),seq(0,48,0.1))
names(allTimesRxODE) <- map(times_to_try, ~ length(.x) %>% as.character)
temp <- readRDS("full_analysis.RDS") %>%
mutate(timeTotal = as.double(timeTotal)) %>%
group_by(Step) %>%
mutate(median = median (timeTotal)) %>%
filter(median == timeTotal) %>%
ungroup() %>%
mutate( n = map_dbl(times_to_try, ~ length(.x)) ) %>%
mutate(timecomput =  map_dbl(allTimesRxODE, ~ as.double(.x)/ 100) ) %>%
mutate(Old = 10 + allTimesRxODE %>% reduce(c) %>% as.double()) %>%
rename(New = timeTotal) %>%
gather("method", "value", Old, New) %>%
mutate(value= as.double(value))
plotC <- temp %>%
ggplot()+
geom_vline(aes(xintercept = 0.375, lty= "Used in\nmain\nanalysis"))+
geom_line(aes(timecomput, value, col = method), size = 2)+
geom_point(aes(timecomput, value, col = method), size = 3)+
geom_segment(aes(x = 0.45, xend = 0.39, y = 35, yend = 39), col = "red",  arrow = arrow(length = unit(0.2, "cm")))+
# geom_line(aes(timecomput, value, col = method), size = 2)+
geom_ribbon(data = temp %>% spread(method, value), aes(x = timecomput, ymin = New, ymax =  Old), alpha = 0.3)+
theme_bw()+
scale_y_log10()+
scale_x_log10()+
labs(x = "Time to compute 2000 VPs with RxODE (sec)",y = "Time for performing 200.000 VPs (sec)", lty = "")+
scale_linetype_manual(values = 2);plotC
plotD <- allTimes %>%
mutate(timeTotal = as.double(timeTotal)) %>%
group_by(nparam, pct) %>%
mutate(median = median(timeTotal)) %>%
ungroup() %>%
filter(timeTotal == median) %>%
ggplot()+
geom_point(aes(nparam,nsimul, col = factor(1-pct)))+
geom_line(aes(nparam, nsimul, col =factor(1-pct)))+
theme_bw()+
scale_y_log10()+
labs(x = "Number of varying parameter", y = "Number of simulations performed",col = "Percentage\nRejection");plotD
plotE<- allTimes %>%
mutate(timeTotal = as.double(timeTotal)) %>%
group_by(nparam, pct) %>%
mutate(median = median(timeTotal)) %>%
mutate(filtreTime = (Tgreen1 + Tgreen1)) %>%
ungroup() %>%
filter(timeTotal == median) %>%
ggplot()+
geom_point(aes(nparam,filtreTime, col = factor(1-pct)))+
geom_line(aes(nparam, filtreTime, col =factor(1-pct)))+
theme_bw()+
scale_y_log10()+
labs(x = "Number of varying parameter", y = "Filtering time first iteration (sec)",col = "Percentage\nRejection");plotE
datas %>%
mutate(Old = 55.1 * nCohort / 2E5) %>%
mutate(timeTotal = if_else(timeTotal < 4, timeTotal * 60, timeTotal)) %>%  #transform into minutes whats in sec (carefull reproductibiliy...)
rename(New = timeTotal) %>%
{pregather <<- .} %>%
gather("Method", "value", Old, New) %>%
ggplot()+
geom_vline(xintercept = 2E5, lty = 2)+
geom_segment(aes(x = 0.45, xend = 0.39, y = 35, yend = 39), col = "red",  arrow = arrow(length = unit(0.2, "cm")))+
geom_line(aes(nCohort, value, col = Method), size = 2) +
geom_ribbon(data = pregather, aes(x = nCohort, ymin = Old, ymax = New), alpha = 0.3)+
geom_point(aes(nCohort, value, col = Method), size = 3)+
theme_bw() +
labs(x = "Number of VPs in original cohort", y = "Time of computation (sec)")
datas %>%
mutate(Old = 55.1 * nCohort / 2E5) %>%
mutate(timeTotal = if_else(timeTotal < 4, timeTotal * 60, timeTotal)) %>%  #transform into minutes whats in sec (carefull reproductibiliy...)
rename(New = timeTotal) %>%
{pregather <<- .} %>%
gather("Method", "value", Old, New) %>%
ggplot()+
geom_vline(xintercept = 2E5, lty = 2)+
geom_segment(aes(x = 2.2E5, xend = 2.7E5, y = 35, yend = 39), col = "red",  arrow = arrow(length = unit(0.2, "cm")))+
geom_line(aes(nCohort, value, col = Method), size = 2) +
geom_ribbon(data = pregather, aes(x = nCohort, ymin = Old, ymax = New), alpha = 0.3)+
geom_point(aes(nCohort, value, col = Method), size = 3)+
theme_bw() +
labs(x = "Number of VPs in original cohort", y = "Time of computation (sec)")
datas %>%
mutate(Old = 55.1 * nCohort / 2E5) %>%
mutate(timeTotal = if_else(timeTotal < 4, timeTotal * 60, timeTotal)) %>%  #transform into minutes whats in sec (carefull reproductibiliy...)
rename(New = timeTotal) %>%
{pregather <<- .} %>%
gather("Method", "value", Old, New) %>%
ggplot()+
geom_vline(xintercept = 2E5, lty = 2)+
geom_segment(aes(x = 2.7E5, xend = 2.5E5, y = 35, yend = 39), col = "red",  arrow = arrow(length = unit(0.2, "cm")))+
geom_line(aes(nCohort, value, col = Method), size = 2) +
geom_ribbon(data = pregather, aes(x = nCohort, ymin = Old, ymax = New), alpha = 0.3)+
geom_point(aes(nCohort, value, col = Method), size = 3)+
theme_bw() +
labs(x = "Number of VPs in original cohort", y = "Time of computation (sec)")
datas %>%
mutate(Old = 55.1 * nCohort / 2E5) %>%
mutate(timeTotal = if_else(timeTotal < 4, timeTotal * 60, timeTotal)) %>%  #transform into minutes whats in sec (carefull reproductibiliy...)
rename(New = timeTotal) %>%
{pregather <<- .} %>%
gather("Method", "value", Old, New) %>%
ggplot()+
geom_vline(xintercept = 2E5, lty = 2)+
geom_segment(aes(x = 2.7E5, xend = 2.2E5, y = 35, yend = 39), col = "red",  arrow = arrow(length = unit(0.2, "cm")))+
geom_line(aes(nCohort, value, col = Method), size = 2) +
geom_ribbon(data = pregather, aes(x = nCohort, ymin = Old, ymax = New), alpha = 0.3)+
geom_point(aes(nCohort, value, col = Method), size = 3)+
theme_bw() +
labs(x = "Number of VPs in original cohort", y = "Time of computation (sec)")
datas %>%
mutate(Old = 55.1 * nCohort / 2E5) %>%
mutate(timeTotal = if_else(timeTotal < 4, timeTotal * 60, timeTotal)) %>%  #transform into minutes whats in sec (carefull reproductibiliy...)
rename(New = timeTotal) %>%
{pregather <<- .} %>%
gather("Method", "value", Old, New) %>%
ggplot()+
geom_vline(xintercept = 2E5, lty = 2)+
geom_segment(aes(x = 2.7E5, xend = 2.2E5, y = 35, yend = 42), col = "red",  arrow = arrow(length = unit(0.2, "cm")))+
geom_line(aes(nCohort, value, col = Method), size = 2) +
geom_ribbon(data = pregather, aes(x = nCohort, ymin = Old, ymax = New), alpha = 0.3)+
geom_point(aes(nCohort, value, col = Method), size = 3)+
theme_bw() +
labs(x = "Number of VPs in original cohort", y = "Time of computation (sec)")
datas %>%
mutate(Old = 55.1 * nCohort / 2E5) %>%
mutate(timeTotal = if_else(timeTotal < 4, timeTotal * 60, timeTotal)) %>%  #transform into minutes whats in sec (carefull reproductibiliy...)
rename(New = timeTotal) %>%
{pregather <<- .} %>%
gather("Method", "value", Old, New) %>%
ggplot()+
geom_vline(xintercept = 2E5, lty = 2)+
geom_segment(aes(x = 2.6E5, xend = 2.2E5, y = 35, yend = 42), col = "red",  arrow = arrow(length = unit(0.2, "cm")))+
geom_line(aes(nCohort, value, col = Method), size = 2) +
geom_ribbon(data = pregather, aes(x = nCohort, ymin = Old, ymax = New), alpha = 0.3)+
geom_point(aes(nCohort, value, col = Method), size = 3)+
theme_bw() +
labs(x = "Number of VPs in original cohort", y = "Time of computation (sec)")
plotG <-  datas %>%
mutate(Old = 55.1 * nCohort / 2E5) %>%
mutate(timeTotal = if_else(timeTotal < 4, timeTotal * 60, timeTotal)) %>%  #transform into minutes whats in sec (carefull reproductibiliy...)
rename(New = timeTotal) %>%
{pregather <<- .} %>%
gather("Method", "value", Old, New) %>%
ggplot()+
geom_vline(xintercept = 2E5, lty = 2)+
geom_segment(aes(x = 2.6E5, xend = 2.2E5, y = 35, yend = 42), col = "red",  arrow = arrow(length = unit(0.2, "cm")))+
geom_line(aes(nCohort, value, col = Method), size = 2) +
geom_ribbon(data = pregather, aes(x = nCohort, ymin = Old, ymax = New), alpha = 0.3)+
geom_point(aes(nCohort, value, col = Method), size = 3)+
theme_bw() +
labs(x = "Number of VPs in original cohort", y = "Time of computation (sec)");plotG
plot_grid(plotA, plotB, plotC,plotD, plotE, plotG, labels = LETTERS, nrow = 2)
library(cowplot)
plot_grid(plotA, plotB, plotC,plotD, plotE, plotG, labels = LETTERS, nrow = 2)
plotC <- temp %>%
ggplot()+
geom_vline(aes(xintercept = 0.375, lty= "Used in\nmain\nanalysis"))+
geom_line(aes(timecomput, value, col = method), size = 2)+
geom_point(aes(timecomput, value, col = method), size = 3)+
geom_segment(aes(x = 0.45, xend = 0.39, y = 35, yend = 39), col = "red",  arrow = arrow(length = unit(0.2, "cm")))+
# geom_line(aes(timecomput, value, col = method), size = 2)+
geom_ribbon(data = temp %>% spread(method, value), aes(x = timecomput, ymin = New, ymax =  Old), alpha = 0.3)+
theme_bw()+
scale_y_log10()+
scale_x_log10()+
labs(x = "Time to compute 2000 VPs with RxODE (sec)",y = "Time for performing 200.000 VPs (sec)", lty = "", col = "Method")+
scale_linetype_manual(values = 2);plotC
plotG <-  datas %>%
mutate(Old = 55.1 * nCohort / 2E5) %>%
mutate(timeTotal = if_else(timeTotal < 4, timeTotal * 60, timeTotal)) %>%  #transform into minutes whats in sec (carefull reproductibiliy...)
rename(New = timeTotal) %>%
{pregather <<- .} %>%
gather("Method", "value", Old, New) %>%
ggplot()+
geom_vline(aes(xintercept = 2E5, lty = "Used in\nmain\nanalysis"))+
geom_segment(aes(x = 2.6E5, xend = 2.2E5, y = 35, yend = 42), col = "red",  arrow = arrow(length = unit(0.2, "cm")))+
geom_line(aes(nCohort, value, col = Method), size = 2) +
geom_ribbon(data = pregather, aes(x = nCohort, ymin = Old, ymax = New), alpha = 0.3)+
geom_point(aes(nCohort, value, col = Method), size = 3)+
theme_bw() +
scale_linetype_manual(values = 2)+
labs(x = "Number of VPs in original cohort", y = "Time of computation (sec)");plotG
plot_grid(plotA, plotB, plotC,plotD, plotE, plotG, labels = LETTERS, nrow = 2)
library(cowplot)
datas %>%
mutate(Old = 55.1 * nCohort / 2E5) %>%
mutate(timeTotal = if_else(timeTotal < 4, timeTotal * 60, timeTotal)) %>%  #transform into minutes whats in sec (carefull reproductibiliy...)
rename(New = timeTotal) %>%
{pregather <<- .} %>%
gather("Method", "value", Old, New)
datas %>%
mutate(Old = 55.1 * nCohort / 2E5) %>%
mutate(timeTotal = if_else(timeTotal < 4, timeTotal * 60, timeTotal)) %>%  #transform into minutes whats in sec (carefull reproductibiliy...)
rename(New = timeTotal) %>%
{pregather <<- .} %>%
gather("Method", "value", Old, New) %>%
mutate(pctExtra = 3236/ nCohort)
datas %>%
mutate(Old = 55.1 * nCohort / 2E5) %>%
mutate(timeTotal = if_else(timeTotal < 4, timeTotal * 60, timeTotal)) %>%  #transform into minutes whats in sec (carefull reproductibiliy...)
rename(New = timeTotal) %>%
{pregather <<- .} %>%
gather("Method", "value", Old, New) %>%
mutate(pctExtra = 3236/ nCohort * 100 %>% round)
datas %>%
mutate(Old = 55.1 * nCohort / 2E5) %>%
mutate(timeTotal = if_else(timeTotal < 4, timeTotal * 60, timeTotal)) %>%  #transform into minutes whats in sec (carefull reproductibiliy...)
rename(New = timeTotal) %>%
{pregather <<- .} %>%
gather("Method", "value", Old, New) %>%
mutate(pctExtra = 3236/ nCohort * 100 %>% round(0))
plotG <-  datas %>%
mutate(Old = 55.1 * nCohort / 2E5) %>%
mutate(timeTotal = if_else(timeTotal < 4, timeTotal * 60, timeTotal)) %>%  #transform into minutes whats in sec (carefull reproductibiliy...)
rename(New = timeTotal) %>%
{pregather <<- .} %>%
gather("Method", "value", Old, New) %>%
mutate(pctExtra = round(3236/ nCohort * 100 ))
plotG
datas %>%
mutate(Old = 55.1 * nCohort / 2E5) %>%
mutate(timeTotal = if_else(timeTotal < 4, timeTotal * 60, timeTotal)) %>%  #transform into minutes whats in sec (carefull reproductibiliy...)
rename(New = timeTotal) %>%
{pregather <<- .} %>%
gather("Method", "value", Old, New) %>%
mutate(pctExtra = round(nsimul/ nCohort * 100 ))
datas %>%
mutate(Old = 55.1 * nCohort / 2E5) %>%
mutate(timeTotal = if_else(timeTotal < 4, timeTotal * 60, timeTotal)) %>%  #transform into minutes whats in sec (carefull reproductibiliy...)
rename(New = timeTotal) %>%
{pregather <<- .} %>%
gather("Method", "value", Old, New) %>%
mutate(pctExtra = round((nCohort-nsimul)/ nCohort * 100 ))
plotG <-  datas %>%
mutate(Old = 55.1 * nCohort / 2E5) %>%
mutate(timeTotal = if_else(timeTotal < 4, timeTotal * 60, timeTotal)) %>%  #transform into minutes whats in sec (carefull reproductibiliy...)
rename(New = timeTotal) %>%
{pregather <<- .} %>%
gather("Method", "value", Old, New) %>%
mutate(pctExtra = round((nCohort-nsimul)/ nCohort * 100 )) %>%
mutate(label = if_else(Method == "Old", "", paste0(pctExtra, "%"))) %>%
ggplot()+
geom_vline(aes(xintercept = 2E5, lty = "Used in\nmain\nanalysis"))+
geom_segment(aes(x = 2.6E5, xend = 2.2E5, y = 35, yend = 42), col = "red",  arrow = arrow(length = unit(0.2, "cm")))+
geom_text(aes(nCohort, value, label = label))+
geom_line(aes(nCohort, value, col = Method), size = 2) +
geom_ribbon(data = pregather, aes(x = nCohort, ymin = Old, ymax = New), alpha = 0.3)+
geom_point(aes(nCohort, value, col = Method), size = 3)+
theme_bw() +
scale_linetype_manual(values = 2)+
labs(x = "Number of VPs in original cohort", y = "Time of computation (sec)");plotG
plotG <-  datas %>%
mutate(Old = 55.1 * nCohort / 2E5) %>%
mutate(timeTotal = if_else(timeTotal < 4, timeTotal * 60, timeTotal)) %>%  #transform into minutes whats in sec (carefull reproductibiliy...)
rename(New = timeTotal) %>%
{pregather <<- .} %>%
gather("Method", "value", Old, New) %>%
mutate(pctExtra = round((nCohort-nsimul)/ nCohort * 100 )) %>%
mutate(label = if_else(Method == "Old", "", paste0(pctExtra, "%"))) %>%
ggplot()+
geom_vline(aes(xintercept = 2E5, lty = "Used in\nmain\nanalysis"))+
geom_segment(aes(x = 2.6E5, xend = 2.2E5, y = 35, yend = 42), col = "red",  arrow = arrow(length = unit(0.2, "cm")))+
geom_text(aes(nCohort, value, label = label), nudge_y = -2)+
geom_line(aes(nCohort, value, col = Method), size = 2) +
geom_ribbon(data = pregather, aes(x = nCohort, ymin = Old, ymax = New), alpha = 0.3)+
geom_point(aes(nCohort, value, col = Method), size = 3)+
theme_bw() +
scale_linetype_manual(values = 2)+
labs(x = "Number of VPs in original cohort", y = "Time of computation (sec)");plotG
plotG <-  datas %>%
mutate(Old = 55.1 * nCohort / 2E5) %>%
mutate(timeTotal = if_else(timeTotal < 4, timeTotal * 60, timeTotal)) %>%  #transform into minutes whats in sec (carefull reproductibiliy...)
rename(New = timeTotal) %>%
{pregather <<- .} %>%
gather("Method", "value", Old, New) %>%
mutate(pctExtra = round((nCohort-nsimul)/ nCohort * 100 )) %>%
mutate(label = if_else(Method == "Old", "", paste0(pctExtra, "%"))) %>%
ggplot()+
geom_vline(aes(xintercept = 2E5, lty = "Used in\nmain\nanalysis"))+
geom_segment(aes(x = 2.6E5, xend = 2.2E5, y = 35, yend = 42), col = "red",  arrow = arrow(length = unit(0.2, "cm")))+
geom_text(aes(nCohort, value, label = label), nudge_y = -20)+
geom_line(aes(nCohort, value, col = Method), size = 2) +
geom_ribbon(data = pregather, aes(x = nCohort, ymin = Old, ymax = New), alpha = 0.3)+
geom_point(aes(nCohort, value, col = Method), size = 3)+
theme_bw() +
scale_linetype_manual(values = 2)+
labs(x = "Number of VPs in original cohort", y = "Time of computation (sec)");plotG
plotG <-  datas %>%
mutate(Old = 55.1 * nCohort / 2E5) %>%
mutate(timeTotal = if_else(timeTotal < 4, timeTotal * 60, timeTotal)) %>%  #transform into minutes whats in sec (carefull reproductibiliy...)
rename(New = timeTotal) %>%
{pregather <<- .} %>%
gather("Method", "value", Old, New) %>%
mutate(pctExtra = round((nCohort-nsimul)/ nCohort * 100 )) %>%
mutate(label = if_else(Method == "Old", "", paste0(pctExtra, "%"))) %>%
ggplot()+
geom_vline(aes(xintercept = 2E5, lty = "Used in\nmain\nanalysis"))+
geom_segment(aes(x = 2.6E5, xend = 2.2E5, y = 35, yend = 42), col = "red",  arrow = arrow(length = unit(0.2, "cm")))+
# geom_text(aes(nCohort, value, label = label), nudge_y = -20)+
geom_line(aes(nCohort, value, col = Method), size = 2) +
geom_ribbon(data = pregather, aes(x = nCohort, ymin = Old, ymax = New), alpha = 0.3)+
geom_point(aes(nCohort, value, col = Method), size = 3)+
theme_bw() +
scale_linetype_manual(values = 2)+
labs(x = "Number of VPs in original cohort", y = "Time of computation (sec)");plotG
plot_grid(plotA, plotB, plotC,plotD, plotE, plotG, labels = LETTERS, nrow = 2)
47.9 / 100
