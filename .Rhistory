# mutate(timeTotal = if_else(timeTotal < 5, timeTotal * 60, timeTotal)) %>%
mutate(pct = as.double(pct)) %>%
mutate(nparam = as.character(nparam)) %>%
mutate(meth = if_else(meth == "", "Centered", "Lowest")) %>%
group_by(nparam, pct, meth) %>%
summarise(min = min(timeTotal), max= max(timeTotal), timeTotal = median(timeTotal)) %>%
ungroup() %>%
ggplot()+
geom_line(data = ref, aes(x= (1- pct)*100, y = medianTotal ), lty = 1)+
geom_ribbon(data = ref, aes(x= (1- pct)*100, ymin = minTotal, ymax = maxTotal, fill = "Time of\nreference" ),alpha = 0.2)+
# geom_line(data = ref, aes(x= (1- pct)*100, y = minTotal ))+
# geom_line(data = ref, aes(x= (1- pct)*100, y = maxTotal ))+
geom_point(aes(x = (1-pct) * 100, y = timeTotal, col = nparam))+
geom_line(aes(x = (1-pct)* 100, y = timeTotal, col = nparam, lty = meth))+
geom_line(data = allTimesWith_green , aes(x = (1-pct)* 100, y =  Yes, col = nparam, lty = meth), alpha = 0.5)+
theme_bw()+
scale_linetype_manual(values = c(1,2))+
scale_fill_manual(values = "grey")+
labs(x = "Percentage of rejected VP", y = "Total Time analysis (sec)", col = "Number\nvarying\nparameters", fill = "",
lty = "Target\nmethod"); plotA
allTimes2
allTimes %>%
filter(iteration == 1)
allTimes2 %>%
filter(iteration == 1)
plotA <- allTimes2 %>%
filter(iteration == 1) %>%
# mutate(timeTotal = if_else(timeTotal < 5, timeTotal * 60, timeTotal)) %>%
mutate(pct = as.double(pct)) %>%
mutate(nparam = as.character(nparam)) %>%
mutate(meth = if_else(meth == "", "Centered", "Lowest")) %>%
group_by(nparam, pct, meth) %>%
summarise(min = min(timeTotal), max= max(timeTotal), timeTotal = median(timeTotal)) %>%
ungroup() %>%
ggplot()+
geom_line(data = ref, aes(x= (1- pct)*100, y = medianTotal ), lty = 1)+
geom_ribbon(data = ref, aes(x= (1- pct)*100, ymin = minTotal, ymax = maxTotal, fill = "Time of\nreference" ),alpha = 0.2)+
# geom_line(data = ref, aes(x= (1- pct)*100, y = minTotal ))+
# geom_line(data = ref, aes(x= (1- pct)*100, y = maxTotal ))+
geom_point(aes(x = (1-pct) * 100, y = timeTotal, col = nparam))+
geom_line(aes(x = (1-pct)* 100, y = timeTotal, col = nparam, lty = meth))+
geom_line(data = allTimesWith_green , aes(x = (1-pct)* 100, y =  Yes, col = nparam, lty = meth), alpha = 0.5)+
theme_bw()+
scale_linetype_manual(values = c(1,2))+
scale_fill_manual(values = "grey")+
labs(x = "Percentage of rejected VP", y = "Total Time analysis (sec)", col = "Number\nvarying\nparameters", fill = "",
lty = "Target\nmethod"); plotA
plotA <- allTimes %>%
filter(iteration == 1) %>%
# mutate(timeTotal = if_else(timeTotal < 5, timeTotal * 60, timeTotal)) %>%
mutate(pct = as.double(pct)) %>%
mutate(nparam = as.character(nparam)) %>%
mutate(meth = if_else(meth == "", "Centered", "Lowest")) %>%
group_by(nparam, pct, meth) %>%
summarise(min = min(timeTotal), max= max(timeTotal), timeTotal = median(timeTotal)) %>%
ungroup() %>%
ggplot()+
geom_line(data = ref, aes(x= (1- pct)*100, y = medianTotal ), lty = 1)+
geom_ribbon(data = ref, aes(x= (1- pct)*100, ymin = minTotal, ymax = maxTotal, fill = "Time of\nreference" ),alpha = 0.2)+
# geom_line(data = ref, aes(x= (1- pct)*100, y = minTotal ))+
# geom_line(data = ref, aes(x= (1- pct)*100, y = maxTotal ))+
geom_point(aes(x = (1-pct) * 100, y = timeTotal, col = nparam))+
geom_line(aes(x = (1-pct)* 100, y = timeTotal, col = nparam, lty = meth))+
geom_line(data = allTimesWith_green , aes(x = (1-pct)* 100, y =  Yes, col = nparam, lty = meth), alpha = 0.5)+
theme_bw()+
scale_linetype_manual(values = c(1,2))+
scale_fill_manual(values = "grey")+
labs(x = "Percentage of rejected VP", y = "Total Time analysis (sec)", col = "Number\nvarying\nparameters", fill = "",
lty = "Target\nmethod"); plotA
allTimes %>%
filter(iteration == 1)
plotA <- allTimes %>%
filter(iteration == 1) %>%
mutate(timeTotal= if_else(pct > 0.5 & timeTotal <50, timeTotal * 60, timeTotal)) %>%  # mutate(timeTotal = if_else(timeTotal < 5, timeTotal * 60, timeTotal)) %>%
mutate(pct = as.double(pct)) %>%
mutate(nparam = as.character(nparam)) %>%
mutate(meth = if_else(meth == "", "Centered", "Lowest")) %>%
group_by(nparam, pct, meth) %>%
summarise(min = min(timeTotal), max= max(timeTotal), timeTotal = median(timeTotal)) %>%
ungroup() %>%
ggplot()+
geom_line(data = ref, aes(x= (1- pct)*100, y = medianTotal ), lty = 1)+
geom_ribbon(data = ref, aes(x= (1- pct)*100, ymin = minTotal, ymax = maxTotal, fill = "Time of\nreference" ),alpha = 0.2)+
# geom_line(data = ref, aes(x= (1- pct)*100, y = minTotal ))+
# geom_line(data = ref, aes(x= (1- pct)*100, y = maxTotal ))+
geom_point(aes(x = (1-pct) * 100, y = timeTotal, col = nparam))+
geom_line(aes(x = (1-pct)* 100, y = timeTotal, col = nparam, lty = meth))+
geom_line(data = allTimesWith_green , aes(x = (1-pct)* 100, y =  Yes, col = nparam, lty = meth), alpha = 0.5)+
theme_bw()+
scale_linetype_manual(values = c(1,2))+
scale_fill_manual(values = "grey")+
labs(x = "Percentage of rejected VP", y = "Total Time analysis (sec)", col = "Number\nvarying\nparameters", fill = "",
lty = "Target\nmethod"); plotA
plotA <- allTimes %>%
filter(iteration == 1) %>%
mutate(timeTotal= if_else(pct > 0.5 & timeTotal <5, timeTotal * 60, timeTotal)) %>%  # mutate(timeTotal = if_else(timeTotal < 5, timeTotal * 60, timeTotal)) %>%
mutate(pct = as.double(pct)) %>%
mutate(nparam = as.character(nparam)) %>%
mutate(meth = if_else(meth == "", "Centered", "Lowest")) %>%
group_by(nparam, pct, meth) %>%
summarise(min = min(timeTotal), max= max(timeTotal), timeTotal = median(timeTotal)) %>%
ungroup() %>%
ggplot()+
geom_line(data = ref, aes(x= (1- pct)*100, y = medianTotal ), lty = 1)+
geom_ribbon(data = ref, aes(x= (1- pct)*100, ymin = minTotal, ymax = maxTotal, fill = "Time of\nreference" ),alpha = 0.2)+
# geom_line(data = ref, aes(x= (1- pct)*100, y = minTotal ))+
# geom_line(data = ref, aes(x= (1- pct)*100, y = maxTotal ))+
geom_point(aes(x = (1-pct) * 100, y = timeTotal, col = nparam))+
geom_line(aes(x = (1-pct)* 100, y = timeTotal, col = nparam, lty = meth))+
geom_line(data = allTimesWith_green , aes(x = (1-pct)* 100, y =  Yes, col = nparam, lty = meth), alpha = 0.5)+
theme_bw()+
scale_linetype_manual(values = c(1,2))+
scale_fill_manual(values = "grey")+
labs(x = "Percentage of rejected VP", y = "Total Time analysis (sec)", col = "Number\nvarying\nparameters", fill = "",
lty = "Target\nmethod"); plotA
plotA <- allTimes %>%
filter(iteration == 1) %>%
mutate(timeTotal= if_else(pct > 0.5 & timeTotal <3, timeTotal * 60, timeTotal)) %>%  # mutate(timeTotal = if_else(timeTotal < 5, timeTotal * 60, timeTotal)) %>%
mutate(pct = as.double(pct)) %>%
mutate(nparam = as.character(nparam)) %>%
mutate(meth = if_else(meth == "", "Centered", "Lowest")) %>%
group_by(nparam, pct, meth) %>%
summarise(min = min(timeTotal), max= max(timeTotal), timeTotal = median(timeTotal)) %>%
ungroup() %>%
ggplot()+
geom_line(data = ref, aes(x= (1- pct)*100, y = medianTotal ), lty = 1)+
geom_ribbon(data = ref, aes(x= (1- pct)*100, ymin = minTotal, ymax = maxTotal, fill = "Time of\nreference" ),alpha = 0.2)+
# geom_line(data = ref, aes(x= (1- pct)*100, y = minTotal ))+
# geom_line(data = ref, aes(x= (1- pct)*100, y = maxTotal ))+
geom_point(aes(x = (1-pct) * 100, y = timeTotal, col = nparam))+
geom_line(aes(x = (1-pct)* 100, y = timeTotal, col = nparam, lty = meth))+
geom_line(data = allTimesWith_green , aes(x = (1-pct)* 100, y =  Yes, col = nparam, lty = meth), alpha = 0.5)+
theme_bw()+
scale_linetype_manual(values = c(1,2))+
scale_fill_manual(values = "grey")+
labs(x = "Percentage of rejected VP", y = "Total Time analysis (sec)", col = "Number\nvarying\nparameters", fill = "",
lty = "Target\nmethod"); plotA
plotA <- allTimes %>%
filter(iteration == 1) %>%
# mutate(timeTotal= if_else(pct > 0.5 & timeTotal <3, timeTotal * 60, timeTotal)) %>%  # mutate(timeTotal = if_else(timeTotal < 5, timeTotal * 60, timeTotal)) %>%
mutate(pct = as.double(pct)) %>%
mutate(nparam = as.character(nparam)) %>%
mutate(meth = if_else(meth == "", "Centered", "Lowest")) %>%
group_by(nparam, pct, meth) %>%
summarise(min = min(timeTotal), max= max(timeTotal), timeTotal = median(timeTotal)) %>%
ungroup() %>%
ggplot()+
geom_line(data = ref, aes(x= (1- pct)*100, y = medianTotal ), lty = 1)+
geom_ribbon(data = ref, aes(x= (1- pct)*100, ymin = minTotal, ymax = maxTotal, fill = "Time of\nreference" ),alpha = 0.2)+
# geom_line(data = ref, aes(x= (1- pct)*100, y = minTotal ))+
# geom_line(data = ref, aes(x= (1- pct)*100, y = maxTotal ))+
geom_point(aes(x = (1-pct) * 100, y = timeTotal, col = nparam))+
geom_line(aes(x = (1-pct)* 100, y = timeTotal, col = nparam, lty = meth))+
geom_line(data = allTimesWith_green , aes(x = (1-pct)* 100, y =  Yes, col = nparam, lty = meth), alpha = 0.5)+
theme_bw()+
scale_linetype_manual(values = c(1,2))+
scale_fill_manual(values = "grey")+
labs(x = "Percentage of rejected VP", y = "Total Time analysis (sec)", col = "Number\nvarying\nparameters", fill = "",
lty = "Target\nmethod"); plotA
) %>%
plotA <- allTimes %>%
filter(iteration == 1) %>%
mutate(timeTotal= if_else(pct > 0.5 & timeTotal <3, timeTotal * 60, timeTotal)) %>%  # mutate(timeTotal = if_else(timeTotal < 5, timeTotal * 60, timeTotal)) %>%
mutate(pct = as.double(pct)) %>%
mutate(nparam = as.character(nparam)) %>%
mutate(meth = if_else(meth == "", "Centered", "Lowest")) %>%
group_by(nparam, pct, meth) %>%
summarise(min = min(timeTotal), max= max(timeTotal), timeTotal = median(timeTotal)) %>%
ungroup() %>%
ggplot()+
geom_line(data = ref, aes(x= (1- pct)*100, y = medianTotal ), lty = 1)+
geom_ribbon(data = ref, aes(x= (1- pct)*100, ymin = minTotal, ymax = maxTotal, fill = "Time of\nreference" ),alpha = 0.2)+
# geom_line(data = ref, aes(x= (1- pct)*100, y = minTotal ))+
# geom_line(data = ref, aes(x= (1- pct)*100, y = maxTotal ))+
geom_point(aes(x = (1-pct) * 100, y = timeTotal, col = nparam))+
geom_line(aes(x = (1-pct)* 100, y = timeTotal, col = nparam, lty = meth))+
geom_line(data = allTimesWith_green , aes(x = (1-pct)* 100, y =  Yes, col = nparam, lty = meth), alpha = 0.5)+
theme_bw()+
scale_linetype_manual(values = c(1,2))+
scale_fill_manual(values = "grey")+
labs(x = "Percentage of rejected VP", y = "Total Time analysis (sec)", col = "Number\nvarying\nparameters", fill = "",
lty = "Target\nmethod"); plotA
plotA <- allTimes %>%
filter(iteration == 1) %>%
mutate(timeTotal= if_else(pct > 0.5 & timeTotal <2, timeTotal * 60, timeTotal)) %>%  # mutate(timeTotal = if_else(timeTotal < 5, timeTotal * 60, timeTotal)) %>%
mutate(pct = as.double(pct)) %>%
mutate(nparam = as.character(nparam)) %>%
mutate(meth = if_else(meth == "", "Centered", "Lowest")) %>%
group_by(nparam, pct, meth) %>%
summarise(min = min(timeTotal), max= max(timeTotal), timeTotal = median(timeTotal)) %>%
ungroup() %>%
ggplot()+
geom_line(data = ref, aes(x= (1- pct)*100, y = medianTotal ), lty = 1)+
geom_ribbon(data = ref, aes(x= (1- pct)*100, ymin = minTotal, ymax = maxTotal, fill = "Time of\nreference" ),alpha = 0.2)+
# geom_line(data = ref, aes(x= (1- pct)*100, y = minTotal ))+
# geom_line(data = ref, aes(x= (1- pct)*100, y = maxTotal ))+
geom_point(aes(x = (1-pct) * 100, y = timeTotal, col = nparam))+
geom_line(aes(x = (1-pct)* 100, y = timeTotal, col = nparam, lty = meth))+
geom_line(data = allTimesWith_green , aes(x = (1-pct)* 100, y =  Yes, col = nparam, lty = meth), alpha = 0.5)+
theme_bw()+
scale_linetype_manual(values = c(1,2))+
scale_fill_manual(values = "grey")+
labs(x = "Percentage of rejected VP", y = "Total Time analysis (sec)", col = "Number\nvarying\nparameters", fill = "",
lty = "Target\nmethod"); plotA
allTimes %>%
filter(iteration == 1) %>%
filter(pct != 0.01)
plotA <- allTimes %>%
filter(iteration == 1) %>%
filter(pct != 0.99) %>%
# mutate(timeTotal= if_else(pct > 0.5 & timeTotal <2, timeTotal * 60, timeTotal)) %>%  # mutate(timeTotal = if_else(timeTotal < 5, timeTotal * 60, timeTotal)) %>%
mutate(pct = as.double(pct)) %>%
mutate(nparam = as.character(nparam)) %>%
mutate(meth = if_else(meth == "", "Centered", "Lowest")) %>%
group_by(nparam, pct, meth) %>%
summarise(min = min(timeTotal), max= max(timeTotal), timeTotal = median(timeTotal)) %>%
ungroup() %>%
ggplot()+
geom_line(data = ref, aes(x= (1- pct)*100, y = medianTotal ), lty = 1)+
geom_ribbon(data = ref, aes(x= (1- pct)*100, ymin = minTotal, ymax = maxTotal, fill = "Time of\nreference" ),alpha = 0.2)+
# geom_line(data = ref, aes(x= (1- pct)*100, y = minTotal ))+
# geom_line(data = ref, aes(x= (1- pct)*100, y = maxTotal ))+
geom_point(aes(x = (1-pct) * 100, y = timeTotal, col = nparam))+
geom_line(aes(x = (1-pct)* 100, y = timeTotal, col = nparam, lty = meth))+
geom_line(data = allTimesWith_green , aes(x = (1-pct)* 100, y =  Yes, col = nparam, lty = meth), alpha = 0.5)+
theme_bw()+
scale_linetype_manual(values = c(1,2))+
scale_fill_manual(values = "grey")+
labs(x = "Percentage of rejected VP", y = "Total Time analysis (sec)", col = "Number\nvarying\nparameters", fill = "",
lty = "Target\nmethod"); plotA
plotA <- allTimes %>%
filter(iteration == 1) %>%
filter(pct != 0.99, 0.875) %>%
# mutate(timeTotal= if_else(pct > 0.5 & timeTotal <2, timeTotal * 60, timeTotal)) %>%  # mutate(timeTotal = if_else(timeTotal < 5, timeTotal * 60, timeTotal)) %>%
mutate(pct = as.double(pct)) %>%
mutate(nparam = as.character(nparam)) %>%
mutate(meth = if_else(meth == "", "Centered", "Lowest")) %>%
group_by(nparam, pct, meth) %>%
summarise(min = min(timeTotal), max= max(timeTotal), timeTotal = median(timeTotal)) %>%
ungroup() %>%
ggplot()+
geom_line(data = ref, aes(x= (1- pct)*100, y = medianTotal ), lty = 1)+
geom_ribbon(data = ref, aes(x= (1- pct)*100, ymin = minTotal, ymax = maxTotal, fill = "Time of\nreference" ),alpha = 0.2)+
# geom_line(data = ref, aes(x= (1- pct)*100, y = minTotal ))+
# geom_line(data = ref, aes(x= (1- pct)*100, y = maxTotal ))+
geom_point(aes(x = (1-pct) * 100, y = timeTotal, col = nparam))+
geom_line(aes(x = (1-pct)* 100, y = timeTotal, col = nparam, lty = meth))+
geom_line(data = allTimesWith_green , aes(x = (1-pct)* 100, y =  Yes, col = nparam, lty = meth), alpha = 0.5)+
theme_bw()+
scale_linetype_manual(values = c(1,2))+
scale_fill_manual(values = "grey")+
labs(x = "Percentage of rejected VP", y = "Total Time analysis (sec)", col = "Number\nvarying\nparameters", fill = "",
lty = "Target\nmethod"); plotA
plotA <- allTimes %>%
filter(iteration == 1) %>%
filter(pct != 0.99,pct != 0.875) %>%
# mutate(timeTotal= if_else(pct > 0.5 & timeTotal <2, timeTotal * 60, timeTotal)) %>%  # mutate(timeTotal = if_else(timeTotal < 5, timeTotal * 60, timeTotal)) %>%
mutate(pct = as.double(pct)) %>%
mutate(nparam = as.character(nparam)) %>%
mutate(meth = if_else(meth == "", "Centered", "Lowest")) %>%
group_by(nparam, pct, meth) %>%
summarise(min = min(timeTotal), max= max(timeTotal), timeTotal = median(timeTotal)) %>%
ungroup() %>%
ggplot()+
geom_line(data = ref, aes(x= (1- pct)*100, y = medianTotal ), lty = 1)+
geom_ribbon(data = ref, aes(x= (1- pct)*100, ymin = minTotal, ymax = maxTotal, fill = "Time of\nreference" ),alpha = 0.2)+
# geom_line(data = ref, aes(x= (1- pct)*100, y = minTotal ))+
# geom_line(data = ref, aes(x= (1- pct)*100, y = maxTotal ))+
geom_point(aes(x = (1-pct) * 100, y = timeTotal, col = nparam))+
geom_line(aes(x = (1-pct)* 100, y = timeTotal, col = nparam, lty = meth))+
geom_line(data = allTimesWith_green , aes(x = (1-pct)* 100, y =  Yes, col = nparam, lty = meth), alpha = 0.5)+
theme_bw()+
scale_linetype_manual(values = c(1,2))+
scale_fill_manual(values = "grey")+
labs(x = "Percentage of rejected VP", y = "Total Time analysis (sec)", col = "Number\nvarying\nparameters", fill = "",
lty = "Target\nmethod"); plotA
plotA <- allTimes %>%
# filter(iteration == 1) %>%
filter(pct != 0.99,pct != 0.875) %>%
# mutate(timeTotal= if_else(pct > 0.5 & timeTotal <2, timeTotal * 60, timeTotal)) %>%  # mutate(timeTotal = if_else(timeTotal < 5, timeTotal * 60, timeTotal)) %>%
mutate(pct = as.double(pct)) %>%
mutate(nparam = as.character(nparam)) %>%
mutate(meth = if_else(meth == "", "Centered", "Lowest")) %>%
group_by(nparam, pct, meth) %>%
summarise(min = min(timeTotal), max= max(timeTotal), timeTotal = median(timeTotal)) %>%
ungroup() %>%
ggplot()+
geom_line(data = ref, aes(x= (1- pct)*100, y = medianTotal ), lty = 1)+
geom_ribbon(data = ref, aes(x= (1- pct)*100, ymin = minTotal, ymax = maxTotal, fill = "Time of\nreference" ),alpha = 0.2)+
# geom_line(data = ref, aes(x= (1- pct)*100, y = minTotal ))+
# geom_line(data = ref, aes(x= (1- pct)*100, y = maxTotal ))+
geom_point(aes(x = (1-pct) * 100, y = timeTotal, col = nparam))+
geom_line(aes(x = (1-pct)* 100, y = timeTotal, col = nparam, lty = meth))+
geom_line(data = allTimesWith_green , aes(x = (1-pct)* 100, y =  Yes, col = nparam, lty = meth), alpha = 0.5)+
theme_bw()+
scale_linetype_manual(values = c(1,2))+
scale_fill_manual(values = "grey")+
labs(x = "Percentage of rejected VP", y = "Total Time analysis (sec)", col = "Number\nvarying\nparameters", fill = "",
lty = "Target\nmethod"); plotA
plotA <- allTimes %>%
mutate(pct = as.double(pct)) %>%
mutate(nparam = as.character(nparam)) %>%
mutate(meth = if_else(meth == "", "Centered", "Lowest")) %>%
group_by(nparam, pct, meth) %>%
summarise(min = min(timeTotal), max= max(timeTotal), timeTotal = median(timeTotal)) %>%
ungroup() %>%
ggplot()+
geom_line(data = ref, aes(x= (1- pct)*100, y = medianTotal ), lty = 1)+
geom_ribbon(data = ref, aes(x= (1- pct)*100, ymin = minTotal, ymax = maxTotal, fill = "Time of\nreference" ),alpha = 0.2)+
# geom_line(data = ref, aes(x= (1- pct)*100, y = minTotal ))+
# geom_line(data = ref, aes(x= (1- pct)*100, y = maxTotal ))+
geom_point(aes(x = (1-pct) * 100, y = timeTotal, col = nparam))+
geom_line(aes(x = (1-pct)* 100, y = timeTotal, col = nparam, lty = meth))+
geom_line(data = allTimesWith_green , aes(x = (1-pct)* 100, y =  Yes, col = nparam, lty = meth), alpha = 0.5)+
theme_bw()+
scale_linetype_manual(values = c(1,2))+
scale_fill_manual(values = "grey")+
labs(x = "Percentage of rejected VP", y = "Total Time analysis (sec)", col = "Number\nvarying\nparameters", fill = "",
lty = "Target\nmethod"); plotA
#  plot A - making: Simeoni analysis -----------------------------------------------
setwd("D:/these/Second_project/QSP/modeling_work/VT_simeoni/article_QSPVP/data/Simeoni_no_green")
allTimes <- readRDS("full_analysis.RDS") #%>%
ref <- readRDS("../Simeoni_ref/timeReference.RDS")
allTimesWith_green <- readRDS("D:/these/Second_project/QSP/modeling_work/VT_simeoni/article_QSPVP/data/Simeoni/full_analysis.RDS") %>%
mutate(pct = as.double(pct)) %>%
mutate(nparam = as.character(nparam)) %>%
mutate(meth = if_else(meth == "", "Centered", "Lowest")) %>%
group_by(nparam, pct, meth) %>%
summarise(timeTotal = median(timeTotal)) %>%
ungroup() %>%
rename(Yes = timeTotal)
plotA <- allTimes %>%
mutate(pct = as.double(pct)) %>%
mutate(nparam = as.character(nparam)) %>%
mutate(meth = if_else(meth == "", "Centered", "Lowest")) %>%
group_by(nparam, pct, meth) %>%
summarise(min = min(timeTotal), max= max(timeTotal), timeTotal = median(timeTotal)) %>%
ungroup() %>%
ggplot()+
geom_line(data = ref, aes(x= (1- pct)*100, y = medianTotal ), lty = 1)+
geom_ribbon(data = ref, aes(x= (1- pct)*100, ymin = minTotal, ymax = maxTotal, fill = "Time of\nreference" ),alpha = 0.2)+
# geom_line(data = ref, aes(x= (1- pct)*100, y = minTotal ))+
# geom_line(data = ref, aes(x= (1- pct)*100, y = maxTotal ))+
geom_point(aes(x = (1-pct) * 100, y = timeTotal, col = nparam))+
geom_line(aes(x = (1-pct)* 100, y = timeTotal, col = nparam, lty = meth))+
geom_line(data = allTimesWith_green , aes(x = (1-pct)* 100, y =  Yes, col = nparam, lty = meth), alpha = 0.5)+
theme_bw()+
scale_linetype_manual(values = c(1,2))+
scale_fill_manual(values = "grey")+
labs(x = "Percentage of rejected VP", y = "Total Time analysis (sec)", col = "Number\nvarying\nparameters", fill = "",
lty = "Target\nmethod"); plotA
tiff(width = 4500, height = 1500,filename = "D:/these/Second_project/QSP/modeling_work/VT_simeoni/article_QSPVP/figures_300_dpi/figS8.tiff", res = 300)
cowplot::plot_grid(plotA, plotB, plotC, nrow = 1, labels = letters)
dev.off()
shell.exec( "D:/these/Second_project/QSP/modeling_work/VT_simeoni/article_QSPVP/figures_300_dpi/figS8.tiff")
plotC <- allTimes %>%
filter(pct == 1) %>%
left_join(allTimesSummary) %>%
filter(!is.na(min)) %>%
gather("param", "value", GreenFilter, RedFilter, RxODE,Other) %>%
ggplot(aes(x = labelx, y = value, fill = param))+
geom_col(aes(x = labelx, y = value, fill = param), alpha = 0.5)+
geom_text(aes(x = labelx, y = value, label = paste0(round(value),"s"), group = param),       position = position_stack(vjust = .5))+
theme_bw()+
scale_fill_manual(values = c("darkgreen", "grey", "red", "blue"))+
labs(x = "Number of parameters with monotonicity", y = "Cumulative time for each step (sec)", fill = "Step"); plotC
allTimesSummary <- allTimes %>%
group_by(nparam, pct,GreenFilterlab ) %>%
summarise(min = min(timeTotal), max = max(timeTotal), timeTotal = median(timeTotal))
setwd("D:/these/Second_project/QSP/modeling_work/VT_simeoni/article_QSPVP/data/Simeoni_less_usable_param")
ref <- readRDS("../Simeoni_ref/timeReference.RDS")
allTimes <- readRDS("full_analysis.RDS") %>%
mutate(labelx = paste0( 5- nparam, "/5")) %>%
mutate(GreenFilterlab = if_else(pct == 0, "Without", "With"))
allTimesSummary <- allTimes %>%
group_by(nparam, pct,GreenFilterlab ) %>%
summarise(min = min(timeTotal), max = max(timeTotal), timeTotal = median(timeTotal))
plotB <- allTimesSummary %>%
ggplot()+
geom_rect(data = mtcars, aes(xmin = -Inf, xmax = Inf, ymin = ref$minTotal[ref$pct == 0.5], ymax =  ref$maxTotal[ref$pct == 0.5], alpha = 0.3), lty = 1,alpha = 0.15, fill = "grey")+
geom_hline(data = mtcars, aes(yintercept = ref$medianTotal[ref$pct == 0.5]), lty =1)+
geom_line(aes(x = 5-nparam, y = timeTotal, col =   GreenFilterlab))+
geom_ribbon(aes(x = 5-nparam, ymin = min, ymax = max, fill =   GreenFilterlab), alpha = 0.3)+
geom_point(aes(x = 5-nparam, y = timeTotal, col =   GreenFilterlab))+
# scale_fill_manual(values = "grey")+
# scale_y_log10()
theme_bw()+
scale_x_continuous(labels = c(paste0(0:5, "/5")))+
labs( x = "Number of parameters with monotonicity ",y = "Time of analysis (s)", fill = "", col = "Green Filter");plotB
plotC <- allTimes %>%
filter(pct == 1) %>%
left_join(allTimesSummary) %>%
filter(!is.na(min)) %>%
gather("param", "value", GreenFilter, RedFilter, RxODE,Other) %>%
ggplot(aes(x = labelx, y = value, fill = param))+
geom_col(aes(x = labelx, y = value, fill = param), alpha = 0.5)+
geom_text(aes(x = labelx, y = value, label = paste0(round(value),"s"), group = param),       position = position_stack(vjust = .5))+
theme_bw()+
scale_fill_manual(values = c("darkgreen", "grey", "red", "blue"))+
labs(x = "Number of parameters with monotonicity", y = "Cumulative time for each step (sec)", fill = "Step"); plotC
plotB <- allTimesSummary %>%
ggplot()+
geom_rect(data = mtcars, aes(xmin = -Inf, xmax = Inf, ymin = ref$minTotal[ref$pct == 0.5], ymax =  ref$maxTotal[ref$pct == 0.5], alpha = 0.3), lty = 1,alpha = 0.15, fill = "grey")+
geom_hline(data = mtcars, aes(yintercept = ref$medianTotal[ref$pct == 0.5]), lty =1)+
geom_line(aes(x = 5-nparam, y = timeTotal, col =   GreenFilterlab))+
geom_ribbon(aes(x = 5-nparam, ymin = min, ymax = max, fill =   GreenFilterlab), alpha = 0.3)+
geom_point(aes(x = 5-nparam, y = timeTotal, col =   GreenFilterlab))+
# scale_fill_manual(values = "grey")+
# scale_y_log10()
theme_bw()+
scale_x_continuous(labels = c(paste0(0:5, "/5")))+
labs( x = "Number of parameters with monotonicity ",y = "Time of analysis (s)", fill = "", col = "Green Filter");plotB
plotB <- allTimesSummary %>%
ggplot()+
geom_rect(data = mtcars, aes(xmin = -Inf, xmax = Inf, ymin = ref$minTotal[ref$pct == 0.5], ymax =  ref$maxTotal[ref$pct == 0.5], alpha = "Time of\nreference"), lty = 1,alpha = 0.15, fill = "grey")+
geom_hline(data = mtcars, aes(yintercept = ref$medianTotal[ref$pct == 0.5]), lty =1)+
geom_line(aes(x = 5-nparam, y = timeTotal, col =   GreenFilterlab))+
geom_ribbon(aes(x = 5-nparam, ymin = min, ymax = max, fill =   GreenFilterlab), alpha = 0.3)+
geom_point(aes(x = 5-nparam, y = timeTotal, col =   GreenFilterlab))+
# scale_fill_manual(values = "grey")+
# scale_y_log10()
theme_bw()+
scale_x_continuous(labels = c(paste0(0:5, "/5")))+
labs( x = "Number of parameters with monotonicity ",y = "Time of analysis (s)", fill = "", col = "Green Filter");plotB
plotB <- allTimesSummary %>%
ggplot()+
geom_rect(data = mtcars, aes(xmin = -Inf, xmax = Inf, ymin = ref$minTotal[ref$pct == 0.5], ymax =  ref$maxTotal[ref$pct == 0.5], alpha = "Time of\nreference"), lty = 1, fill = "grey")+
scale_alpha_manual(values = 0.25)+
geom_hline(data = mtcars, aes(yintercept = ref$medianTotal[ref$pct == 0.5]), lty =1)+
geom_line(aes(x = 5-nparam, y = timeTotal, col =   GreenFilterlab))+
geom_ribbon(aes(x = 5-nparam, ymin = min, ymax = max, fill =   GreenFilterlab), alpha = 0.3)+
geom_point(aes(x = 5-nparam, y = timeTotal, col =   GreenFilterlab))+
# scale_fill_manual(values = "grey")+
# scale_y_log10()
theme_bw()+
scale_x_continuous(labels = c(paste0(0:5, "/5")))+
labs( x = "Number of parameters with monotonicity ",y = "Time of analysis (s)", fill = "", col = "Green Filter");plotB
plotB <- allTimesSummary %>%
ggplot()+
geom_rect(data = mtcars, aes(xmin = -Inf, xmax = Inf, ymin = ref$minTotal[ref$pct == 0.5], ymax =  ref$maxTotal[ref$pct == 0.5], alpha = "Time of\nreference"), lty = 1, fill = "grey")+
scale_alpha_manual(values = 0.25)+
geom_hline(data = mtcars, aes(yintercept = ref$medianTotal[ref$pct == 0.5]), lty =1)+
geom_line(aes(x = 5-nparam, y = timeTotal, col =   GreenFilterlab))+
geom_ribbon(aes(x = 5-nparam, ymin = min, ymax = max, fill =   GreenFilterlab), alpha = 0.3)+
geom_point(aes(x = 5-nparam, y = timeTotal, col =   GreenFilterlab))+
# scale_fill_manual(values = "grey")+
# scale_y_log10()
theme_bw()+
scale_x_continuous(labels = c(paste0(0:5, "/5")))+
labs(fill = "",  x = "Number of parameters with monotonicity ",y = "Time of analysis (s)", fill = "", col = "Green Filter");plotB
plotB <- allTimesSummary %>%
ggplot()+
geom_rect(data = mtcars, aes(xmin = -Inf, xmax = Inf, ymin = ref$minTotal[ref$pct == 0.5], ymax =  ref$maxTotal[ref$pct == 0.5], alpha = "Time of\nreference"), lty = 1, fill = "grey")+
scale_alpha_manual(values = 0.25)+
geom_hline(data = mtcars, aes(yintercept = ref$medianTotal[ref$pct == 0.5]), lty =1)+
geom_line(aes(x = 5-nparam, y = timeTotal, col =   GreenFilterlab))+
geom_ribbon(aes(x = 5-nparam, ymin = min, ymax = max, fill =   GreenFilterlab), alpha = 0.3)+
geom_point(aes(x = 5-nparam, y = timeTotal, col =   GreenFilterlab))+
# scale_fill_manual(values = "grey")+
# scale_y_log10()
theme_bw()+
scale_x_continuous(labels = c(paste0(0:5, "/5")))+
labs(alpha = "",  x = "Number of parameters with monotonicity ",y = "Time of analysis (s)", fill = "", col = "Green Filter");plotB
plotB <- allTimesSummary %>%
ggplot()+
geom_rect(data = mtcars, aes(xmin = -Inf, xmax = Inf, ymin = ref$minTotal[ref$pct == 0.5], ymax =  ref$maxTotal[ref$pct == 0.5], alpha = "Time of\nreference"), lty = 1, fill = "grey")+
scale_alpha_manual(values = 0.25)+
geom_hline(data = mtcars, aes(yintercept = ref$medianTotal[ref$pct == 0.5]), lty =1)+
geom_line(aes(x = 5-nparam, y = timeTotal, col =   GreenFilterlab))+
geom_ribbon(aes(x = 5-nparam, ymin = min, ymax = max, fill =   GreenFilterlab), alpha = 0.3)+
geom_point(aes(x = 5-nparam, y = timeTotal, col =   GreenFilterlab))+
# scale_fill_manual(values = "grey")+
# scale_y_log10()
theme_bw()+
scale_x_continuous(labels = c(paste0(0:5, "/5")))+
labs(alpha = "",  x = "Number of parameters with monotonicity ",y = "Time of analysis (s)", fill = "Green Filter", col = "Green Filter");plotB
plotC <- allTimes %>%
filter(pct == 1) %>%
left_join(allTimesSummary) %>%
filter(!is.na(min)) %>%
gather("param", "value", GreenFilter, RedFilter, RxODE,Other) %>%
ggplot(aes(x = labelx, y = value, fill = param))+
geom_col(aes(x = labelx, y = value, fill = param), alpha = 0.5)+
geom_text(aes(x = labelx, y = value, label = paste0(round(value),"s"), group = param),       position = position_stack(vjust = .5))+
theme_bw()+
scale_fill_manual(values = c("darkgreen", "grey", "red", "blue"))+
labs(x = "Number of parameters with monotonicity", y = "Cumulative time for each step (sec)", fill = "Step"); plotC
tiff(width = 4500, height = 1500,filename = "D:/these/Second_project/QSP/modeling_work/VT_simeoni/article_QSPVP/figures_300_dpi/figS8.tiff", res = 300)
cowplot::plot_grid(plotA, plotB, plotC, nrow = 1, labels = letters)
dev.off()
shell.exec( "D:/these/Second_project/QSP/modeling_work/VT_simeoni/article_QSPVP/figures_300_dpi/figS8.tiff")
str_split(toread, pattern = "_", simplify = T) %>%
as_tibble() %>%
mutate(V3 = gsub("\\.RDS","", V3 )) %>%
rename(nparam = V1, pct = V2, iteration = V3, meth= V4) %>%
mutate(pct = as.double(pct), nparam = as.double(nparam)) %>%
mutate(file = toread) %>%
mutate(results = map(file, function(x){
# x <- "1_0.5_3.RDS"
# print(x)
obj <- readRDS(x)
timetable(obj) %>%
spread(step, sum) %>%
mutate(VPfound= obj$poolVP %>% nrow, nsimul = obj$timeTrack$poolVP_compteur %>% pull(nsimul) %>% sum,
timeTotal = obj$timeTrack$tTOTAL %>% as.double(), Tgreen1 = obj$timeTrack$poolVP_compteur %>%  slice(1) %>% pull(TimeTotalGreenFilter)%>% as.double(),
Tred1 = obj$timeTrack$poolVP_compteur %>%  slice(1) %>% pull(TimeTotalRedFilter)%>% as.double(),
nremRed1 = obj$timeTrack$poolVP_compteur %>%  slice(1) %>% pull(NremovedRedFilter)%>% as.double(),
ndoneGreen1 = obj$timeTrack$poolVP_compteur %>%  slice(1) %>% pull(nextrapoGreen)%>% as.double()
)
})) %>%
unnest() %>%
saveRDS("full_analysis.RDS")
