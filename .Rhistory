as_tibble %>%
left_join(ind_params %>% distinct(id, what, param))
simulations %>%
filter(what != "ref") %>%
filter(tumVol > 1e-5) %>%
ggplot()+
geom_line(aes(time, tumVol, col = what))+
geom_line(data = simulations %>% filter(what == "ref") %>% select(-param), aes(time, tumVol))+
facet_wrap(~param, scales = "free")+
scale_y_log10()+
theme_bw()
# copy paste the table in the console, fill min and max, evaluate it:
values <- domain <- tribble(~param, ~min, ~ref,  ~max,
"ke", 0 , 0.3, 2,
"Vd", 1 , 5 ,20,
"lambda0", 0.1, 0.5 ,5 ,
"lambda1", 0.3, 50 ,10 ,
"psi", 10, 20, 40,
"k2", 0, 0.01 ,0.1,
"k1", 0.1,1 ,2 )
find_relative <- function(..., model = model_RxODE,   values = domain, protocol = "dose50", sensitivity = 1E-6){
# output  = exprs(tumVol, Conc)
output <- enexprs(...)
model_RxODE <- model
param <- values$param
ref <- values %>%
distinct(param, ref) %>%
spread(param, ref) %>%
mutate(what = "ref", param = "ref")
map(param, function(x){
min <- max <- ref
min[[x]] <- values$min[values$param == x]
max[[x]] <- values$max[values$param == x]
bind_rows(
min %>% mutate(what = "min"),
max %>% mutate(what = "max")
) %>%
mutate(param = x)
}) %>%
bind_rows() %>%
bind_rows(ref)-> allvalues
# map(param, function(x)){}
#
# crossing(a = param, b = param)  %>%
#
# map(param, ~  paste0(.x, c("min", "max", "ref")) )
#
# values
#
# if(is.null(param)) param <- names(values)
ind_params <- allvalues %>%
rowid_to_column("id")
protocol2 <- protocols[[protocol]]
protocol2 <-   protocol2 %>%
select(-time) %>%
crossing(time = times) %>%
mutate(amt = 0, evid = 0) %>%
bind_rows(protocol2 %>% mutate(evid = 1)) %>%
crossing(id = unique(ind_params$id)) %>%
arrange(id, time, desc(amt))
simulations <- model_RxODE$solve(ind_params %>% select(-what, -param),protocol2 , states) %>%
as_tibble %>%
left_join(ind_params %>% distinct(id, what, param))
simulations %>%
filter(what != "ref") %>%
filter(tumVol > 1e-5) %>%
ggplot()+
geom_line(aes(time, tumVol, col = what))+
geom_line(data = simulations %>% filter(what == "ref") %>% select(-param), aes(time, tumVol))+
facet_wrap(~param, scales = "free")+
scale_y_log10()+
theme_bw()
res <- simulations2(ind_param = ind_params, add_events = protocol, returnSim = T,
icmt = self$initial_cmt_values, time_vec =self$times,
pardf = self$parameters_default_values, model = self$model)#;res
simuls <-  simulations(model = model_RxODE,ind_param =  allvalues, add_events = protocols[[protocol]]) %>%
mutate(ref = !!output) %>%
select(time, ref)
# param <- model_RxODE$params
tibble(param) %>%
mutate(test = map_chr(param, function(x){
# print(x)
values2 <- values
values2[[x]] <- values2[[x]] * 10
simx2 <- simulations(model = model_RxODE,values2, add_events = protocols[[protocol]])
for_analysis <- ref %>%
left_join(simx2, by = "time") %>%
mutate(test = !!output - ref) %>%
mutate(test = if_else(abs(test) < sensitivity, 0, test)) %>%
pull(test)
lengthref <- length(for_analysis)
# is it always higher?
if(sum(for_analysis == 0) == lengthref) return("all0_indep_or_need_increase")
if(sum(for_analysis >= 0) == lengthref) return("increase")
if(sum(for_analysis <= 0) == lengthref) return("decrease")
return("time_dep")
}))
}
param <- values$param
ref <- values %>%
distinct(param, ref) %>%
spread(param, ref) %>%
mutate(what = "ref", param = "ref")
map(param, function(x){
min <- max <- ref
min[[x]] <- values$min[values$param == x]
max[[x]] <- values$max[values$param == x]
bind_rows(
min %>% mutate(what = "min"),
max %>% mutate(what = "max")
) %>%
mutate(param = x)
}) %>%
bind_rows() %>%
bind_rows(ref)-> allvalues
ind_params <- allvalues %>%
rowid_to_column("id")
protocol2 <- protocols[[protocol]]
protocol2 <-   protocol2 %>%
select(-time) %>%
crossing(time = times) %>%
mutate(amt = 0, evid = 0) %>%
bind_rows(protocol2 %>% mutate(evid = 1)) %>%
crossing(id = unique(ind_params$id)) %>%
arrange(id, time, desc(amt))
simulations <- model_RxODE$solve(ind_params %>% select(-what, -param),protocol2 , states) %>%
as_tibble %>%
left_join(ind_params %>% distinct(id, what, param))
simulations %>%
filter(what != "ref") %>%
filter(tumVol > 1e-5) %>%
ggplot()+
geom_line(aes(time, tumVol, col = what))+
geom_line(data = simulations %>% filter(what == "ref") %>% select(-param), aes(time, tumVol))+
facet_wrap(~param, scales = "free")+
scale_y_log10()+
theme_bw()
# copy paste the table in the console, fill min and max, evaluate it:
values <- domain <- tribble(~param, ~min, ~ref,  ~max,
"ke", 0 , 0.3, 2,
"Vd", 1 , 5 ,20,
"lambda0", 0.1, 0.5 ,5 ,
"lambda1", 0.3, 50 ,10 ,
"psi", 10, 20, 40,
"k2", 0, 0.05 ,2,
"k1", 0.1,1 ,2 )
param <- values$param
ref <- values %>%
distinct(param, ref) %>%
spread(param, ref) %>%
mutate(what = "ref", param = "ref")
map(param, function(x){
min <- max <- ref
min[[x]] <- values$min[values$param == x]
max[[x]] <- values$max[values$param == x]
bind_rows(
min %>% mutate(what = "min"),
max %>% mutate(what = "max")
) %>%
mutate(param = x)
}) %>%
bind_rows() %>%
bind_rows(ref)-> allvalues
ind_params <- allvalues %>%
rowid_to_column("id")
protocol2 <- protocols[[protocol]]
protocol2 <-   protocol2 %>%
select(-time) %>%
crossing(time = times) %>%
mutate(amt = 0, evid = 0) %>%
bind_rows(protocol2 %>% mutate(evid = 1)) %>%
crossing(id = unique(ind_params$id)) %>%
arrange(id, time, desc(amt))
simulations <- model_RxODE$solve(ind_params %>% select(-what, -param),protocol2 , states) %>%
as_tibble %>%
left_join(ind_params %>% distinct(id, what, param))
simulations %>%
filter(what != "ref") %>%
filter(tumVol > 1e-5) %>%
ggplot()+
geom_line(aes(time, tumVol, col = what))+
geom_line(data = simulations %>% filter(what == "ref") %>% select(-param), aes(time, tumVol))+
facet_wrap(~param, scales = "free")+
scale_y_log10()+
theme_bw()
allvalues
# copy paste the table in the console, fill min and max, evaluate it:
values <- domain <- tribble(~param, ~min, ~ref,  ~max,
"ke", 0 , 0.3, 2,
"Vd", 1 , 5 ,20,
"lambda0", 0.1, 0.5 ,5 ,
"lambda1", 0.3, 50 ,10 ,
"psi", 10, 20, 40,
"k2", 0, 0.05 ,2,
"k1", 0.1,1 ,2 )
model_RxODE <- model
param <- values$param
ref <- values %>%
distinct(param, ref) %>%
spread(param, ref) %>%
mutate(what = "ref", param = "ref")
map(param, function(x){
min <- max <- ref
min[[x]] <- values$min[values$param == x]
max[[x]] <- values$max[values$param == x]
bind_rows(
min %>% mutate(what = "min"),
max %>% mutate(what = "max")
) %>%
mutate(param = x)
}) %>%
bind_rows() %>%
bind_rows(ref)-> allvalues
ind_params <- allvalues %>%
rowid_to_column("id")
protocol2 <- protocols[[protocol]]
protocol2 <-   protocol2 %>%
select(-time) %>%
crossing(time = times) %>%
mutate(amt = 0, evid = 0) %>%
bind_rows(protocol2 %>% mutate(evid = 1)) %>%
crossing(id = unique(ind_params$id)) %>%
arrange(id, time, desc(amt))
simulations <- model_RxODE$solve(ind_params %>% select(-what, -param),protocol2 , states) %>%
as_tibble %>%
left_join(ind_params %>% distinct(id, what, param))
simulations %>%
filter(what != "ref") %>%
filter(tumVol > 1e-5) %>%
ggplot()+
geom_line(aes(time, tumVol, col = what))+
geom_line(data = simulations %>% filter(what == "ref") %>% select(-param), aes(time, tumVol))+
facet_wrap(~param, scales = "free")+
scale_y_log10()+
theme_bw()
# copy paste the table in the console, fill min and max, evaluate it:
values <- domain <- tribble(~param, ~min, ~ref,  ~max,
"ke", 0 , 0.3, 2,
"Vd", 1 , 5 ,20,
"lambda0", 0.1, 0.5 ,5 ,
"lambda1", 0.3, 50 ,100 ,
"psi", 10, 20, 40,
"k2", 0, 0.05 ,2,
"k1", 0.1,1 ,2 )
model_RxODE <- model
param <- values$param
ref <- values %>%
distinct(param, ref) %>%
spread(param, ref) %>%
mutate(what = "ref", param = "ref")
map(param, function(x){
min <- max <- ref
min[[x]] <- values$min[values$param == x]
max[[x]] <- values$max[values$param == x]
bind_rows(
min %>% mutate(what = "min"),
max %>% mutate(what = "max")
) %>%
mutate(param = x)
}) %>%
bind_rows() %>%
bind_rows(ref)-> allvalues
ind_params <- allvalues %>%
rowid_to_column("id")
protocol2 <- protocols[[protocol]]
protocol2 <-   protocol2 %>%
select(-time) %>%
crossing(time = times) %>%
mutate(amt = 0, evid = 0) %>%
bind_rows(protocol2 %>% mutate(evid = 1)) %>%
crossing(id = unique(ind_params$id)) %>%
arrange(id, time, desc(amt))
simulations <- model_RxODE$solve(ind_params %>% select(-what, -param),protocol2 , states) %>%
as_tibble %>%
left_join(ind_params %>% distinct(id, what, param))
simulations %>%
filter(what != "ref") %>%
filter(tumVol > 1e-5) %>%
ggplot()+
geom_line(aes(time, tumVol, col = what))+
geom_line(data = simulations %>% filter(what == "ref") %>% select(-param), aes(time, tumVol))+
facet_wrap(~param, scales = "free")+
scale_y_log10()+
theme_bw()
simulations %>%
filter(what != "ref") %>%
filter(tumVol > 1e-5) %>%
ggplot()+
geom_line(aes(time, tumVol, col = what))+
geom_line(data = simulations %>% filter(what == "ref") %>% select(-param), aes(time, tumVol, col = "ref"))+
facet_wrap(~param, scales = "free")+
scale_y_log10()+
theme_bw()
simulations %>%
filter(what != "ref") %>%
filter(tumVol > 1e-5) %>%
ggplot()+
geom_line(aes(time, tumVol, col = what), size = 2)+
geom_line(data = simulations %>% filter(what == "ref") %>% select(-param), aes(time, tumVol, col = "ref"), size = 2)+
facet_wrap(~param, scales = "free")+
scale_y_log10()+
theme_bw()
# copy paste the table in the console, fill min and max, evaluate it:
values <- domain <- tribble(~param, ~min, ~ref,  ~max,
"ke", 0 , 0.3, 2,
"Vd", 1 , 5 ,20,
"lambda0", 0.1, 0.5 ,5 ,
"lambda1", 0.3, 50 ,100 ,
"psi", 10, 20, 40,
"k2", 0, 2 ,6,
"k1", 0.1,1 ,2 )
param <- values$param
ref <- values %>%
distinct(param, ref) %>%
spread(param, ref) %>%
mutate(what = "ref", param = "ref")
map(param, function(x){
min <- max <- ref
min[[x]] <- values$min[values$param == x]
max[[x]] <- values$max[values$param == x]
bind_rows(
min %>% mutate(what = "min"),
max %>% mutate(what = "max")
) %>%
mutate(param = x)
}) %>%
bind_rows() %>%
bind_rows(ref)-> allvalues
ind_params <- allvalues %>%
rowid_to_column("id")
protocol2 <- protocols[[protocol]]
protocol2 <-   protocol2 %>%
select(-time) %>%
crossing(time = times) %>%
mutate(amt = 0, evid = 0) %>%
bind_rows(protocol2 %>% mutate(evid = 1)) %>%
crossing(id = unique(ind_params$id)) %>%
arrange(id, time, desc(amt))
simulations <- model_RxODE$solve(ind_params %>% select(-what, -param),protocol2 , states) %>%
as_tibble %>%
left_join(ind_params %>% distinct(id, what, param))
simulations %>%
filter(what != "ref") %>%
filter(tumVol > 1e-5) %>%
ggplot()+
geom_line(aes(time, tumVol, col = what), size = 2)+
geom_line(data = simulations %>% filter(what == "ref") %>% select(-param), aes(time, tumVol, col = "ref"), size = 2)+
facet_wrap(~param, scales = "free")+
scale_y_log10()+
theme_bw()
simulations %>%
filter(what != "ref") %>%
# filter(tumVol > 1e-5) %>%
ggplot()+
geom_line(aes(time, tumVol, col = what), size = 2)+
geom_line(data = simulations %>% filter(what == "ref") %>% select(-param), aes(time, tumVol, col = "ref"), size = 2)+
facet_wrap(~param, scales = "free")+
scale_y_log10()+
theme_bw()
# copy paste the table in the console, fill min and max, evaluate it:
values <- domain <- tribble(~param, ~min, ~ref,  ~max,
"ke", 0 , 0.3, 2,
"Vd", 1 , 5 ,20,
"lambda0", 0.1, 0.5 ,5 ,
"lambda1", 0.3, 50 ,100 ,
"psi", 10, 20, 40,
"k2", 0.05, 1 ,2,
"k1", 0.1,1 ,2 )
param <- values$param
ref <- values %>%
distinct(param, ref) %>%
spread(param, ref) %>%
mutate(what = "ref", param = "ref")
map(param, function(x){
min <- max <- ref
min[[x]] <- values$min[values$param == x]
max[[x]] <- values$max[values$param == x]
bind_rows(
min %>% mutate(what = "min"),
max %>% mutate(what = "max")
) %>%
mutate(param = x)
}) %>%
bind_rows() %>%
bind_rows(ref)-> allvalues
ind_params <- allvalues %>%
rowid_to_column("id")
protocol2 <- protocols[[protocol]]
protocol2 <-   protocol2 %>%
select(-time) %>%
crossing(time = times) %>%
mutate(amt = 0, evid = 0) %>%
bind_rows(protocol2 %>% mutate(evid = 1)) %>%
crossing(id = unique(ind_params$id)) %>%
arrange(id, time, desc(amt))
simulations <- model_RxODE$solve(ind_params %>% select(-what, -param),protocol2 , states) %>%
as_tibble %>%
left_join(ind_params %>% distinct(id, what, param))
simulations %>%
filter(what != "ref") %>%
# filter(tumVol > 1e-5) %>%
ggplot()+
geom_line(aes(time, tumVol, col = what), size = 2)+
geom_line(data = simulations %>% filter(what == "ref") %>% select(-param), aes(time, tumVol, col = "ref"), size = 2)+
facet_wrap(~param, scales = "free")+
scale_y_log10()+
theme_bw()
# copy paste the table in the console, fill min and max, evaluate it:
values <- domain <- tribble(~param, ~min, ~ref,  ~max,
"ke", 0 , 0.3, 2,
"Vd", 1 , 5 ,20,
"lambda0", 0.1, 0.5 ,5 ,
"lambda1", 0.3, 50 ,100 ,
"psi", 10, 20, 40,
"k2", 0.05, 0.5 ,1,
"k1", 0.1,1 ,2 )
param <- values$param
ref <- values %>%
distinct(param, ref) %>%
spread(param, ref) %>%
mutate(what = "ref", param = "ref")
map(param, function(x){
min <- max <- ref
min[[x]] <- values$min[values$param == x]
max[[x]] <- values$max[values$param == x]
bind_rows(
min %>% mutate(what = "min"),
max %>% mutate(what = "max")
) %>%
mutate(param = x)
}) %>%
bind_rows() %>%
bind_rows(ref)-> allvalues
ind_params <- allvalues %>%
rowid_to_column("id")
protocol2 <- protocols[[protocol]]
protocol2 <-   protocol2 %>%
select(-time) %>%
crossing(time = times) %>%
mutate(amt = 0, evid = 0) %>%
bind_rows(protocol2 %>% mutate(evid = 1)) %>%
crossing(id = unique(ind_params$id)) %>%
arrange(id, time, desc(amt))
simulations <- model_RxODE$solve(ind_params %>% select(-what, -param),protocol2 , states) %>%
as_tibble %>%
left_join(ind_params %>% distinct(id, what, param))
simulations %>%
filter(what != "ref") %>%
# filter(tumVol > 1e-5) %>%
ggplot()+
geom_line(aes(time, tumVol, col = what), size = 2)+
geom_line(data = simulations %>% filter(what == "ref") %>% select(-param), aes(time, tumVol, col = "ref"), size = 2)+
facet_wrap(~param, scales = "free")+
scale_y_log10()+
theme_bw()
simulations %>%
filter(what != "ref") %>%
# filter(tumVol > 1e-5) %>%
ggplot()+
geom_line(aes(time, tumVol, col = what))+
geom_line(data = simulations %>% filter(what == "ref") %>% select(-param), aes(time, tumVol, col = "ref"))+
facet_wrap(~param, scales = "free")+
scale_y_log10()+
theme_bw()
# copy paste the table in the console, fill min and max, evaluate it:
values <- domain <- tribble(~param, ~min, ~ref,  ~max,
"ke", 0 , 0.3, 2,
"Vd", 1 , 5 ,20,
"lambda0", 0.1, 0.5 ,5 ,
"lambda1", 0.3, 50 ,100 ,
"psi", 10, 20, 40,
"k2", 0.05, 0.5 ,1,
"k1", 0.001,1 ,2 )
param <- values$param
ref <- values %>%
distinct(param, ref) %>%
spread(param, ref) %>%
mutate(what = "ref", param = "ref")
map(param, function(x){
min <- max <- ref
min[[x]] <- values$min[values$param == x]
max[[x]] <- values$max[values$param == x]
bind_rows(
min %>% mutate(what = "min"),
max %>% mutate(what = "max")
) %>%
mutate(param = x)
}) %>%
bind_rows() %>%
bind_rows(ref)-> allvalues
ind_params <- allvalues %>%
rowid_to_column("id")
protocol2 <- protocols[[protocol]]
protocol2 <-   protocol2 %>%
select(-time) %>%
crossing(time = times) %>%
mutate(amt = 0, evid = 0) %>%
bind_rows(protocol2 %>% mutate(evid = 1)) %>%
crossing(id = unique(ind_params$id)) %>%
arrange(id, time, desc(amt))
simulations <- model_RxODE$solve(ind_params %>% select(-what, -param),protocol2 , states) %>%
as_tibble %>%
left_join(ind_params %>% distinct(id, what, param))
simulations %>%
filter(what != "ref") %>%
# filter(tumVol > 1e-5) %>%
ggplot()+
geom_line(aes(time, tumVol, col = what))+
geom_line(data = simulations %>% filter(what == "ref") %>% select(-param), aes(time, tumVol, col = "ref"))+
facet_wrap(~param, scales = "free")+
scale_y_log10()+
theme_bw()
