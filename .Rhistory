geom_segment(aes(5.4, xend = 5.1, y = 16.5, yend = 14.6), col = "red",  arrow = arrow(length = unit(0.2, "cm")))+
geom_line(data = temp %>% filter(nparam != "5alt"), aes(nparam, filtreTime, col =factor(1-pct), group = pct))+
geom_line(data = temp %>% filter(nparam %in% c("5", "5alt")), aes(nparam, filtreTime, col =factor(1-pct), group = pct), lty = 2)+
theme_bw()+
scale_y_log10()+
labs(x = "Number of varying parameter", y = "Filtering time first iteration (sec)",col = "Percentage\nRejection");plotE
plotE<- temp %>%
ggplot()+
geom_point(aes(nparam,filtreTime, col = factor(1-pct)))+
geom_segment(aes(5.4, xend = 5.1, y = 16.5, yend = 14.7), col = "red",  arrow = arrow(length = unit(0.2, "cm")))+
geom_line(data = temp %>% filter(nparam != "5alt"), aes(nparam, filtreTime, col =factor(1-pct), group = pct))+
geom_line(data = temp %>% filter(nparam %in% c("5", "5alt")), aes(nparam, filtreTime, col =factor(1-pct), group = pct), lty = 2)+
theme_bw()+
scale_y_log10()+
labs(x = "Number of varying parameter", y = "Filtering time first iteration (sec)",col = "Percentage\nRejection");plotE
plot_grid(plotA, plotB, plotD, plotE, plotC, plotG, labels = LETTERS, nrow = 2)
plotC <- temp %>%
ggplot()+
geom_vline(aes(xintercept = 0.375, lty= "Used in\nmain\nanalysis"))+
geom_line(aes(timecomput, value, col = method), size = 2)+
geom_point(aes(timecomput, value, col = method), size = 3)+
geom_segment(aes(x = 0.45, xend = 0.39, y = 35, yend = 39), col = "red",  arrow = arrow(length = unit(0.2, "cm")))+
# geom_line(aes(timecomput, value, col = method), size = 2)+
geom_ribbon(data = temp %>% spread(method, value), aes(x = timecomput, ymin = New, ymax =  Old), alpha = 0.3)+
theme_bw()+
scale_y_log10()+
scale_x_log10()+
labs(x = "Time to compute 2000 VPs with RxODE (sec)",y = "Time for performing 200.000 VPs (sec)", lty = "", col = "Method")+
scale_linetype_manual(values = 2);plotC
plotD <- temp %>%
ggplot()+
geom_point(aes(nparam,nsimul, col = factor(1-pct)))+
geom_segment(aes(x = 5.4, xend = 5.1, y = 49000, yend = 47532), col = "red",  arrow = arrow(length = unit(0.2, "cm")))+
geom_line(data = temp %>% filter(nparam != "5alt"), aes(nparam, nsimul, col =factor(1-pct), group = pct))+
geom_line(data = temp %>% filter(nparam %in% c("5", "5alt")), aes(nparam, nsimul, col =factor(1-pct), group = pct), lty = 2)+
theme_bw()+
scale_y_log10()+
labs(x = "Number of varying parameter", y = "Number of simulations performed",col = "Percentage\nRejection");plotD
plotD <- temp %>%
ggplot()+
geom_point(aes(nparam,nsimul, col = factor(1-pct)))+
geom_segment(aes(x = 5.5, xend = 5.1, y = 49000, yend = 47532), col = "red",  arrow = arrow(length = unit(0.2, "cm")))+
geom_line(data = temp %>% filter(nparam != "5alt"), aes(nparam, nsimul, col =factor(1-pct), group = pct))+
geom_line(data = temp %>% filter(nparam %in% c("5", "5alt")), aes(nparam, nsimul, col =factor(1-pct), group = pct), lty = 2)+
theme_bw()+
scale_y_log10()+
labs(x = "Number of varying parameter", y = "Number of simulations performed",col = "Percentage\nRejection");plotD
plotD <- temp %>%
ggplot()+
geom_point(aes(nparam,nsimul, col = factor(1-pct)))+
geom_line(data = temp %>% filter(nparam != "5alt"), aes(nparam, nsimul, col =factor(1-pct), group = pct))+
geom_line(data = temp %>% filter(nparam %in% c("5", "5alt")), aes(nparam, nsimul, col =factor(1-pct), group = pct), lty = 2)+
theme_bw()+
geom_segment(aes(x = 5.5, xend = 5.1, y = 49000, yend = 47532), col = "red",  arrow = arrow(length = unit(0.2, "cm")))+
scale_y_log10()+
labs(x = "Number of varying parameter", y = "Number of simulations performed",col = "Percentage\nRejection");plotD
plot_grid(plotA, plotB, plotD, plotE, plotC, plotG, labels = LETTERS, nrow = 2)
self <-  readRDS("D:/these/Second_project/QSP/modeling_work/VT_simeoni/fig5_data.RDS")
tree <- self$algo2list$tree
# Just a template, to replace by tracking time inside the function
template <- tibble(step = c("1_algo1", "2_filter", "3_maybe", "4_reduce", "5_other"), time = c(35,25,40,50, 17))
plotA <- template %>%
ggplot()+
geom_bar(aes(x = step,y= time), stat="identity",col = "black")+
labs(y = "Time(sec)")+
theme_bw(); plotA
template %>%
ggplot()+
geom_bar(aes(x = fct_reorder(step, time, .desc = T),y= time), stat="identity")+
theme_bw()
plotB <- tree   %>%
slice(-1) %>%
mutate(time = as.double(time)) %>%
ggplot()+
geom_histogram(aes(time, fill = factor(after/3)),col = "black")+
scale_x_log10()+
theme_bw()+
labs(x = "Time (sec)", fill = "VP\nfound"); plotB
cowplot::plot_grid(plotA, plotB)
domain <- tribble(~param, ~from, ~to, ~digits,
"k2", 0, 3, 2 ,
"lambda0", 0, 1.4, 2,
"ke", 0, 2,1,
"Vd", 0,40,0,
"lambda1", 0,240,0
)
fix <-c(k1 = 0.5, w0 = 50)
self <- VP_proj_creator$new()
VP <- tibble(k2 = 1.63, lambda0 = 0.85, ke = 0.6, Vd = 36, lambda1 = 72, w0 = 50, k1 = 0.5, id = 1:3, psi = 20)
events <- tibble(cmt = "Central", time = 0, amt = c(0,50,100), evid = 1, id = 1:3) %>%
bind_rows(tibble(cmt = "tumVol", time = 0:52 , amt = 0, evid =  0) %>% crossing(id = 1:3)) %>%
arrange(id, time)
simul <- self$model$solve(VP, events) %>%
as_tibble
simul %>%
ggplot()+
geom_line(aes(time, tumVol, col = factor(id))) +
scale_y_log10()
simul %>%
ggplot()+
geom_line(aes(time, tumVol, col = factor(id))) +
scale_y_log10()+
theme_bw()
simul
simul %>%
# filter(time %in% c(8,30)) %>%
# select(id, time, tumVol) %>%
mutate(protocol = case_when(id == 1 ~ "0",
id == 2 ~ "50",
id == 3 ~ "100")) %>%
ggplot()+
geom_line(aes(time, tumVol, col = factor(protocol))) +
scale_y_log10()+
theme_bw()
simul %>%
# filter(time %in% c(8,30)) %>%
# select(id, time, tumVol) %>%
mutate(protocol = case_when(id == 1 ~ 0,
id == 2 ~ 50,
id == 3 ~ 100)) %>%
ggplot()+
geom_line(aes(time, tumVol, col = factor(protocol))) +
scale_y_log10()+
theme_bw()+
labs( x = "Time (days)", y = "Tumor Volume (mm3)", col = "Dose")
simul %>%
# filter(time %in% c(8,30)) %>%
# select(id, time, tumVol) %>%
mutate(protocol = case_when(id == 1 ~ 0,
id == 2 ~ 50,
id == 3 ~ 100)) %>%
ggplot()+
geom_line(aes(time, tumVol, col = factor(protocol))) +
scale_y_log10()+
theme_bw()+
labs( x = "Time (days)", y = "Tumor Volume (mm3)", col = "Dose drug")
simul %>%
# filter(time %in% c(8,30)) %>%
# select(id, time, tumVol) %>%
mutate(protocol = case_when(id == 1 ~ 0,
id == 2 ~ 50,
id == 3 ~ 100)) %>%
ggplot()+
geom_line(aes(time, tumVol, col = factor(protocol))) +
scale_y_log10()+
theme_bw()+
labs( x = "Time (days)", y = "Tumor Volume (mm3)", col = "Dose drug")+
geom_vline(aes(c(8,30)))
simul %>%
# filter(time %in% c(8,30)) %>%
# select(id, time, tumVol) %>%
mutate(protocol = case_when(id == 1 ~ 0,
id == 2 ~ 50,
id == 3 ~ 100)) %>%
ggplot()+
geom_line(aes(time, tumVol, col = factor(protocol))) +
scale_y_log10()+
theme_bw()+
labs( x = "Time (days)", y = "Tumor Volume (mm3)", col = "Dose drug")+
geom_vline(aes(xintercept = c(8,30)))
simul %>%
# filter(time %in% c(8,30)) %>%
# select(id, time, tumVol) %>%
mutate(protocol = case_when(id == 1 ~ 0,
id == 2 ~ 50,
id == 3 ~ 100)) %>%
ggplot()+
geom_line(aes(time, tumVol, col = factor(protocol))) +
scale_y_log10()+
theme_bw()+
labs( x = "Time (days)", y = "Tumor Volume (mm3)", col = "Dose drug")+
geom_vline(xintercept = c(8,30))
simul %>%
# filter(time %in% c(8,30)) %>%
# select(id, time, tumVol) %>%
mutate(protocol = case_when(id == 1 ~ 0,
id == 2 ~ 50,
id == 3 ~ 100)) %>%
ggplot()+
geom_line(aes(time, tumVol, col = factor(protocol))) +
scale_y_log10()+
theme_bw()+
labs( x = "Time (days)", y = "Tumor Volume (mm3)", col = "Dose drug")+
geom_vline(xintercept = c(8,30), lty = 2)
simul %>%
# filter(time %in% c(8,30)) %>%
# select(id, time, tumVol) %>%
mutate(protocol = case_when(id == 1 ~ 0,
id == 2 ~ 50,
id == 3 ~ 100)) %>%
{temppoint <<- .} %>%
ggplot()+
geom_line(aes(time, tumVol, col = factor(protocol))) +
scale_y_log10()+
theme_bw()+
labs( x = "Time (days)", y = "Tumor Volume (mm3)", col = "Dose drug")+
geom_vline(xintercept = c(8,30), lty = 2)+
geom_point(data = temppoint %>% filter(time %in% c(8,30), aes( time, tumVol)))
cowplot::plot_grid(plotA, plotB)
simul %>%
# filter(time %in% c(8,30)) %>%
# select(id, time, tumVol) %>%
mutate(protocol = case_when(id == 1 ~ 0,
id == 2 ~ 50,
id == 3 ~ 100)) %>%
{temppoint <<- .} %>%
ggplot()+
geom_line(aes(time, tumVol, col = factor(protocol))) +
scale_y_log10()+
theme_bw()+
labs( x = "Time (days)", y = "Tumor Volume (mm3)", col = "Dose drug")+
geom_vline(xintercept = c(8,30), lty = 2)+
geom_point(data = temppoint %>% filter(time %in% c(8,30), aes( time, tumVol)))
temppoint
simul %>%
# filter(time %in% c(8,30)) %>%
# select(id, time, tumVol) %>%
mutate(protocol = case_when(id == 1 ~ 0,
id == 2 ~ 50,
id == 3 ~ 100)) %>%
{temppoint <<- .} %>%
ggplot()+
geom_line(aes(time, tumVol, col = factor(protocol))) +
scale_y_log10()+
theme_bw()+
labs( x = "Time (days)", y = "Tumor Volume (mm3)", col = "Dose drug")+
geom_vline(xintercept = c(8,30), lty = 2)+
geom_point(data = temppoint %>% filter(time %in% c(8,30)), aes( time, tumVol))
simul %>%
# filter(time %in% c(8,30)) %>%
# select(id, time, tumVol) %>%
mutate(protocol = case_when(id == 1 ~ 0,
id == 2 ~ 50,
id == 3 ~ 100)) %>%
{temppoint <<- .} %>%
ggplot()+
geom_line(aes(time, tumVol, col = factor(protocol))) +
scale_y_log10()+
theme_bw()+
labs( x = "Time (days)", y = "Tumor Volume (mm3)", col = "Dose")+
geom_vline(xintercept = c(8,30), lty = 2)+
geom_point(data = temppoint %>% filter(time %in% c(8,30)), aes( time, tumVol))
plot0 <- simul %>%
# filter(time %in% c(8,30)) %>%
# select(id, time, tumVol) %>%
mutate(protocol = case_when(id == 1 ~ 0,
id == 2 ~ 50,
id == 3 ~ 100)) %>%
{temppoint <<- .} %>%
ggplot()+
geom_line(aes(time, tumVol, col = factor(protocol))) +
scale_y_log10()+
theme_bw()+
labs( x = "Time (days)", y = "Tumor Volume (mm3)", col = "Dose")+
geom_vline(xintercept = c(8,30), lty = 2)+
geom_point(data = temppoint %>% filter(time %in% c(8,30)), aes( time, tumVol))
cowplot::plot_grid(plot0, plotA, plotB)
plot0 <- simul %>%
# filter(time %in% c(8,30)) %>%
# select(id, time, tumVol) %>%
mutate(protocol = case_when(id == 1 ~ 0,
id == 2 ~ 50,
id == 3 ~ 100)) %>%
{temppoint <<- .} %>%
filter(time <=40) %>%
ggplot()+
geom_line(aes(time, tumVol, col = factor(protocol))) +
scale_y_log10()+
theme_bw()+
labs( x = "Time (days)", y = "Tumor Volume (mm3)", col = "Dose")+
geom_vline(xintercept = c(8,30), lty = 2)+
geom_point(data = temppoint %>% filter(time %in% c(8,30)), aes( time, tumVol))
plot0 <- simul %>%
# filter(time %in% c(8,30)) %>%
# select(id, time, tumVol) %>%
mutate(protocol = case_when(id == 1 ~ 0,
id == 2 ~ 50,
id == 3 ~ 100)) %>%
{temppoint <<- .} %>%
filter(time <=40) %>%
ggplot()+
geom_line(aes(time, tumVol, col = factor(protocol))) +
scale_y_log10()+
theme_bw()+
labs( x = "Time (days)", y = "Tumor Volume (mm3)", col = "Dose")+
geom_vline(xintercept = c(8,30), lty = 2)+
geom_point(data = temppoint %>% filter(time %in% c(8,30)), aes( time, tumVol)); plot0
cowplot::plot_grid(plot0, plotA, plotB)
self$poolVP
self$plot_VP()
self <-  readRDS("D:/these/Second_project/QSP/modeling_work/VT_simeoni/fig5_data.RDS")
self$plot_VP()
self$targets
self$poolVP
cowplot::plot_grid(plot0,"3",  plotA, plotB)
cowplot::plot_grid(plot0,"3",  plotA, plotB, labels = LETTERS)
plot0 <- simul %>%
# filter(time %in% c(8,30)) %>%
# select(id, time, tumVol) %>%
mutate(protocol = case_when(id == 1 ~ 0,
id == 2 ~ 50,
id == 3 ~ 100)) %>%
{temppoint <<- .} %>%
filter(time <=40) %>%
ggplot()+
geom_line(aes(time, tumVol, col = factor(protocol))) +
scale_y_log10()+
theme_bw()+
labs( x = "Time (days)", y = "Tumor Volume (mm3)", col = "Dose")+
geom_vline(xintercept = c(8,30), lty = 2)+
geom_point(data = temppoint %>% filter(time %in% c(8,30)), aes( time, tumVol, shape = "Target")); plot0
plot0 <- simul %>%
# filter(time %in% c(8,30)) %>%
# select(id, time, tumVol) %>%
mutate(protocol = case_when(id == 1 ~ 0,
id == 2 ~ 50,
id == 3 ~ 100)) %>%
{temppoint <<- .} %>%
filter(time <=40) %>%
ggplot()+
geom_line(aes(time, tumVol, col = factor(protocol))) +
scale_y_log10()+
theme_bw()+
labs( x = "Time (days)", y = "Tumor Volume (mm3)", col = "Dose", shape = "")+
geom_vline(xintercept = c(8,30), lty = 2)+
geom_point(data = temppoint %>% filter(time %in% c(8,30)), aes( time, tumVol, shape = "Target")); plot0
cowplot::plot_grid(plot0,"3",  plotA, plotB, labels = LETTERS)
plot0
self
self$algo2list$tree
8806549909 / 200000
reduce_maybe2 <- function(maybe, obj = self){
testabove <- obj$clone(deep = T)
testabove$poolVP <- tibble()
testbelow <- obj$clone(deep = T)
testbelow$poolVP <- tibble()
#Which are above
# tempreduce$targets$min <-  tempreduce$targets$max
testabove$targets$max <- Inf
testbelow$targets$min <-- Inf
maybeabove <- maybe
maybebelow <- maybe
for(a in obj$param){
if(a %in% obj$param_increase[[1]]){
names(maybeabove)[names(maybeabove) == paste0(a, "max")] <- a
names(maybebelow)[names(maybebelow) == paste0(a, "min")] <- a
}else if(a %in% obj$param_reduce[[1]] ){
names(maybeabove)[names(maybeabove) == paste0(a, "min")] <- a
names(maybebelow)[names(maybebelow) == paste0(a, "max")] <- a
}else{
#to handle the rest...
names(maybeabove)[names(maybeabove) == paste0(a, "min")] <- a
names(maybebelow)[names(maybebelow) == paste0(a, "max")] <- a
}
}
testabove$add_VP(maybeabove %>% select(!!!parse_exprs(obj$param)) , use_green_filter =   T, npersalve = 2000)
maybeabove %>% select(!!!parse_exprs(obj$param)) %>%
rowid_to_column("tokeep") %>%
left_join(testabove$poolVP %>% distinct(!!!parse_exprs(obj$param)) %>% mutate(test = T)) %>%
filter(test) %>%
pull(tokeep) -> idpostabove
maybebelow2 <- maybebelow %>%  rowid_to_column("tokeep") %>% slice(idpostabove) %>% select(!!!parse_exprs(obj$param), tokeep)
testbelow$add_VP(maybebelow %>% slice(idpostabove) %>% select(!!!parse_exprs(obj$param)), use_green_filter = T, npersalve = 2000)
testbelow$poolVP  %>%
select(!!!parse_exprs(obj$param)) %>%
distinct() %>%
left_join(maybebelow2) %>%  pull(tokeep) -> idtokeep
# testabove$poolVP %>%
#   select(-rowid) %>%
#   left_join(   testbelow$poolVP %>% select(id, rowid)   ) %>%
#   filter(!is.na(rowid)) %>%
#   pull(id) %>%
#   unique()
maybe2 <- maybe %>%
slice(idtokeep)
# rowid_to_column("id") %>%
# filter(id %in% idtokeep)
# difftime(Sys.time(), t0, "s")
return(maybe2)
}
domain <- tribble(~param, ~from, ~to, ~digits,
"k2", 0, 3, 2 ,
"lambda0", 0, 1.4, 2,
"ke", 0, 2,1,
"Vd", 0,40,0,
"lambda1", 0,24,1
)
fix <-c(k1 = 0.5, w0 = 50)
ndomain <- function(domain){
domain %>%
mutate(how = pmap_dbl(list(from, to, digits), function(from, to , digits){
length(seq(from, to, 10^(-digits)))
})) %>%
pull(how) %>%
reduce(`*`)
}
# blocs <- zone_maybe
add_nvp_bloc <- function(blocs){
temp <-  blocs %>%
# slice(1:2) %>%
rowid_to_column("id") %>%
gather("key", "value", -id , -contains("blocsPool")) %>%
mutate(param = gsub("(min$)|(max$)", "", key)) %>%
mutate(a = map2_chr(param, key, ~ gsub(.x, "", .y))) %>%
select(-key) %>%
spread(a, value) %>%
rename(from = min, to = max) %>%
left_join(domain %>% distinct(param, digits), by = "param")
temp %>%
filter(!is.na(digits)) %>%
mutate(how = pmap_dbl(list(from, to, digits), function(from, to , digits){
max(length(seq(from, to, 10^(-digits))) - 2,1) # ici -2 to avoid border?
})) %>%
group_split(id) -> temp2
temp3 <-  temp2 %>%
map_dbl(~  .x %>% pull(how) %>%
reduce(`*`))
# calcul bord ?
# temp2 %>% #[[1]] -> x
#   map(function(x){
#
#     x %>%
#   mutate(values = map2(to, from, ~c(.x, .y))) %>%
#   pull(values) -> valu
# names(valu )<- x$param
#
# invoke(crossing, valu)
#   })
blocs %>%
mutate(temp3)
# sum(temp3)
}
prototiny <- tibble(protocol = "dose50", cmt = "tumVol", time = c(12,40), min = c(100, 431),
max = c(100.05, 431.05))
prototiny <- tibble(protocol = "dose50", cmt = "tumVol", time = c(12,40), min = c(50, 200),
max = c(60, 210))
prototiny <- tibble(protocol = "dose50", cmt = "tumVol", time = c(12,40), min = c(50, 200),
max = c(70, 230)) %>%
bind_rows(tibble(
protocol = "dose100", cmt = "tumVol", time = c(12,40), min = c(10, 125),
max = c(55, 150))
) %>%
bind_rows(tibble(
protocol = "dose0", cmt = "tumVol", time = c(12,40), min = c(200, 600),
max = c(250, 6000))
)
self <- VP_proj_creator$new()
self$set_targets(manual = prototiny)
npersalve = 2E5
npersalveFinal = 1E6
fix <-c(k1 = 0.5, w0 = 50)
file <- ""
save_every = 2
nVPs0  <- ndomain(domain) - 2^nrow(domain) # Compute the number of VPs
## First division
t0 <- Sys.time()
namesparam <- c(paste0(domain$param,  "max"),paste0(domain$param,  "min") ) # names of parameter with min and max
# The parameter that will not vary
DFfix <- as.data.frame(fix) %>%
rownames_to_column() %>%
spread(rowname , fix)
blocs <- domain %>% # See after?
mutate(id = "")
firstbloc <- T # Used in the loop
nperparam <- floor(npersalve^(1/nrow(domain))) # how many division per parameter per iteration
blocs %>%
mutate(sampl = pmap(list(from, to, digits), function(from, to, digits){
# from = 0; to = 3; digits = 4
# seq(from, to, (to-from)/(nperparam-1)) %>% round(digits) %>% unique()
temp <- seq(from, to, (to-from)/(nperparam+1)) %>% round(digits) %>% unique()
temp[-c(1, length(temp))]
})) -> VPsparam
VPsparam
# Cross parameter (per bloc) and add fixed values: perfom the first cohort
newVPs <- VPsparam %>%
group_split(id) %>%
map( function(x){
temp <- invoke(.fn = crossing, x$sampl )
names(temp) <- x$param
temp
}) %>%
bind_rows() %>%
add_column(DFfix)
newVPs
nperparam
12^5
8.8E9
8.8E9/12^5
self$algo2list$tree
self <-  readRDS("D:/these/Second_project/QSP/modeling_work/VT_simeoni/fig5_data.RDS")
self
self$algo2list$tree
self$algo2list$first
28*100
167 / 60
self$algo2list$tree
self$algo2list$tree %>%
summarise(time = sum(time))
2609.409 / 60
self$algo2list$first
self$algo2list$first %>%
group_by(blocsPool) %>%
summarise(sum(temp3))
self$algo2list$first %>%
group_by(blocsPool) %>%
summarise(sum = sum(temp3)) %>%
pull(sum) %>% median
2609.409 / 60
self$algo2list$tree
self$algo2list$tree %>%
summarise(time = sum(time))
2609.409 / 60
