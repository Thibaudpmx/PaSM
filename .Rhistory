self$set_targets(filter = Dose == 50 & cmt == "tumVol",timeforce = c(12,19, 30,45))
VP_df <- crossing(k1 = c(0.5),
k2 = seq(0,8,0.5),
ke = 1 ,#*  seq(0.6,1.4,0.2),
lambda0 =seq(0.04,0.16,0.025),
lambda1 = c(12),
Vd =  c(20:40)) %>% #c(0.8,1,1.2)) %>%
map_df(function(x){
if(is.character(x)) return(x)
round(x,3)
} )
self$add_VP(VP_df, fillatend =F, reducefilteratend = F)
# self$plot_2D(k2, lambda0, plotMain = T)
self$plot_3D(k2, lambda0, Vd)
source("D:/these/Second_project/QSP/QSPVP/R/R6object.R")
self <- VP_proj_creator$new(sourcefile = "D:/these/Second_project/QSP/modeling_work/VT_simeoni/1_user_inputs/1_config_Lindner.r")
self$targets <- tribble(~protocol, ~time, ~cmt, ~ min, ~max,
"unique",740,"Pore", 20, 23
)
VP_df <- crossing(Bcl20 = seq(100,1000,100),
Bclxl0 = seq(100,1000,100),
Mcl10 = 50 ,#*  seq(0.6,1.4,0.2),
BIM0 = seq(100,1000,100),
PUMA0 =seq(100,1000,100),
NOXA0 =  seq(100,1000,100),
BAXc0 = 1000,
BAK0 = 1000) %>% #c(0.8,1,1.2)) %>%
map_df(function(x){
if(is.character(x)) return(x)
round(x,3)
} )
VP_df
self$add_VP(VP_df, fillatend = F, reducefilteratend = F)
self$plot_VP()
self$plot_2D(x = k2, y = lambda0,toaddneg = VP_df, plotMain = T)
source("D:/these/Second_project/QSP/QSPVP/R/R6object.R")
self <- VP_proj_creator$new(sourcefile = "D:/these/Second_project/QSP/modeling_work/VT_simeoni/1_user_inputs/1_config_Lindner.r")
self$targets <- tribble(~protocol, ~time, ~cmt, ~ min, ~max,
"unique",740,"Pore", 20, 20.0001
)
domain <- tribble(~param, ~from, ~to, ~step,
"Bcl20", 0, 1000, 1 ,
"Bclxl0", 0, 1000, 1,
"Mcl10", 0,1000,1,
"BIM0", 0, 1000, 1 ,
"PUMA0", 0, 1000, 1,
"NOXA0", 0,1000,1,
"BAXc0", 1000,1000,0,
"BAK0" , 1000,1000,0
)
demo <- self$big_screening(domain)
source("D:/these/Second_project/QSP/QSPVP/R/R6object.R")
self <- VP_proj_creator$new(sourcefile = "D:/these/Second_project/QSP/modeling_work/VT_simeoni/1_user_inputs/1_config_Lindner.r")
self$targets <- tribble(~protocol, ~time, ~cmt, ~ min, ~max,
"unique",740,"Pore", 20, 20.0001
)
domain <- tribble(~param, ~from, ~to, ~step,
"Bcl20", 0, 1000, 1 ,
"Bclxl0", 0, 1000, 1,
"Mcl10", 0,1000,1,
"BIM0", 0, 1000, 1 ,
"PUMA0", 0, 1000, 1,
"NOXA0", 0,1000,1,
"BAXc0", 1000,1000,0,
"BAK0" , 1000,1000,0
)
demo <- self$big_screening(domain)
250952 / 2000
250952 / 2000 * 4
250952 / 2000 * 4/ 60
source("D:/these/Second_project/QSP/QSPVP/R/R6object.R")
library(peccary)
library(QSPVP)
library(RxODE)
library(progress)
library(R6)
library(crayon)
# Step 1 create or load p
self <- VP_proj_creator$new()
# self$set_targets(filter = cmt == "tumVol", ntime = 6)
self$set_targets(filter = Dose ==50  & cmt == "tumVol",timeforce = c(12,19, 30,45))
source("D:/these/Second_project/QSP/QSPVP/R/R6object.R")
self <- VP_proj_creator$new()
# self$set_targets(filter = cmt == "tumVol", ntime = 6)
self$set_targets(filter = Dose ==50  & cmt == "tumVol",timeforce = c(12,19, 30,45))
self
self
source("D:/these/Second_project/QSP/QSPVP/R/R6object.R")
self <- VP_proj_creator$new()
# self$set_targets(filter = cmt == "tumVol", ntime = 6)
self$set_targets(filter = Dose ==50  & cmt == "tumVol",timeforce = c(12,19, 30,45))
VP_df <- crossing(k1 = c(0.5),
k2 = seq(0,8,0.2),
ke = 1 ,#*  seq(0.6,1.4,0.2),
lambda0 =seq(0,0.16,0.025),
lambda1 = c(12),
Vd =  40) %>% #c(0.8,1,1.2)) %>%
map_df(function(x){
if(is.character(x)) return(x)
round(x,3)
} )
self$add_VP(VP_df, fillatend = F, reducefilteratend = F)
self
source("D:/these/Second_project/QSP/QSPVP/R/R6object.R")
self <- VP_proj_creator$new()
# self$set_targets(filter = cmt == "tumVol", ntime = 6)
self$set_targets(filter = Dose ==50  & cmt == "tumVol",timeforce = c(12,19, 30,45))
VP_df <- crossing(k1 = c(0.5),
k2 = seq(0,8,0.2),
ke = 1 ,#*  seq(0.6,1.4,0.2),
lambda0 =seq(0,0.16,0.025),
lambda1 = c(12),
Vd =  40) %>% #c(0.8,1,1.2)) %>%
map_df(function(x){
if(is.character(x)) return(x)
round(x,3)
} )
self$add_VP(VP_df, fillatend = F, reducefilteratend = F)
source("D:/these/Second_project/QSP/QSPVP/R/R6object.R")
self <- VP_proj_creator$new()
# self$set_targets(filter = cmt == "tumVol", ntime = 6)
self$set_targets(filter = Dose ==50  & cmt == "tumVol",timeforce = c(12,19, 30,45))
VP_df <- crossing(k1 = c(0.5),
k2 = seq(0,8,0.2),
ke = 1 ,#*  seq(0.6,1.4,0.2),
lambda0 =seq(0,0.16,0.025),
lambda1 = c(12),
Vd =  40) %>% #c(0.8,1,1.2)) %>%
map_df(function(x){
if(is.character(x)) return(x)
round(x,3)
} )
self$add_VP(VP_df, fillatend = F, reducefilteratend = T)
self$poolVP
self$plot_2D(x = k2, y = lambda0,plotoreturn = 1, add_point = T)
source("D:/these/Second_project/QSP/QSPVP/R/R6object.R")
self <- VP_proj_creator$new()
# self$set_targets(filter = Dose == 50 & cmt == "tumVol", ntime = 8)
self$set_targets(filter = Dose==50 & cmt == "tumVol",timeforce = c(12,19, 30,45))
VP_df <- crossing(k1 = c(0.5),
k2 = seq(0,8,0.0025),
ke = 1 ,#*  seq(0.6,1.4,0.2),
lambda0 =seq(0,0.16,0.0025),
lambda1 = c(12),
Vd =  40) %>% #c(0.8,1,1.2)) %>%
map_df(function(x){
if(is.character(x)) return(x)
round(x,3)
} )
self$add_VP(VP_df, fillatend = F, reducefilteratend = T,  npersalve = 2000,  time_compteur = F)
nmax = Inf
nmax <- min(nrow(self$poolVP, nmax ))
nmax = Inf
nmax <- min(nrow(self$poolVP, nmax ))
nmax <- min(nrow(self$poolVP), nmax )
nmax
self$poolVP %>%
sample_n()
self$poolVP %>%
sample_n(nmax)
nmax = 100
self$poolVP %>%
sample_n(nmax)
self$poolVP %>%
sample_n(nmax)
source("D:/these/Second_project/QSP/QSPVP/R/R6object.R")
self <- VP_proj_creator$new()
# self$set_targets(filter = Dose == 50 & cmt == "tumVol", ntime = 8)
self$set_targets(filter = Dose==50 & cmt == "tumVol",timeforce = c(12,19, 30,45))
VP_df <- crossing(k1 = c(0.5),
k2 = seq(0,8,0.0025),
ke = 1 ,#*  seq(0.6,1.4,0.2),
lambda0 =seq(0,0.16,0.0025),
lambda1 = c(12),
Vd =  40) %>% #c(0.8,1,1.2)) %>%
map_df(function(x){
if(is.character(x)) return(x)
round(x,3)
} )
self$add_VP(VP_df, fillatend = F, reducefilteratend = T,  npersalve = 2000,  time_compteur = F)
self$plot_VP(nmax = 200)
Capture white square ----------------------------------------------------
source("D:/these/Second_project/QSP/QSPVP/R/R6object.R")
prototiny <- tibble(protocol = "dose50", cmt = "tumVol", time = c(12,40), min = c(100.1845, 431.0056),
max = c(100.1847, 431.0058))
self <- VP_proj_creator$new()
self$set_targets(manual = prototiny)
self$targets <- prototiny
# VP_df <- crossing(k1 = c(0.5),
#                           k2 = seq(0,3,0.005),
#                           ke = 1 ,#*  seq(0.6,1.4,0.2),
#                           lambda0 =seq(0,1,0.005),
#                           lambda1 = c(12),
#                           Vd =  40) %>% #c(0.8,1,1.2)) %>%
#   map_df(function(x){
#
#     if(is.character(x)) return(x)
#     round(x,3)
#
#   } )
VP_df <- crossing(k1 = c(0.5),
k2 = seq(0,3,0.005),
ke = 1 ,#*  seq(0.6,1.4,0.2),
lambda0 =seq(0,1,0.005),
lambda1 = c(12),
Vd =  40) %>% #c(0.8,1,1.2)) %>%
map_df(function(x){
if(is.character(x)) return(x)
round(x,3)
} )
self$add_VP(VP_df, fillatend = F, reducefilteratend = T,  npersalve = 2000,  time_compteur = F,keepRefFiltaftDis = T)
self$poolVP
self$plot_2D(k2, lambda0, plotoreturn = 1)
# analyse above
lamda0unique<-  c(self$filters_neg_above$lambda0, self$filters_neg_below$lambda0 )  %>% unique
lambda0seg <-  tibble(lambda0max = lamda0unique) %>%
add_row(lambda0max = 0) %>%
add_row(lambda0max = 1) %>%
arrange(lambda0max) %>%
mutate(lambda0min = lag(lambda0max)) %>%
slice(-1)
# lambda0seg %>%
#   rowid_to_column() %>%
#   ggplot()+
#   geom_rect(aes(xmin = 0, xmax = 1.3, ymin = lambda0min, ymax =lambda0max, fill = factor(rowid)), col = "black")+
#   guides(fill = F)
k2unique<-  c(self$filters_neg_above$k2, self$filters_neg_below$k2 )  %>% unique
k2seg <- tibble(k2max = k2unique) %>%
add_row(k2max = 0) %>%
add_row(k2max = 1.2) %>%
arrange(k2max) %>%
mutate(k2min = lag(k2max)) %>%
slice(-1)
# k2seg %>%
#  rowid_to_column() %>%
#  ggplot()+
#  geom_rect(aes(xmin = k2min, xmax = k2max, ymin = 0, ymax =1, fill = factor(rowid)), col = "black")+
#  guides(fill = F)
allsquares <- crossing(lambda0seg, k2seg) %>%
filter(k2min != k2max) %>%
filter(lambda0min != lambda0max)
allsquares0 <- allsquares
# allsquares0 %>%
#  rowid_to_column() %>%
#  ggplot()+
#  geom_rect(aes(xmin = k2min, xmax = k2max, ymin = lambda0min, ymax =lambda0max, fill = factor(rowid)),col = "black")+
#  guides(fill = F)
filters <- self$make_filters() %>%
map_chr(~ gsub("line\\$", "", .x))
filter_above <- "!(lambda0min >= ref$lambda0 &  k2max <= ref$k2)"
for(a in 1:nrow(self$filters_neg_above)){
ref <- self$filters_neg_above %>% slice(a)
allsquares <- allsquares %>%
filter(!!parse_expr(filter_above))
}
filter_below<- "!(lambda0max <= ref$lambda0 &  k2min >= ref$k2)"
for(a in 1:nrow(self$filters_neg_below)){
ref <- self$filters_neg_below %>% slice(a)
allsquares <- allsquares %>%
filter(!!parse_expr(filter_below))
}
allsquares %>%
rowid_to_column() %>%
ggplot()+
geom_rect(aes(xmin = k2min, xmax = k2max, ymin = lambda0min, ymax =lambda0max, fill = factor(rowid)),col = "black")+
labs(fill = "bloc")
# Now lets use those square
VP_df2 <- allsquares %>%
mutate(data = pmap(list(lambda0max, lambda0min, k2max, k2min), function(lambda0max, lambda0min, k2max, k2min){
crossing(k2 = seq(k2min, k2max, 0.0002), lambda0 = seq(lambda0min, lambda0max, 0.0002) )
})) %>%
unnest()%>%
select(lambda0, k2) %>%
mutate(k1 = 0.5, ke = 1, lambda1 = 12, Vd = 40)
self$add_VP(VP_df2, fillatend = F, reducefilteratend = F,  npersalve = 2000,  time_compteur = F,keepRefFiltaftDis = T)
length(seq(0,3,0.0002)) * length(seq(seq(0,1,0.0002))) * 0.35 / 2000/3600 # temps en heure
self$plot_VP(nmax = 20)
self$plot_VP(nmax = 20)+
geom_point(aes(x = 12, y = 100.1846), col = "red")+
geom_point(aes(x = 40, y = 431.0057), col = "red")
length(seq(0,3,0.0002)) * length(seq(seq(0,1,0.0002))) * 0.35 / 2000/3600 # temps en heure
length(seq(0,3,0.0002)) * length(seq(seq(0,1,0.0002)))
length(seq(0,3,0.0002)) * length(seq(seq(0,1,0.0002))) * 0.35 / 2000/3600 # temps en heure
length(seq(0,3,0.0002)) * length(seq(seq(0,1,0.0002))) * 0.6 / 2000/3600 # temps en heure
rm(list = ls())
library(peccary)
library(QSPVP)
library(RxODE)
library(progress)
library(R6)
library(crayon)
source("D:/these/Second_project/QSP/QSPVP/R/R6object.R")
self <- VP_proj_creator$new()
self$set_targets(filter = cmt == "tumVol", ntime = 6)
self$set_targets(filter = cmt == "tumVol", ntime = 6)
self$set_targets(filter = Dose ==50  & cmt == "tumVol",timeforce = c(12,19, 30,45))
VP_df <- crossing(k1 = c(0.5),
k2 = seq(0,8,0.2),
ke = 1 ,#*  seq(0.6,1.4,0.2),
lambda0 =seq(0,0.16,0.025),
lambda1 = c(12),
Vd =  40) %>% #c(0.8,1,1.2)) %>%
map_df(function(x){
if(is.character(x)) return(x)
round(x,3)
} )
seq(0,8,0.2)
seq(0,0.16,0.025)
VP_df <- crossing(k1 = c(0.5),
k2 = seq(0,8,0.2),
ke = 1 ,#*  seq(0.6,1.4,0.2),
lambda0 =seq(0,0.16,0.025),
lambda1 = c(12),
Vd =  40) %>% #c(0.8,1,1.2)) %>%
map_df(function(x){
if(is.character(x)) return(x)
round(x,3)
} )
VP_df
self$add_VP(VP_df, fillatend = F, reducefilteratend = T)
self$plot_VP()
source("D:/these/Second_project/QSP/QSPVP/R/R6object.R")
self <- VP_proj_creator$new()
self$set_targets(filter = cmt == "tumVol", ntime = 6)
self$make_filters()
source("D:/these/Second_project/QSP/QSPVP/R/R6object.R")
self <- VP_proj_creator$new()
# self$set_targets(filter = Dose == 50 & cmt == "tumVol", ntime = 8)
self$set_targets(filter = Dose==50 & cmt == "tumVol",timeforce = c(12,19, 30,45))
VP_df <- crossing(k1 = c(0.5),
k2 = seq(0,8,0.0025),
ke = 1 ,#*  seq(0.6,1.4,0.2),
lambda0 =seq(0,0.16,0.0025),
lambda1 = c(12),
Vd =  40) %>% #c(0.8,1,1.2)) %>%
map_df(function(x){
if(is.character(x)) return(x)
round(x,3)
} )
VP_df
self$add_VP(VP_df, fillatend = F, reducefilteratend = T,  npersalve = 2000,  time_compteur = F)
self$plot_2D(x = k2, y = lambda0, plotMain = F, plotoreturn = 1, add_point = T)
self$plot_VP(nmax = 200)
self$plot_2D(x = k2, y = lambda0, plotMain = F, plotoreturn = 1, add_point = T)
source("D:/these/Second_project/QSP/QSPVP/R/R6object.R")
self <- VP_proj_creator$new()
# self$set_targets(filter = cmt == "tumVol", ntime = 6)
self$set_targets(filter = Dose ==50  & cmt == "tumVol",timeforce = c(12,19, 30,45))
VP_df <- crossing(k1 = c(0.5),
k2 = seq(0,8,0.2),
ke = 1 ,#*  seq(0.6,1.4,0.2),
lambda0 =seq(0,0.16,0.025),
lambda1 = c(12),
Vd =  40) %>% #c(0.8,1,1.2)) %>%
map_df(function(x){
if(is.character(x)) return(x)
round(x,3)
} )
self$add_VP(VP_df, fillatend = F, reducefilteratend = T)
self$plot_2D(x = k2, y = lambda0,toaddneg = VP_df, plotMain = T)
self$plot_2D(x = k2, y = lambda0,plotoreturn = 1, add_point = T)
self$filters_neg_above
self$filters_neg_below
source("D:/these/Second_project/QSP/QSPVP/R/R6object.R")
self <- VP_proj_creator$new()
# self$set_targets(filter = Dose == 50 & cmt == "tumVol", ntime = 8)
self$set_targets(filter = Dose == 50 & cmt == "tumVol",timeforce = c(12,19, 30,45))
VP_df <- crossing(k1 = c(0.5),
k2 = seq(0,8,0.5),
ke = 1 ,#*  seq(0.6,1.4,0.2),
lambda0 =seq(0.04,0.16,0.025),
lambda1 = c(12),
Vd =  c(20:40)) %>% #c(0.8,1,1.2)) %>%
map_df(function(x){
if(is.character(x)) return(x)
round(x,3)
} )
# VP_df <- crossing(k1 = c(0.5),
#                   k2 = seq(0
self$add_VP(VP_df, fillatend =F, reducefilteratend = F)
# self$plot_2D(k2, lambda0, plotMain = T)
self$plot_3D(k2, lambda0, Vd)
source("D:/these/Second_project/QSP/QSPVP/R/R6object.R")
self <- VP_proj_creator$new()
# self$set_targets(filter = Dose == 50 & cmt == "tumVol", ntime = 8)
self$set_targets(filter = Dose==50 & cmt == "tumVol",timeforce = c(12,19, 30,45))
VP_df <- crossing(k1 = c(0.5),
k2 = seq(0,8,0.0025),
ke = 1 ,#*  seq(0.6,1.4,0.2),
lambda0 =seq(0,0.16,0.0025),
lambda1 = c(12),
Vd =  40) %>% #c(0.8,1,1.2)) %>%
map_df(function(x){
if(is.character(x)) return(x)
round(x,3)
} )
self$add_VP(VP_df, fillatend = F, reducefilteratend = T,  npersalve = 2000,  time_compteur = F)
VP_df
seq(0,8,0.0025)
prototiny <- tibble(protocol = "dose50", cmt = "tumVol", time = c(12,40), min = c(100.1845, 431.0056),
max = c(100.1847, 431.0058))
prototiny
prototiny <- tibble(protocol = "dose50", cmt = "tumVol", time = c(12,40), min = c(100.1845, 431.0056),
max = c(100.1847, 431.0058))
self <- VP_proj_creator$new()
self$set_targets(manual = prototiny)
self$targets <- prototiny
VP_df <- crossing(k1 = c(0.5),
k2 = seq(0,3,0.005),
ke = 1 ,#*  seq(0.6,1.4,0.2),
lambda0 =seq(0,1,0.005),
lambda1 = c(12),
Vd =  40) %>% #c(0.8,1,1.2)) %>%
map_df(function(x){
if(is.character(x)) return(x)
round(x,3)
} )
VP_df
self$add_VP(VP_df, fillatend = F, reducefilteratend = T,  npersalve = 2000,  time_compteur = F,keepRefFiltaftDis = T)
self$plot_2D(k2, lambda0, plotoreturn = 1)
# analyse above
lamda0unique<-  c(self$filters_neg_above$lambda0, self$filters_neg_below$lambda0 )  %>% unique
lambda0seg <-  tibble(lambda0max = lamda0unique) %>%
add_row(lambda0max = 0) %>%
add_row(lambda0max = 1) %>%
arrange(lambda0max) %>%
mutate(lambda0min = lag(lambda0max)) %>%
slice(-1)
# lambda0seg %>%
#   rowid_to_column() %>%
#   ggplot()+
#   geom_rect(aes(xmin = 0, xmax = 1.3, ymin = lambda0min, ymax =lambda0max, fill = factor(rowid)), col = "black")+
#   guides(fill = F)
k2unique<-  c(self$filters_neg_above$k2, self$filters_neg_below$k2 )  %>% unique
k2seg <- tibble(k2max = k2unique) %>%
add_row(k2max = 0) %>%
add_row(k2max = 1.2) %>%
arrange(k2max) %>%
mutate(k2min = lag(k2max)) %>%
slice(-1)
# k2seg %>%
#  rowid_to_column() %>%
#  ggplot()+
#  geom_rect(aes(xmin = k2min, xmax = k2max, ymin = 0, ymax =1, fill = factor(rowid)), col = "black")+
#  guides(fill = F)
allsquares <- crossing(lambda0seg, k2seg) %>%
filter(k2min != k2max) %>%
filter(lambda0min != lambda0max)
allsquares0 <- allsquares
# allsquares0 %>%
#  rowid_to_column() %>%
#  ggplot()+
#  geom_rect(aes(xmin = k2min, xmax = k2max, ymin = lambda0min, ymax =lambda0max, fill = factor(rowid)),col = "black")+
#  guides(fill = F)
filters <- self$make_filters() %>%
map_chr(~ gsub("line\\$", "", .x))
filter_above <- "!(lambda0min >= ref$lambda0 &  k2max <= ref$k2)"
for(a in 1:nrow(self$filters_neg_above)){
ref <- self$filters_neg_above %>% slice(a)
allsquares <- allsquares %>%
filter(!!parse_expr(filter_above))
}
filter_below<- "!(lambda0max <= ref$lambda0 &  k2min >= ref$k2)"
for(a in 1:nrow(self$filters_neg_below)){
ref <- self$filters_neg_below %>% slice(a)
allsquares <- allsquares %>%
filter(!!parse_expr(filter_below))
}
allsquares %>%
rowid_to_column() %>%
ggplot()+
geom_rect(aes(xmin = k2min, xmax = k2max, ymin = lambda0min, ymax =lambda0max, fill = factor(rowid)),col = "black")+
labs(fill = "bloc")
allsquares
VP_df2 <- allsquares %>%
mutate(data = pmap(list(lambda0max, lambda0min, k2max, k2min), function(lambda0max, lambda0min, k2max, k2min){
crossing(k2 = seq(k2min, k2max, 0.0002), lambda0 = seq(lambda0min, lambda0max, 0.0002) )
})) %>%
unnest()%>%
select(lambda0, k2) %>%
mutate(k1 = 0.5, ke = 1, lambda1 = 12, Vd = 40)
allsquares
self$add_VP(VP_df2, fillatend = F, reducefilteratend = F,  npersalve = 2000,  time_compteur = F,keepRefFiltaftDis = T)
self$plot_VP(nmax = 10)
self$plot_VP(nmax = 20)+
geom_point(aes(x = 12, y = 100.1846), col = "red")+
geom_point(aes(x = 40, y = 431.0057), col = "red")
length(seq(0,3,0.0002)) * length(seq(seq(0,1,0.0002)))
length(seq(0,3,0.0002)) * length(seq(seq(0,1,0.0002))) * 0.6 / 2000/3600 # temps en heure
source("D:/these/Second_project/QSP/modeling_work/VT_simeoni/1_user_inputs/1_config_Lindner.r")
source("D:/these/Second_project/QSP/QSPVP/R/R6object.R")
self <- VP_proj_creator$new(sourcefile = "D:/these/Second_project/QSP/modeling_work/VT_simeoni/1_user_inputs/1_config_Lindner.r")
self$set_targets(manual = tribble(~protocol, ~time, ~cmt, ~ min, ~max,
"unique",740,"Pore", 20, 23
))
VP_df <- crossing(Bcl20 = seq(100,1000,100),
Bclxl0 = seq(100,1000,100),
Mcl10 = 50 ,#*  seq(0.6,1.4,0.2),
BIM0 = seq(100,1000,100),
PUMA0 =seq(100,1000,100),
NOXA0 =  seq(100,1000,100),
BAXc0 = 1000,
BAK0 = 1000) %>% #c(0.8,1,1.2)) %>%
map_df(function(x){
if(is.character(x)) return(x)
round(x,3)
} )
VP_df
self$add_VP(VP_df, fillatend = F, reducefilteratend = F)
self$make_filters()
self$poolVP
peccary_app3()
