mutate(evid = 0, amt = 0) %>%
select(-time) %>%
crossing(time = times)
) %>%
arrange(id, time)
demo <- cohort %>%
rowid_to_column("ids") %>%
mutate(group = floor(ids/2000)+1)
idtorems <- double()
resultsap <- list()
# for(a in unique(demo$group)){
a <- 1
x <- demo %>% filter(group == a) %>%
rowid_to_column("id")
events <- eventsadmin%>% filter(id <2000)
t0 <- Sys.time()
res <- self$model$solve(x, events  , c(X2 = 0)) %>%
as_tibble
difftime(Sys.time(), t0)
}
# then mapping this function of all times-to try: this is our reference time !
allTimesRxODE <-  map(times_to_try, function(x){
time_Impact(x) * 100
})
names(allTimesRxODE) <- map(times_to_try, ~ length(.x) %>% as.character)
temp <- readRDS("full_analysis.RDS") %>%
mutate(timeTotal = as.double(timeTotal)) %>%
group_by(Step) %>%
mutate(median = median (timeTotal)) %>%
filter(median == timeTotal) %>%
ungroup() %>%
mutate( n = map_dbl(times_to_try, ~ length(.x)) ) %>%
mutate(timecomput =  map_dbl(allTimesRxODE, ~ as.double(.x)/ 100) ) %>%
mutate(Old = 7.4 + allTimesRxODE %>% reduce(c) %>% as.double()) %>%
rename(New = timeTotal) %>%
gather("method", "value", Old, New) %>%
mutate(value= as.double(value))
plotC <- temp %>%
ggplot()+
geom_vline(aes(xintercept = (ref$medianModel/100) %>% median, lty= "Used in\nmain\nanalysis"))+
geom_line(aes(timecomput, value, col = method), size = 2)+
geom_point(aes(timecomput, value, col = method), size = 3)+
geom_segment(aes(x = 0.52, xend = 0.45, y = 36, yend = 39), col = "red",  arrow = arrow(length = unit(0.2, "cm")))+
# geom_line(aes(timecomput, value, col = method), size = 2)+
geom_ribbon(data = temp %>% spread(method, value), aes(x = timecomput, ymin = New, ymax =  Old), alpha = 0.3)+
theme_bw()+
scale_y_log10()+
scale_x_log10()+
labs(x = "Time to compute 2000 VPs with RxODE (sec)",y = "Time for performing 200.000 VPs (sec)", lty = "", col = "Method")+
scale_linetype_manual(values = 2);plotC
# Perform the plot
plotC <- temp %>%
ggplot()+
geom_vline(aes(xintercept = (ref$medianModel/100) %>% median, lty= "Used in\nmain\nanalysis"))+
geom_line(aes(timecomput, value, col = method), size = 2)+
geom_point(aes(timecomput, value, col = method), size = 3)+
geom_segment(aes(x = 0.52, xend = 0.45, y = 36, yend = 39), col = "red",  arrow = arrow(length = unit(0.2, "cm")))+
# geom_line(aes(timecomput, value, col = method), size = 2)+
geom_ribbon(data = temp %>% spread(method, value), aes(x = timecomput, ymin = New, ymax =  Old), alpha = 0.3)+
theme_bw()+
scale_y_log10()+
scale_x_log10()+
labs(x = "Time to compute 2000 VPs with RxODE (sec)",y = "Time for performing 200.000 VPs (sec)", lty = "", col = "Method")+
scale_linetype_manual(values = 2);plotC
plotD
plotC <- temp %>%
ggplot()+
geom_point(aes(nparam,nsimul, col = factor(1-pct)))+
geom_line(data = temp %>% filter(nparam != "5alt"), aes(nparam, nsimul, col =factor(1-pct), group = pct))+
geom_line(data = temp %>% filter(nparam %in% c("5", "5alt")), aes(nparam, nsimul, col =factor(1-pct), group = pct), lty = 2)+
theme_bw()+
geom_segment(aes(x = 5.5, xend = 5.1, y = 49000, yend = 47532), col = "red",  arrow = arrow(length = unit(0.2, "cm")))+
scale_y_log10()+
labs(x = "Number of varying parameter", y = "Number of simulations performed",col = "Percentage\nRejection");plotC
plotD
plotE
plotC
base <- crossing( k2 = 0.2,
lambda0 = 0.1,
Vd =  40,
lambda1 = 12,
ke = 1
)
sizeTotal <- 4E6
nperparam <- ceiling(sizeTotal^(1/5)) # count how many parameter values per paramer, superior round
list <-   map(1:5, function(x){ # for each parameter, create the sequence function
min <- base[[x]]/10
max <- base[[x]]*10
step <- (max - min)/(nperparam-1)
expr(seq( !!min,  !!max, !!step  ))
})
names(list) <- names(base[1:5])
cohort <- crossing(!!!list) %>%
slice(1:sizeTotal) %>%
mutate(psi = 20, w0 = 50, k1 = 0.5)
# Plot F -plot------------------------------------------------------------------
setwd( file.path(root, "ImpactSizeCohort"))
datas <- readRDS("full_analysis.RDS") %>%
arrange(nCohort) %>%
mutate(timeTotal = case_when(nCohort %in% (c(10,50,100,200,2000,3000,1000,4000) * 1000 )& iteration == 1 ~ timeTotal /60,
T ~timeTotal))
datas
readRDS("full_analysis.RDS") %>%
arrange(nCohort) %>%
mutate(timeTotal = case_when(nCohort %in% (c(10,50,100,200,2000,3000,1000,4000) * 1000 )& iteration == 1 ~ timeTotal /60,
T ~timeTotal))
datas <- readRDS("full_analysis.RDS") %>%
arrange(nCohort) %>%
mutate(timeTotal = case_when(nCohort %in% (c(10,50,100,200,2000,3000,1000,4000) * 1000 )& iteration == 1 ~ timeTotal /60,
T ~timeTotal)) %>%
group_by(nCohort) %>%
summarise(timeTotal = median(timeTotal))
datas
plotG <-  datas %>%
mutate(Old = 50.1 * nCohort / 2E5 / 60) %>% # considering a strict proportionality
rename(New = timeTotal) %>%
mutate(time =  round(New / Old,1)) %>%
{pregather <<- .} %>%
gather("Method", "value", Old, New) %>%
mutate(pctExtra = round((nCohort-nsimul)/ nCohort * 100 )) %>%
mutate(label = if_else(Method == "Old", "",as.character(time))) %>%
ggplot()+
scale_y_log10()+
scale_x_log10()+
# stat_function(fun = function(x)55.1 * x / 2E5, aes(col = "Blue") , size = 2)+
geom_vline(aes(xintercept = 2E5, lty = "Used in\nmain\nanalysis"))+
# geom_segment(aes(x = 2.6E5, xend = 2.2E5, y = 35, yend = 42), col = "red",  arrow = arrow(length = unit(0.2, "cm")))+
# geom_text(aes(nCohort, value* 1E19, label = label), nudge_y = -20)+
geom_line(aes(nCohort, value, col = Method), size = 2) +
geom_ribbon(data = pregather, aes(x = nCohort, ymin = Old, ymax = New), alpha = 0.3)+
geom_point(aes(nCohort, value, col = Method), size = 3)+
theme_bw() +
# geom_segment(aes(x = 2.6E5, xend = 2.2E5, y = 0.36, yend = 0.44), col = "red",  arrow = arrow(length = unit(0.2, "cm")))+
# facet_wrap(~iteration)+
scale_linetype_manual(values = 2)+
labs(x = "Number of VPs in original cohort", y = "Time of computation (minute)");plotG
datas %>%
mutate(Old = 50.1 * nCohort / 2E5 / 60) %>% # considering a strict proportionality
rename(New = timeTotal) %>%
mutate(time =  round(New / Old,1)) %>%
{pregather <<- .}
datas %>%
mutate(Old = 50.1 * nCohort / 2E5 / 60) %>% # considering a strict proportionality
rename(New = timeTotal) %>%
mutate(time =  round(New / Old,1)) %>%
{pregather <<- .} %>%
gather("Method", "value", Old, New) %>%
mutate(pctExtra = round((nCohort-nsimul)/ nCohort * 100 )) %>%
mutate(label = if_else(Method == "Old", "",as.character(time)))
readRDS("full_analysis.RDS") %>%
arrange(nCohort) %>%
mutate(timeTotal = case_when(nCohort %in% (c(10,50,100,200,2000,3000,1000,4000) * 1000 )& iteration == 1 ~ timeTotal /60,
T ~timeTotal)) %>%
group_by(nCohort)
datas <- readRDS("full_analysis.RDS") %>%
arrange(nCohort) %>%
mutate(timeTotal = case_when(nCohort %in% (c(10,50,100,200,2000,3000,1000,4000) * 1000 )& iteration == 1 ~ timeTotal /60,
T ~timeTotal)) %>%
group_by(nCohort) %>%
summarise(timeTotal = median(timeTotal), nsimul = median(nsimul))
plotG <-  datas %>%
mutate(Old = 50.1 * nCohort / 2E5 / 60) %>% # considering a strict proportionality
rename(New = timeTotal) %>%
mutate(time =  round(New / Old,1)) %>%
{pregather <<- .} %>%
gather("Method", "value", Old, New) %>%
mutate(pctExtra = round((nCohort-nsimul)/ nCohort * 100 )) %>%
mutate(label = if_else(Method == "Old", "",as.character(time))) %>%
ggplot()+
scale_y_log10()+
scale_x_log10()+
# stat_function(fun = function(x)55.1 * x / 2E5, aes(col = "Blue") , size = 2)+
geom_vline(aes(xintercept = 2E5, lty = "Used in\nmain\nanalysis"))+
# geom_segment(aes(x = 2.6E5, xend = 2.2E5, y = 35, yend = 42), col = "red",  arrow = arrow(length = unit(0.2, "cm")))+
# geom_text(aes(nCohort, value* 1E19, label = label), nudge_y = -20)+
geom_line(aes(nCohort, value, col = Method), size = 2) +
geom_ribbon(data = pregather, aes(x = nCohort, ymin = Old, ymax = New), alpha = 0.3)+
geom_point(aes(nCohort, value, col = Method), size = 3)+
theme_bw() +
# geom_segment(aes(x = 2.6E5, xend = 2.2E5, y = 0.36, yend = 0.44), col = "red",  arrow = arrow(length = unit(0.2, "cm")))+
# facet_wrap(~iteration)+
scale_linetype_manual(values = 2)+
labs(x = "Number of VPs in original cohort", y = "Time of computation (minute)");plotG
allTimes <- readRDS(file.path(root, "Simeoni", "full_analysis.RDS" ))
ref <-  readRDS(file.path(root, "Simeoni_ref", "timeReference.RDS" ))
allTimes %>%
mutate(pcteffe = VPfound / 200000) %>%
mutate(dif = pct  -  pcteffe) %>%
group_by(dif) %>%
tally
plotA <- allTimes %>%
mutate(pct = as.double(pct)) %>%
mutate(nparam = as.character(nparam)) %>%
mutate(meth = if_else(meth == "", "Centered", "Lowest")) %>%
group_by(nparam, pct, meth) %>% # compute the median times of computatoin  (from x5 analyses)
summarise(timeTotal = median(timeTotal)) %>%
ungroup() %>%
ggplot()+
geom_rect(aes(xmin = 48, xmax = 52, ymin = 39, ymax = 41.5), col = "red",alpha = 0)+
geom_segment(aes(x = 56, xend = 52, y = 45, yend = 42), col = "red",  arrow = arrow(length = unit(0.2, "cm")))+
# geom_text(aes(x = 62, y = 46, label = "next plots"), col = "red", size = 3)+ # Note: last 3 brut way, not reproducible
geom_point(aes(x = (1-pct) * 100, y = timeTotal, col = nparam))+
geom_line(aes(x = (1-pct)* 100, y = timeTotal, col = nparam, lty = meth))+
geom_line(data = ref, aes(x= (1- pct)*100, y = medianTotal ), lty = 2)+
geom_ribbon(data = ref, aes(x= (1- pct)*100, ymin = minTotal, ymax = maxTotal, fill = "Time of\nreference" ),alpha = 0.2)+
geom_line(data = ref, aes(x= (1- pct)*100, y = minTotal ))+
geom_line(data = ref, aes(x= (1- pct)*100, y = maxTotal ))+
theme_bw()+
scale_linetype_manual(values = c(1,2))+
scale_fill_manual(values = "grey")+
labs(x = "Percentage of rejected VP", y = "Total Time analysis (sec)", col = "Number\nvarying\nparameters", fill = "",
lty = "Target\nmethod"); plotA
allTimes %>%
mutate(timeTotal= as.double(timeTotal)) %>%
left_join(
allTimes %>%
group_by(nparam, pct,meth) %>%
summarise(  timeTotal = median(as.double(timeTotal)) ) %>%
mutate(test = T)
) %>%
filter(test) %>%
select(nparam, pct, meth,iteration,test) -> iteration_to_keep
# Take as reference the 50% acceptation
ref0.5 <- ref %>% filter(pct == 0.5)
ref0.5 <- tibble(pct = "Old", time = c("Other", "RxODE"), value = c(ref0.5$medianTotal - ref0.5$medianModel,ref0.5$medianModel)) %>% crossing(nparam = 5)
plotB <- allTimes %>%
filter(nparam == 5 & pct == 0.5 & meth == "") %>%
left_join(iteration_to_keep) %>%
filter(test) %>%
gather("time", "value",GreenFilter, Other, RedFilter, RxODE) %>%
mutate(pct = "New") %>%
bind_rows(ref0.5 ) %>%
group_by(pct) %>%
mutate(total = sum(value)) %>%
ungroup() %>%
ggplot()+
geom_segment(aes(x = "New", xend = "New", y = 53, yend = 50), col = "red",  arrow = arrow(length = unit(0.2, "cm")))+
geom_col(aes(pct, value, fill = fct_reorder(time, value, .desc = F)), alpha = 0.5)+
theme_bw()+
scale_fill_manual(values = c("grey", "red", "darkgreen", "blue"))+
labs(x = "Method", y = "Time of analysis (sec)", fill = "Step")+
geom_text(aes(pct, value, fill = fct_reorder(time, value, .desc = F), label = as.double(value) %>% round(1)), position = position_stack(vjust = .5))+
geom_label(aes(pct, total+ 5 ,  label = paste0("Total:",as.double(total) %>% round(1), "s"))); plotB
cowplot::plot_grid(plotA, plotB, nrow =   1)
# plot C ------------------------------------------------------------------
temp <- allTimes %>%
# mutate(meth = if_else(meth == "", "Centered", "Lowest")) %>%
mutate(timeTotal = as.double(timeTotal)) %>%
group_by(nparam, pct, meth) %>%
mutate(median = median(timeTotal)) %>%
ungroup() %>%
filter(timeTotal == median) %>%
mutate(nparam = paste0(nparam, if_else(meth == "", "", "alt")))
plotC <- temp %>%
ggplot()+
geom_point(aes(nparam,nsimul, col = factor(1-pct)))+
geom_line(data = temp %>% filter(nparam != "5alt"), aes(nparam, nsimul, col =factor(1-pct), group = pct))+
geom_line(data = temp %>% filter(nparam %in% c("5", "5alt")), aes(nparam, nsimul, col =factor(1-pct), group = pct), lty = 2)+
theme_bw()+
geom_segment(aes(x = 5.5, xend = 5.1, y = 49000, yend = 47532), col = "red",  arrow = arrow(length = unit(0.2, "cm")))+
scale_y_log10()+
labs(x = "Number of varying parameter", y = "Number of simulations performed",col = "Percentage\nRejection");plotC
# plot D ------------------------------------------------------------------
temp <- allTimes %>%
mutate(timeTotal = as.double(timeTotal)) %>%
group_by(nparam, pct, meth) %>%
mutate(median = median(timeTotal)) %>%
mutate(filtreTime = (Tgreen1 + Tgreen1)) %>%
ungroup() %>%
filter(timeTotal == median) %>%
mutate(nparam = paste0(nparam, if_else(meth == "", "", "alt")))
plotD <- temp %>%
ggplot()+
geom_point(aes(nparam,filtreTime, col = factor(1-pct)))+
geom_segment(aes(5.4, xend = 5.1, y = 16.5, yend = 14.7), col = "red",  arrow = arrow(length = unit(0.2, "cm")))+
geom_line(data = temp %>% filter(nparam != "5alt"), aes(nparam, filtreTime, col =factor(1-pct), group = pct))+
geom_line(data = temp %>% filter(nparam %in% c("5", "5alt")), aes(nparam, filtreTime, col =factor(1-pct), group = pct), lty = 2)+
theme_bw()+
scale_y_log10()+
labs(x = "Number of varying parameter", y = "Filtering time first iteration (sec)",col = "Percentage\nRejection");plotD
setwd( file.path(root, "time_impact"))
# Times to try to print
times_to_try <- list(seq(0,48,48), seq(0,48,4),seq(0,48,2),seq(0,48,1),seq(0,48,0.5),seq(0,48,0.1))
# Same set-up as reference: 5 dimension
cohort <- cohort_creator(nmodif = 5)
alltumVol <- readRDS(file.path(root, "Simeoni/Ref_5.RDS"))%>%
pull(tumVol)
# determine new targets using the center 50% acceptaiton set-up (quantiles 25 to 75)
prototemp <- tibble(protocol = "dose50", cmt = "tumVol", time = 48, min =  quantile(alltumVol, probs = 0.25),
max = quantile(alltumVol, probs = 0.75))# and apply the new min and max
# Compute all files
for(a in 1:length(times_to_try)){ # for each time to try
for(b in 1:5){
namefile <- paste0(a, "_", b,".RDS" )
if(!file.exists(namefile)){
self <- VP_proj_creator$new()
self$set_targets(manual = prototemp)
self$times <- times_to_try[[a]] # use this time instead of the default one
self$add_VP(VP_df = cohort, use_green_filter = T, npersalve = 2000, pctActivGreen = 0, saveVPRej = F, time_compteur = T)
self$timeTrack$ttotal
saveRDS(object = self, namefile)
}
} # end for b
} # end for a
# plot E - plot  -------
setwd( file.path(root, "time_impact"))
# same list
times_to_try <- list(seq(0,48,48), seq(0,48,4),seq(0,48,2),seq(0,48,1),seq(0,48,0.5),seq(0,48,0.1))
target <-  tibble(protocol = "dose50", cmt  = "tumVol", time = 48, min = -1E99, max = 1E99)
# Compute the time to of RxODE solving for each set-up, first by creating a function
time_Impact <- function(times = 1:40){
cohort <- cohort_creator(nmodif = 2)
self$protocols[] %>%
bind_rows() %>%
mutate(proto = names( self$protocols)) -> protocols
eventsadmin  <- crossing(id = 1:2000, proto  = unique(target$protocol)) %>%
left_join(protocols, by = "proto" ) %>%
mutate(evid = 1)
eventsadmin  <-   eventsadmin %>%
bind_rows(
eventsadmin  %>%
mutate(evid = 0, amt = 0) %>%
select(-time) %>%
crossing(time = times)
) %>%
arrange(id, time)
demo <- cohort %>%
rowid_to_column("ids") %>%
mutate(group = floor(ids/2000)+1)
idtorems <- double()
resultsap <- list()
# for(a in unique(demo$group)){
a <- 1
x <- demo %>% filter(group == a) %>%
rowid_to_column("id")
events <- eventsadmin%>% filter(id <2000)
t0 <- Sys.time()
res <- self$model$solve(x, events  , c(X2 = 0)) %>%
as_tibble
difftime(Sys.time(), t0)
}
# then mapping this function of all times-to try: this is our reference time !
allTimesRxODE <-  map(times_to_try, function(x){
time_Impact(x) * 100
})
names(allTimesRxODE) <- map(times_to_try, ~ length(.x) %>% as.character)
# gather all times
temp <- readRDS("full_analysis.RDS") %>%
mutate(timeTotal = as.double(timeTotal)) %>%
group_by(Step) %>%
mutate(median = median (timeTotal)) %>%
filter(median == timeTotal) %>%
ungroup() %>%
mutate( n = map_dbl(times_to_try, ~ length(.x)) ) %>%
mutate(timecomput =  map_dbl(allTimesRxODE, ~ as.double(.x)/ 100) ) %>%
mutate(Old = 7.4 + allTimesRxODE %>% reduce(c) %>% as.double()) %>% # for reference time, we add fixed 7.4 sec
# corresponding to the "other" time seens in  plot B (assumed the same)
rename(New = timeTotal) %>%
gather("method", "value", Old, New) %>%
mutate(value= as.double(value))
# Perform the plot
plotE <- temp %>%
ggplot()+
geom_vline(aes(xintercept = (ref$medianModel/100) %>% median, lty= "Used in\nmain\nanalysis"))+
geom_line(aes(timecomput, value, col = method), size = 2)+
geom_point(aes(timecomput, value, col = method), size = 3)+
geom_segment(aes(x = 0.52, xend = 0.45, y = 36, yend = 39), col = "red",  arrow = arrow(length = unit(0.2, "cm")))+
# geom_line(aes(timecomput, value, col = method), size = 2)+
geom_ribbon(data = temp %>% spread(method, value), aes(x = timecomput, ymin = New, ymax =  Old), alpha = 0.3)+
theme_bw()+
scale_y_log10()+
scale_x_log10()+
labs(x = "Time to compute 2000 VPs with RxODE (sec)",y = "Time for performing 200.000 VPs (sec)", lty = "", col = "Method")+
scale_linetype_manual(values = 2);plotE
# Plot F -plot------------------------------------------------------------------
setwd( file.path(root, "ImpactSizeCohort"))
datas <- readRDS("full_analysis.RDS") %>%
arrange(nCohort) %>%
mutate(timeTotal = case_when(nCohort %in% (c(10,50,100,200,2000,3000,1000,4000) * 1000 )& iteration == 1 ~ timeTotal /60,
T ~timeTotal)) %>%
group_by(nCohort) %>%
summarise(timeTotal = median(timeTotal), nsimul = median(nsimul))
plotG <-  datas %>%
mutate(Old = 50.1 * nCohort / 2E5 / 60) %>% # considering a strict proportionality
rename(New = timeTotal) %>%
mutate(time =  round(New / Old,1)) %>%
{pregather <<- .} %>%
gather("Method", "value", Old, New) %>%
mutate(pctExtra = round((nCohort-nsimul)/ nCohort * 100 )) %>%
mutate(label = if_else(Method == "Old", "",as.character(time))) %>%
ggplot()+
scale_y_log10()+
scale_x_log10()+
# stat_function(fun = function(x)55.1 * x / 2E5, aes(col = "Blue") , size = 2)+
geom_vline(aes(xintercept = 2E5, lty = "Used in\nmain\nanalysis"))+
# geom_segment(aes(x = 2.6E5, xend = 2.2E5, y = 35, yend = 42), col = "red",  arrow = arrow(length = unit(0.2, "cm")))+
# geom_text(aes(nCohort, value* 1E19, label = label), nudge_y = -20)+
geom_line(aes(nCohort, value, col = Method), size = 2) +
geom_ribbon(data = pregather, aes(x = nCohort, ymin = Old, ymax = New), alpha = 0.3)+
geom_point(aes(nCohort, value, col = Method), size = 3)+
theme_bw() +
# geom_segment(aes(x = 2.6E5, xend = 2.2E5, y = 0.36, yend = 0.44), col = "red",  arrow = arrow(length = unit(0.2, "cm")))+
# facet_wrap(~iteration)+
scale_linetype_manual(values = 2)+
labs(x = "Number of VPs in original cohort", y = "Time of computation (minute)");plotG
library(cowplot)
plot_grid(plotA, plotB, plotC, plotD, plotE, plotF, labels = LETTERS, nrow = 2)
plotF <-  datas %>%
mutate(Old = 50.1 * nCohort / 2E5 / 60) %>% # considering a strict proportionality
rename(New = timeTotal) %>%
mutate(time =  round(New / Old,1)) %>%
{pregather <<- .} %>%
gather("Method", "value", Old, New) %>%
mutate(pctExtra = round((nCohort-nsimul)/ nCohort * 100 )) %>%
mutate(label = if_else(Method == "Old", "",as.character(time))) %>%
ggplot()+
scale_y_log10()+
scale_x_log10()+
# stat_function(fun = function(x)55.1 * x / 2E5, aes(col = "Blue") , size = 2)+
geom_vline(aes(xintercept = 2E5, lty = "Used in\nmain\nanalysis"))+
# geom_segment(aes(x = 2.6E5, xend = 2.2E5, y = 35, yend = 42), col = "red",  arrow = arrow(length = unit(0.2, "cm")))+
# geom_text(aes(nCohort, value* 1E19, label = label), nudge_y = -20)+
geom_line(aes(nCohort, value, col = Method), size = 2) +
geom_ribbon(data = pregather, aes(x = nCohort, ymin = Old, ymax = New), alpha = 0.3)+
geom_point(aes(nCohort, value, col = Method), size = 3)+
theme_bw() +
# geom_segment(aes(x = 2.6E5, xend = 2.2E5, y = 0.36, yend = 0.44), col = "red",  arrow = arrow(length = unit(0.2, "cm")))+
# facet_wrap(~iteration)+
scale_linetype_manual(values = 2)+
labs(x = "Number of VPs in original cohort", y = "Time of computation (minute)");plotF
setwd("D:/these/Second_project/QSP/modeling_work/VT_simeoni/article_QSPVP/data/ImpactSizeCohort")
plot_grid(plotA, plotB, plotC, plotD, plotE, plotF, labels = LETTERS, nrow = 2)
datas <- readRDS("full_analysis.RDS") %>%
arrange(nCohort) %>%
mutate(timeTotal = case_when(nCohort %in% (c(10,50,100,200,2000,3000,1000,4000) * 1000 )& iteration == 1 ~ timeTotal /60,
T ~timeTotal))
plotSupA <- datas %>%
mutate( Old = 55.1 * nCohort / 2E5 / 60) %>%
mutate(New = timeTotal) %>%
mutate(timeTotal=timeTotal*60) %>%
mutate(time =  round(New / Old,1)) %>%
# filter(iteration == 1) %>%
select(-iteration) %>%
mutate(delta = nCohort - nsimul, Rxodeid =  RxODE /nsimul ) %>%
mutate(TodeSaved = delta * Rxodeid, deltaratio = delta/nCohort ) %>%
select(TodeSaved, Rxodeid,delta, deltaratio, everything()) %>%
gather("step", "value", TodeSaved, GreenFilter, Other, RedFilter,RxODE, timeTotal ) %>%
# filter(step == "t2") %>%
mutate(value = value / nCohort) %>%
# filter(nCohort >= 2E5) %>%
ggplot(aes(x = nCohort, y = value, col = step))+
geom_point()+
geom_line()+
scale_y_log10()+
scale_x_log10()+
theme_bw()+
labs(x= "Size cohort (VPs)", y = "Time per size cohort (sec / VP)"); plotSupA
datas
datas <- readRDS("full_analysis.RDS") %>%
arrange(nCohort) %>%
mutate(timeTotal = case_when(nCohort %in% (c(10,50,100,200,2000,3000,1000,4000) * 1000 )& iteration == 1 ~ timeTotal /60,
T ~timeTotal)) %>%
group_by(nCohort) %>%
mutate(mediant = median(timeTotal))
datas <- readRDS("full_analysis.RDS") %>%
arrange(nCohort) %>%
mutate(timeTotal = case_when(nCohort %in% (c(10,50,100,200,2000,3000,1000,4000) * 1000 )& iteration == 1 ~ timeTotal /60,
T ~timeTotal)) %>%
group_by(nCohort) %>%
mutate(mediant = median(timeTotal)) %>%
filter(timeTotal == mediant)
plotSupA <- datas %>%
mutate( Old = 55.1 * nCohort / 2E5 / 60) %>%
mutate(New = timeTotal) %>%
mutate(timeTotal=timeTotal*60) %>%
mutate(time =  round(New / Old,1)) %>%
# filter(iteration == 1) %>%
select(-iteration) %>%
mutate(delta = nCohort - nsimul, Rxodeid =  RxODE /nsimul ) %>%
mutate(TodeSaved = delta * Rxodeid, deltaratio = delta/nCohort ) %>%
select(TodeSaved, Rxodeid,delta, deltaratio, everything()) %>%
gather("step", "value", TodeSaved, GreenFilter, Other, RedFilter,RxODE, timeTotal ) %>%
# filter(step == "t2") %>%
mutate(value = value / nCohort) %>%
# filter(nCohort >= 2E5) %>%
ggplot(aes(x = nCohort, y = value, col = step))+
geom_point()+
geom_line()+
scale_y_log10()+
scale_x_log10()+
theme_bw()+
labs(x= "Size cohort (VPs)", y = "Time per size cohort (sec / VP)"); plotSupA
plot_grid(
plotSupA,
datas %>%
ggplot()+
scale_x_log10()+
geom_point(aes(nCohort, sinuosity))+
geom_line(aes(nCohort, sinuosity))+
theme_bw()+
labs(x = "Size cohort (VPs)", y = "Sinuosity (number of filters)"),
datas %>%
mutate(ratioRxode =  nsimul/nCohort) %>%
ggplot()+
scale_x_log10()+
geom_point(aes(nCohort, ratioRxode * 100))+
geom_line(aes(nCohort, ratioRxode*100))+
theme_bw()+
labs(x = "Size cohort (VPs)", y=  "Percentage of VPs with ODE solved"),
nrow = 1, labels = LETTERS, rel_widths = c(1.4,1,1)
)
stepname
