}
filter_above
allsquares
self$param
x = "ke"
x %in% c(self$param_increase, self$param_no_impact, self$param_reduce)
self$param_increase
param_unique <- map(self$param, function(x){
temp <-  c(self$filters_neg_above[[x]], self$filters_neg_below[[x]] )  %>% unique
maxcol <- paste0(x, "max")
mincol <- paste0(x, "min")
if(!x %in% c(self$param_increase$tumVol, self$param_no_impact$tumVol, self$param_reduce$tumVol)){
df_temp <- tibble(max = temp)
names(df_temp) <- c(x)
return(df_temp)
}else if(length(temp) == 1){
df_temp <- tibble(max = temp, min = temp)
}else{
df_temp <-tibble(max =  temp) %>%
# add_row(lambda0max = 0) %>%
# add_row(lambda0max = 1) %>%
arrange(max) %>%
mutate(min = lag(max)) %>%
slice(-1)
}
names(df_temp) <- c(maxcol, mincol)
df_temp
})
allsquares <- invoke(.fn = crossing, .args = param_unique )
allsquares
allsquares <- invoke(.fn = crossing, .args = param_unique )
allsquares0 <- allsquares
filters <- self$make_filters() %>%
map_chr(~ gsub("line\\$", "", .x))
filters <- paste0("!( ", filters, ")")
for(a in self$param_increase$tumVol){
filters[1] <- gsub(paste0(" ",a, " "), paste0(" ", a, "min "), filters[1])
filters[2] <- gsub(paste0(" ",a, " "), paste0(" ", a, "max "), filters[2])
}
for(a in self$param_reduce$tumVol){
filters[1] <- gsub(paste0(" ",a, " "), paste0(" ", a, "max "), filters[1])
filters[2] <- gsub(paste0(" ",a, " "), paste0(" ", a, "min "), filters[2])
}
filter_above <- filters[1]
allsquares
self$filters_neg_above
param_unique <- map(self$param, function(x){
temp <-  c(self$filters_neg_above[[x]], self$filters_neg_below[[x]] )  %>% unique
maxcol <- paste0(x, "max")
mincol <- paste0(x, "min")
if(!x %in% c(self$param_increase$tumVol, self$param_no_impact$tumVol, self$param_reduce$tumVol)){
df_temp <- tibble(max = temp)
names(df_temp) <- c(x)
return(df_temp)
}else if(length(temp) == 1){
df_temp <- tibble(max = temp, min = temp)
}else{
df_temp <-tibble(max =  temp) %>%
# add_row(lambda0max = 0) %>%
# add_row(lambda0max = 1) %>%
arrange(max) %>%
mutate(min = lag(max)) %>%
slice(-1)
}
names(df_temp) <- c(maxcol, mincol)
df_temp
})
df_temp
param_unique
allsquares <- invoke(.fn = crossing, .args = param_unique )
allsquares
param_unique
param_unique %>% map_dbl(~length(.x))
param_unique %>% map_dbl(~nrow(.x))
2*40*5*3*39
allsquares <- invoke(.fn = crossing, .args = param_unique )
allsquares0 <- allsquares
filters <- self$make_filters() %>%
map_chr(~ gsub("line\\$", "", .x))
filters <- paste0("!( ", filters, ")")
for(a in self$param_increase$tumVol){
filters[1] <- gsub(paste0(" ",a, " "), paste0(" ", a, "min "), filters[1])
filters[2] <- gsub(paste0(" ",a, " "), paste0(" ", a, "max "), filters[2])
}
for(a in self$param_reduce$tumVol){
filters[1] <- gsub(paste0(" ",a, " "), paste0(" ", a, "max "), filters[1])
filters[2] <- gsub(paste0(" ",a, " "), paste0(" ", a, "min "), filters[2])
}
filter_above <- filters[1]
for(a in 1:nrow(self$filters_neg_above)){
ref <- self$filters_neg_above %>% slice(a)
allsquares <- allsquares %>%
filter(!!parse_expr(filter_above))
}
allsquares
self$filters_neg_below
self$filters_neg_above
filter_below<- filters[2]
for(a in 1:nrow(self$filters_neg_below)){
ref <- self$filters_neg_below %>% slice(a)
allsquares <- allsquares %>%
filter(!!parse_expr(filter_below))
}
allsquares
allsquares
allsquares0
self
self
self
x
temp <-  c(self$filters_neg_above[[x]], self$filters_neg_below[[x]] )  %>% unique
temp
temp
maxcol <- paste0(x, "max")
mincol <- paste0(x, "min")
filters_neg_above
self$filters_neg_above
param_unique <- map(self$param, function(x){
temp <-  c(self$filters_neg_above[[x]], self$filters_neg_below[[x]] )  %>% unique
maxcol <- paste0(x, "max")
mincol <- paste0(x, "min")
#
#   if(!x %in% c(self$param_increase$tumVol, self$param_no_impact$tumVol, self$param_reduce$tumVol)){
#
#     df_temp <- tibble(max = temp)
#     names(df_temp) <- c(x)
#     return(df_temp)
# }else
if(length(temp) == 1){
df_temp <- tibble(max = temp, min = temp)
}else{
df_temp <-tibble(max =  temp) %>%
# add_row(lambda0max = 0) %>%
# add_row(lambda0max = 1) %>%
arrange(max) %>%
mutate(min = lag(max)) %>%
slice(-1)
}
names(df_temp) <- c(maxcol, mincol)
df_temp
})
param_unique
allsquares
allsquares <- invoke(.fn = crossing, .args = param_unique )
allsquares
filters <- self$make_filters() %>%
map_chr(~ gsub("line\\$", "", .x))
self$param_increase
names(self$param_increase)
x = "tumVol"
self$make_filters(x)
filters <- self$make_filters(x) %>%
map_chr(~ gsub("line\\$", "", .x))
filters <- paste0("!( ", filters, ")")
filters <- self$make_filters(x) %>%
map_chr(~ gsub("line\\$", "", .x))
filters <- paste0("!( ", filters, ")")
for(a in self$param_increase[[x]]){
filters[1] <- gsub(paste0(" ",a, " "), paste0(" ", a, "min "), filters[1])
filters[2] <- gsub(paste0(" ",a, " "), paste0(" ", a, "max "), filters[2])
}
for(a in self$param_reduce[[x]]){
filters[1] <- gsub(paste0(" ",a, " "), paste0(" ", a, "max "), filters[1])
filters[2] <- gsub(paste0(" ",a, " "), paste0(" ", a, "min "), filters[2])
}
filters
filter_above <- filters[1]
filter_above
filters_neg_above
self$filters_neg_above
filters_neg_above <- self$filters_neg_above %>% filter(cmt == x)
filters_neg_above
filters_neg_above
for(a in 1:nrow(filters_neg_above)){
ref <- filters_neg_above %>% slice(a)
allsquares <- allsquares %>%
filter(!!parse_expr(filter_above))
}
self$param %in% c(self$param_increase[[x]], self$param_reduce[[x]])
self$param [self$param %in% c(self$param_increase[[x]], self$param_reduce[[x]])]
self$param[! self$param %in% c(self$param_increase[[x]], self$param_reduce[[x]])]
other <- self$param[! self$param %in% c(self$param_increase[[x]], self$param_reduce[[x]])]
filters <- paste0("!( ", filters, ")")
other <- self$param[! self$param %in% c(self$param_increase[[x]], self$param_reduce[[x]])]
for(a in c(self$param_increase[[x]], other)){
filters[1] <- gsub(paste0(" ",a, " "), paste0(" ", a, "min "), filters[1])
filters[2] <- gsub(paste0(" ",a, " "), paste0(" ", a, "max "), filters[2])
}
for(a in self$param_reduce[[x]]){
filters[1] <- gsub(paste0(" ",a, " "), paste0(" ", a, "max "), filters[1])
filters[2] <- gsub(paste0(" ",a, " "), paste0(" ", a, "min "), filters[2])
}
filter_above <- filters[1]
filters_neg_above <- self$filters_neg_above %>% filter(cmt == x)
for(a in 1:nrow(filters_neg_above)){
ref <- filters_neg_above %>% slice(a)
allsquares <- allsquares %>%
filter(!!parse_expr(filter_above))
}
allsquares
allsquares <- invoke(.fn = crossing, .args = param_unique )
allsquares
map(names(self$param_increase), function(x){
filters <- self$make_filters(x) %>%
map_chr(~ gsub("line\\$", "", .x))
filters <- paste0("!( ", filters, ")")
other <- self$param[! self$param %in% c(self$param_increase[[x]], self$param_reduce[[x]])]
for(a in c(self$param_increase[[x]], other)){
filters[1] <- gsub(paste0(" ",a, " "), paste0(" ", a, "min "), filters[1])
filters[2] <- gsub(paste0(" ",a, " "), paste0(" ", a, "max "), filters[2])
}
for(a in self$param_reduce[[x]]){
filters[1] <- gsub(paste0(" ",a, " "), paste0(" ", a, "max "), filters[1])
filters[2] <- gsub(paste0(" ",a, " "), paste0(" ", a, "min "), filters[2])
}
filter_above <- filters[1]
filters_neg_above <- self$filters_neg_above %>% filter(cmt == x)
for(a in 1:nrow(filters_neg_above)){
ref <- filters_neg_above %>% slice(a)
allsquares <- allsquares %>%
filter(!!parse_expr(filter_above))
}
filter_below<- filters[2]
for(a in 1:nrow(self$filters_neg_below)){
ref <- self$filters_neg_below %>% slice(a)
allsquares <- allsquares %>%
filter(!!parse_expr(filter_below))
}
})
allsquares <- invoke(.fn = crossing, .args = param_unique )
filters <- self$make_filters(x) %>%
map_chr(~ gsub("line\\$", "", .x))
filters <- paste0("!( ", filters, ")")
other <- self$param[! self$param %in% c(self$param_increase[[x]], self$param_reduce[[x]])]
for(a in c(self$param_increase[[x]], other)){
filters[1] <- gsub(paste0(" ",a, " "), paste0(" ", a, "min "), filters[1])
filters[2] <- gsub(paste0(" ",a, " "), paste0(" ", a, "max "), filters[2])
}
for(a in self$param_reduce[[x]]){
filters[1] <- gsub(paste0(" ",a, " "), paste0(" ", a, "max "), filters[1])
filters[2] <- gsub(paste0(" ",a, " "), paste0(" ", a, "min "), filters[2])
}
filters
filter_above <- filters[1]
filters_neg_above <- self$filters_neg_above %>% filter(cmt == x)
allsquares
for(a in 1:nrow(filters_neg_above)){
ref <- filters_neg_above %>% slice(a)
allsquares <- allsquares %>%
filter(!!parse_expr(filter_above))
}
allsquares
filters_neg_below
filter_below<- filters[2]
filters_neg_below <- self$filters_neg_below %>% filter(cmt == x)
for(a in 1:nrow(filters_neg_below)){
ref <- filters_neg_below %>% slice(a)
allsquares <- allsquares %>%
filter(!!parse_expr(filter_below))
}
allsquares
temp <-  c(self$filters_neg_above[[x]], self$filters_neg_below[[x]] )  %>% unique
maxcol <- paste0(x, "max")
mincol <- paste0(x, "min")
if(length(temp) == 1){
df_temp <- tibble(max = temp, min = temp)
}else{
df_temp <-tibble(max =  temp) %>%
# add_row(lambda0max = 0) %>%
# add_row(lambda0max = 1) %>%
arrange(max) %>%
mutate(min = lag(max)) %>%
slice(-1)
}
param_unique <- map(self$param, function(x){
temp <-  c(self$filters_neg_above[[x]], self$filters_neg_below[[x]] )  %>% unique
maxcol <- paste0(x, "max")
mincol <- paste0(x, "min")
if(length(temp) == 1){
df_temp <- tibble(max = temp, min = temp)
}else{
df_temp <-tibble(max =  temp) %>%
# add_row(lambda0max = 0) %>%
# add_row(lambda0max = 1) %>%
arrange(max) %>%
mutate(min = lag(max)) %>%
slice(-1)
}
names(df_temp) <- c(maxcol, mincol)
df_temp
})
allsquares <- invoke(.fn = crossing, .args = param_unique )
for(x in names(self$param_increase)){
filters <- self$make_filters(x) %>%
map_chr(~ gsub("line\\$", "", .x))
filters <- paste0("!( ", filters, ")")
other <- self$param[! self$param %in% c(self$param_increase[[x]], self$param_reduce[[x]])]
for(a in c(self$param_increase[[x]], other)){
filters[1] <- gsub(paste0(" ",a, " "), paste0(" ", a, "min "), filters[1])
filters[2] <- gsub(paste0(" ",a, " "), paste0(" ", a, "max "), filters[2])
}
for(a in self$param_reduce[[x]]){
filters[1] <- gsub(paste0(" ",a, " "), paste0(" ", a, "max "), filters[1])
filters[2] <- gsub(paste0(" ",a, " "), paste0(" ", a, "min "), filters[2])
}
filter_above <- filters[1]
filters_neg_above <- self$filters_neg_above %>% filter(cmt == x)
for(a in 1:nrow(filters_neg_above)){
ref <- filters_neg_above %>% slice(a)
allsquares <- allsquares %>%
filter(!!parse_expr(filter_above))
}
filter_below<- filters[2]
filters_neg_below <- self$filters_neg_below %>% filter(cmt == x)
for(a in 1:nrow(filters_neg_below)){
ref <- filters_neg_below %>% slice(a)
allsquares <- allsquares %>%
filter(!!parse_expr(filter_below))
}
}
names(self$param_increase)
x
filters <- self$make_filters(x) %>%
map_chr(~ gsub("line\\$", "", .x))
filters <- paste0("!( ", filters, ")")
other <- self$param[! self$param %in% c(self$param_increase[[x]], self$param_reduce[[x]])]
filters
other <- self$param[! self$param %in% c(self$param_increase[[x]], self$param_reduce[[x]])]
for(a in c(self$param_increase[[x]], other)){
filters[1] <- gsub(paste0(" ",a, " "), paste0(" ", a, "min "), filters[1])
filters[2] <- gsub(paste0(" ",a, " "), paste0(" ", a, "max "), filters[2])
}
for(a in self$param_reduce[[x]]){
filters[1] <- gsub(paste0(" ",a, " "), paste0(" ", a, "max "), filters[1])
filters[2] <- gsub(paste0(" ",a, " "), paste0(" ", a, "min "), filters[2])
}
filter_above <- filters[1]
filters_neg_above <- self$filters_neg_above %>% filter(cmt == x)
filters_neg_above
for(x in names(self$param_increase)){
filters <- self$make_filters(x) %>%
map_chr(~ gsub("line\\$", "", .x))
filters <- paste0("!( ", filters, ")")
other <- self$param[! self$param %in% c(self$param_increase[[x]], self$param_reduce[[x]])]
for(a in c(self$param_increase[[x]], other)){
filters[1] <- gsub(paste0(" ",a, " "), paste0(" ", a, "min "), filters[1])
filters[2] <- gsub(paste0(" ",a, " "), paste0(" ", a, "max "), filters[2])
}
for(a in self$param_reduce[[x]]){
filters[1] <- gsub(paste0(" ",a, " "), paste0(" ", a, "max "), filters[1])
filters[2] <- gsub(paste0(" ",a, " "), paste0(" ", a, "min "), filters[2])
}
filter_above <- filters[1]
filters_neg_above <- self$filters_neg_above %>% filter(cmt == x)
if(nrow(filters_neg_above) > 0){
for(a in 1:nrow(filters_neg_above)){
ref <- filters_neg_above %>% slice(a)
allsquares <- allsquares %>%
filter(!!parse_expr(filter_above))
}
}
filter_below<- filters[2]
filters_neg_below <- self$filters_neg_below %>% filter(cmt == x)
if(nrow(filters_neg_below) > 0){
for(a in 1:nrow(filters_neg_below)){
ref <- filters_neg_below %>% slice(a)
allsquares <- allsquares %>%
filter(!!parse_expr(filter_below))
}
}
}
allsquares
source("D:/these/Second_project/QSP/QSPVP/R/R6object.R")
self <- VP_proj_creator$new()
# self$set_targets(filter = Dose == 50 & cmt == "tumVol", ntime = 8)
self$set_targets(filter = Dose == 50 & cmt == "tumVol",timeforce = c(12,19, 30,45))
source("D:/these/Second_project/QSP/QSPVP/R/R6object.R")
VP_proj_creator$set("public", "zone_maybe", function(domain){
param_unique <- map(self$param, function(x){
temp <-  c(self$filters_neg_above[[x]], self$filters_neg_below[[x]] )  %>% unique
maxcol <- paste0(x, "max")
mincol <- paste0(x, "min")
if(length(temp) == 1){
df_temp <- tibble(max = temp, min = temp)
}else{
df_temp <-tibble(max =  temp) %>%
# add_row(lambda0max = 0) %>%
# add_row(lambda0max = 1) %>%
arrange(max) %>%
mutate(min = lag(max)) %>%
slice(-1)
}
names(df_temp) <- c(maxcol, mincol)
df_temp
})
allsquares <- invoke(.fn = crossing, .args = param_unique )
for(x in names(self$param_increase)){
filters <- self$make_filters(x) %>%
map_chr(~ gsub("line\\$", "", .x))
filters <- paste0("!( ", filters, ")")
other <- self$param[! self$param %in% c(self$param_increase[[x]], self$param_reduce[[x]])]
for(a in c(self$param_increase[[x]], other)){
filters[1] <- gsub(paste0(" ",a, " "), paste0(" ", a, "min "), filters[1])
filters[2] <- gsub(paste0(" ",a, " "), paste0(" ", a, "max "), filters[2])
}
for(a in self$param_reduce[[x]]){
filters[1] <- gsub(paste0(" ",a, " "), paste0(" ", a, "max "), filters[1])
filters[2] <- gsub(paste0(" ",a, " "), paste0(" ", a, "min "), filters[2])
}
filter_above <- filters[1]
filters_neg_above <- self$filters_neg_above %>% filter(cmt == x)
if(nrow(filters_neg_above) > 0){
for(a in 1:nrow(filters_neg_above)){
ref <- filters_neg_above %>% slice(a)
allsquares <- allsquares %>%
filter(!!parse_expr(filter_above))
}
}
filter_below<- filters[2]
filters_neg_below <- self$filters_neg_below %>% filter(cmt == x)
if(nrow(filters_neg_below) > 0){
for(a in 1:nrow(filters_neg_below)){
ref <- filters_neg_below %>% slice(a)
allsquares <- allsquares %>%
filter(!!parse_expr(filter_below))
}
}
}
# can we reduce those square now?
self$zone_maybe <- allsquares
})
source("D:/these/Second_project/QSP/QSPVP/R/R6object.R")
VP_proj_creator$set("public", "compute_zone_maybe", function(domain){
param_unique <- map(self$param, function(x){
temp <-  c(self$filters_neg_above[[x]], self$filters_neg_below[[x]] )  %>% unique
maxcol <- paste0(x, "max")
mincol <- paste0(x, "min")
if(length(temp) == 1){
df_temp <- tibble(max = temp, min = temp)
}else{
df_temp <-tibble(max =  temp) %>%
# add_row(lambda0max = 0) %>%
# add_row(lambda0max = 1) %>%
arrange(max) %>%
mutate(min = lag(max)) %>%
slice(-1)
}
names(df_temp) <- c(maxcol, mincol)
df_temp
})
allsquares <- invoke(.fn = crossing, .args = param_unique )
for(x in names(self$param_increase)){
filters <- self$make_filters(x) %>%
map_chr(~ gsub("line\\$", "", .x))
filters <- paste0("!( ", filters, ")")
other <- self$param[! self$param %in% c(self$param_increase[[x]], self$param_reduce[[x]])]
for(a in c(self$param_increase[[x]], other)){
filters[1] <- gsub(paste0(" ",a, " "), paste0(" ", a, "min "), filters[1])
filters[2] <- gsub(paste0(" ",a, " "), paste0(" ", a, "max "), filters[2])
}
for(a in self$param_reduce[[x]]){
filters[1] <- gsub(paste0(" ",a, " "), paste0(" ", a, "max "), filters[1])
filters[2] <- gsub(paste0(" ",a, " "), paste0(" ", a, "min "), filters[2])
}
filter_above <- filters[1]
filters_neg_above <- self$filters_neg_above %>% filter(cmt == x)
if(nrow(filters_neg_above) > 0){
for(a in 1:nrow(filters_neg_above)){
ref <- filters_neg_above %>% slice(a)
allsquares <- allsquares %>%
filter(!!parse_expr(filter_above))
}
}
filter_below<- filters[2]
filters_neg_below <- self$filters_neg_below %>% filter(cmt == x)
if(nrow(filters_neg_below) > 0){
for(a in 1:nrow(filters_neg_below)){
ref <- filters_neg_below %>% slice(a)
allsquares <- allsquares %>%
filter(!!parse_expr(filter_below))
}
}
}
# can we reduce those square now?
self$zone_maybe <- allsquares
})
source("D:/these/Second_project/QSP/QSPVP/R/R6object.R")
self <- VP_proj_creator$new()
# self$set_targets(filter = Dose == 50 & cmt == "tumVol", ntime = 8)
self$set_targets(filter = Dose == 50 & cmt == "tumVol",timeforce = c(12,19, 30,45))
VP_df <- crossing(k1 = c(0.5),
k2 = seq(0,8,0.1),
ke = seq(0.6,1.4,0.4),
lambda0 =seq(0,0.16,0.03),
lambda1 = c(10,12,14,33),
Vd =  c(0:40)) %>% #c(0.8,1,1.2)) %>%
map_df(function(x){
if(is.character(x)) return(x)
round(x,3)
} )
t0 <- Sys.time()
self$add_VP(VP_df, fillatend = F, reducefilteratend = F,use_green_filter = F, npersalve = 2000, time_compteur = F, pctActivGreen = 0.75)
Sys.time() - t0
VP_df
120 * 0.6
self$n_filter_reduc()
self$filters_neg_above
self$filters_neg_below
self
self$compute_zone_maybe()
self$zone_maybe
self$zone_maybe %>% filter(Vdmin > 30)
