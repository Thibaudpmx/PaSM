maybe
maybe <- add_nvp_bloc(maybe)
maybe
gatherblocsPool <- (npersalve / median(maybe$temp3)) %>% floor()
maybe <- maybe %>%
rowid_to_column("blocsPool") %>%
mutate(blocsPool = floor(blocsPool/gatherblocsPool) + 1)
nVPs <- sum(maybe$temp3)
nVPs
param_unique <- map(self$param[!self$param %in% c("w0", "k1")], function(x){
temp <-  c(self$poolVP[[x]],0, Inf )  %>% unique
maxcol <- paste0(x, "max")
mincol <- paste0(x, "min")
if(length(temp) == 1){
df_temp <- tibble(max = temp, min = temp)
}else{
df_temp <-tibble(max =  temp) %>%
# add_row(lambda0max = 0) %>%
# add_row(lambda0max = 1) %>%
arrange(max) %>%
mutate(min = lag(max)) %>%
slice(-1)
}
df_temp <- df_temp %>%
select(min, max)
names(df_temp) <- c(mincol, maxcol)
df_temp
})
allsquares <- rlang::invoke(.fn = crossing, .args = param_unique )
allsquares
x
names(self$param_increase)[[1]]
x
x = "tumVol"
allsquares[[paste0(x,"_above")]] <- na_lgl
allsquares[[paste0(x,"_below")]] <- na_lgl
filters <- self$make_filters(x) %>%
map_chr(~ gsub("line\\$", "", .x))
above <- filter_reduc(df = self$poolVP %>% select(-simul), filtre = filtres[1],
param_increase = self$param_increase[[x]], param_reduce = self$param_reduce[[x]], direction = "above")
x
above <- filter_reduc(df = self$poolVP %>% select(-simul), filtre = filtres[1],
param_increase = self$param_increase[[x]], param_reduce = self$param_reduce[[x]], direction = "above")
self
self$poolVP %>% select(-simul)
filtres
filtres <- filters <- self$make_filters(x) %>%
map_chr(~ gsub("line\\$", "", .x))
above <- filter_reduc(df = self$poolVP %>% select(-simul), filtre = filtres[1],
param_increase = self$param_increase[[x]], param_reduce = self$param_reduce[[x]], direction = "above")
below <- filter_reduc(df = self$poolVP %>% select(-simul), filtre = filtres[2],
param_increase = self$param_increase[[x]], param_reduce = self$param_reduce[[x]], direction = "below")
above
below
self$poolVP
self$poolVP %>% tail
above <- filter_reduc(df = self$poolVP %>% select(-simul), filtre = filtres[1],
param_increase = self$param_increase[[x]], param_reduce = self$param_reduce[[x]], direction = "above")
below <- filter_reduc(df = self$poolVP %>% select(-simul), filtre = filtres[2],
param_increase = self$param_increase[[x]], param_reduce = self$param_reduce[[x]], direction = "below")
above
above <- filter_reduc(df = self$poolVP %>% select(-simul), filtre = filtres[1],
param_increase = self$param_increase[[x]], param_reduce = self$param_reduce[[x]], direction = "above")
below <- filter_reduc(df = self$poolVP %>% select(-simul), filtre = filtres[2],
param_increase = self$param_increase[[x]], param_reduce = self$param_reduce[[x]], direction = "below")
filters <- paste0("( ", filters, ")")
other <- self$param[! self$param %in% c(self$param_increase[[x]], self$param_reduce[[x]])]
for(a in c(self$param_increase[[x]], other)){
filters[1] <- gsub(paste0(" ",a, " "), paste0(" ", a, "min "), filters[1])
filters[2] <- gsub(paste0(" ",a, " "), paste0(" ", a, "max "), filters[2])
}
for(a in self$param_reduce[[x]]){
filters[1] <- gsub(paste0(" ",a, " "), paste0(" ", a, "max "), filters[1])
filters[2] <- gsub(paste0(" ",a, " "), paste0(" ", a, "min "), filters[2])
}
filter_above <- filters[1]
allsquares$above <- na_lgl
allsquares %>% filter(above)
if(nrow(above) > 0){
for(a in 1:nrow(above)){
print(a)
ref <- above %>% slice(a)
allsquares <-
allsquares %>%
mutate(above = if_else(!!parse_expr(filter_above), T, above))
}
}
allsquares <- rlang::invoke(.fn = crossing, .args = param_unique ) %>%
mutate(w0min = 50 , w0max = 50, k1min = 0.5, k1max = 0.5)#%>%
allsquares[[paste0(x,"_above")]] <- na_lgl
allsquares[[paste0(x,"_below")]] <- na_lgl
filtres <- filters <- self$make_filters(x) %>%
map_chr(~ gsub("line\\$", "", .x))
above <- filter_reduc(df = self$poolVP %>% select(-simul), filtre = filtres[1],
param_increase = self$param_increase[[x]], param_reduce = self$param_reduce[[x]], direction = "above")
below <- filter_reduc(df = self$poolVP %>% select(-simul), filtre = filtres[2],
param_increase = self$param_increase[[x]], param_reduce = self$param_reduce[[x]], direction = "below")
filters <- paste0("( ", filters, ")")
other <- self$param[! self$param %in% c(self$param_increase[[x]], self$param_reduce[[x]])]
for(a in c(self$param_increase[[x]], other)){
filters[1] <- gsub(paste0(" ",a, " "), paste0(" ", a, "min "), filters[1])
filters[2] <- gsub(paste0(" ",a, " "), paste0(" ", a, "max "), filters[2])
}
for(a in self$param_reduce[[x]]){
filters[1] <- gsub(paste0(" ",a, " "), paste0(" ", a, "max "), filters[1])
filters[2] <- gsub(paste0(" ",a, " "), paste0(" ", a, "min "), filters[2])
}
filter_above <- filters[1]
allsquares$above <- na_lgl
allsquares %>% filter(above)
allsquares
# allsquares %>% filter(above)
if(nrow(above) > 0){
for(a in 1:nrow(above)){
print(a)
ref <- above %>% slice(a)
allsquares <-
allsquares %>%
mutate(above = if_else(!!parse_expr(filter_above), T, above))
}
}
allsquares
filter_below<- filters[2]
allsquares$below <- na_lgl
# filters_neg_below <- self$filters_neg_below %>% filter(cmt == x)
if(nrow(below) > 0){
for(a in 1:nrow(below)){
ref <- below %>% slice(a)
allsquares <- allsquares %>%
mutate(below = if_else(!!parse_expr(filter_below), T, below))
}
}
allsquares
allsquares %>% filter(above & below)
self$poolVP
self$poolVP %>% tail
#
self$poolVP %>%
filter(rowid %in% c(12191, 6856))
allsquares
allsquares
allsquares %>% filter(above)
allsquares %>% filter(below)
#
#
#
allsquares %>%
filter(k2min == 0.25)
#
self$poolVP %>%
filter(rowid %in% c(12191, 6856))
allsquares
allsquares %>%
filter(k2min <= 0.25, k2max >=0.25, lambda0min <= 1.05, lambda0max >=1.05, kemin <= 0.3, kemax >=0.3, Vdmin <= 27, Vdmax >=27, lambda0min <= 6,
lambda0max >=6)
allsquares %>%
filter(k2min <= 0.25, k2max >=0.25)
allsquares %>%
filter(k2min <= 0.25, k2max >=0.25, lambda0min <= 1.05, lambda0max >=1.05)
allsquares %>%
filter(k2min <= 0.25, k2max >=0.25, lambda0min <= 1.05, lambda0max >=1.05, kemin <= 0.3, kemax >=0.3)
allsquares %>%
filter(k2min <= 0.25, k2max >=0.25, lambda0min <= 1.05, lambda0max >=1.05, kemin <= 0.3, kemax >=0.3, Vdmin <= 27, Vdmax >=27)
allsquares %>%
filter(k2min <= 0.25, k2max >=0.25, lambda0min <= 1.05, lambda0max >=1.05, kemin <= 0.3, kemax >=0.3, Vdmin <= 27, Vdmax >=27,
lambda1min <= 6, lambda1max >=6)
#
self$poolVP %>%
filter(rowid %in% c(12191, 6856))
allsquares %>%
filter(k2min <= 0.25, k2max >=0.25, lambda0min <= 1.05, lambda0max >=1.05, kemin <= 0.3, kemax >=0.3, Vdmin <= 27, Vdmax >=27,
lambda1min <= 6, lambda1max >=6 & k2max == 0.25)
allsquares %>%
filter(k2min <= 0.25, k2max >=0.25, lambda0min <= 1.05, lambda0max >=1.05, kemin <= 0.3, kemax >=0.3, Vdmin <= 27, Vdmax >=27,
lambda1min <= 6, lambda1max >=6 & k2max == 0.25 & lambda0min = 1.05)
allsquares %>%
filter(k2min <= 0.25, k2max >=0.25, lambda0min <= 1.05, lambda0max >=1.05, kemin <= 0.3, kemax >=0.3, Vdmin <= 27, Vdmax >=27,
lambda1min <= 6, lambda1max >=6 & k2max == 0.25 & lambda0min == 1.05)
allsquares %>%
filter(k2min <= 0.25, k2max >=0.25, lambda0min <= 1.05, lambda0max >=1.05, kemin <= 0.3, kemax >=0.3, Vdmin <= 27, Vdmax >=27,
lambda1min <= 6, lambda1max >=6 & k2max == 0.25 & lambda0min == 1.05 &  kemin == 0.3)
#
self$poolVP %>%
filter(rowid %in% c(12191, 6856))
x
x = "k2"
temp <-  c(self$poolVP[[x]],0, Inf )  %>% unique
maxcol <- paste0(x, "max")
mincol <- paste0(x, "min")
if(length(temp) == 1){
df_temp <- tibble(max = temp, min = temp)
}else{
df_temp <-tibble(max =  temp) %>%
# add_row(lambda0max = 0) %>%
# add_row(lambda0max = 1) %>%
arrange(max) %>%
mutate(min = lag(max)) %>%
slice(-1)
}
df_temp <- df_temp %>%
select(min, max)
df_temp
names(df_temp) <- c(mincol, maxcol)
df_temp
x = "lambda0"
temp <-  c(self$poolVP[[x]],0, Inf )  %>% unique
maxcol <- paste0(x, "max")
mincol <- paste0(x, "min")
if(length(temp) == 1){
df_temp <- tibble(max = temp, min = temp)
}else{
df_temp <-tibble(max =  temp) %>%
# add_row(lambda0max = 0) %>%
# add_row(lambda0max = 1) %>%
arrange(max) %>%
mutate(min = lag(max)) %>%
slice(-1)
}
df_temp <- df_temp %>%
select(min, max)
names(df_temp) <- c(mincol, maxcol)
df_temp
df_temp
tibble(max =  temp) %>%
# add_row(lambda0max = 0) %>%
# add_row(lambda0max = 1) %>%
arrange(max) %>%
mutate(min = lag(max)) %>%
slice(-1)
df_temp
temp
df_temp
param_unique <- map(self$param[!self$param %in% c("w0", "k1")], function(x){
temp <-  c(self$poolVP[[x]],0, Inf )  %>% unique
maxcol <- paste0(x, "max")
mincol <- paste0(x, "min")
if(length(temp) == 1){
df_temp <- tibble(max = temp, min = temp)
}else{
df_temp <-tibble(max =  temp) %>%
# add_row(lambda0max = 0) %>%
# add_row(lambda0max = 1) %>%
arrange(max) %>%
mutate(min = lag(max)) %>%
slice(-1)
}
df_temp <- df_temp %>%
select(min, max)
names(df_temp) <- c(mincol, maxcol)
df_temp
})
rlang::invoke(.fn = crossing, .args = param_unique )
tibble(max = temp, min = temp)
temp
df_temp <-tibble(max =  temp) %>%
# add_row(lambda0max = 0) %>%
# add_row(lambda0max = 1) %>%
arrange(max) %>%
mutate(min = lag(max)) %>%
slice(-1)
df_temp <-tibble(max =  temp) %>%
# add_row(lambda0max = 0) %>%
# add_row(lambda0max = 1) %>%
arrange(max) %>%
mutate(min = lag(max)) %>%
slice(-1) %>%
bind_rows(tibble(max =  temp))
df_temp
param_unique <- map(self$param[!self$param %in% c("w0", "k1")], function(x){
temp <-  c(self$poolVP[[x]],0, Inf )  %>% unique
maxcol <- paste0(x, "max")
mincol <- paste0(x, "min")
if(length(temp) == 1){
df_temp <- tibble(max = temp, min = temp)
}else{
df_temp <-tibble(max =  temp) %>%
# add_row(lambda0max = 0) %>%
# add_row(lambda0max = 1) %>%
arrange(max) %>%
mutate(min = lag(max)) %>%
slice(-1) %>%
bind_rows(tibble(max =  temp))
}
df_temp <- df_temp %>%
select(min, max)
names(df_temp) <- c(mincol, maxcol)
df_temp
})
allsquares <- rlang::invoke(.fn = crossing, .args = param_unique ) %>%
mutate(w0min = 50 , w0max = 50, k1min = 0.5, k1max = 0.5)#%>%
allsquares
for(x in names(self$param_increase)[[1]]){
allsquares[[paste0(x,"_above")]] <- na_lgl
allsquares[[paste0(x,"_below")]] <- na_lgl
filtres <- filters <- self$make_filters(x) %>%
map_chr(~ gsub("line\\$", "", .x))
# filtres
above <- filter_reduc(df = self$poolVP %>% select(-simul), filtre = filtres[1],
param_increase = self$param_increase[[x]], param_reduce = self$param_reduce[[x]], direction = "above")
below <- filter_reduc(df = self$poolVP %>% select(-simul), filtre = filtres[2],
param_increase = self$param_increase[[x]], param_reduce = self$param_reduce[[x]], direction = "below")
filters <- paste0("( ", filters, ")")
other <- self$param[! self$param %in% c(self$param_increase[[x]], self$param_reduce[[x]])]
for(a in c(self$param_increase[[x]], other)){
filters[1] <- gsub(paste0(" ",a, " "), paste0(" ", a, "min "), filters[1])
filters[2] <- gsub(paste0(" ",a, " "), paste0(" ", a, "max "), filters[2])
}
for(a in self$param_reduce[[x]]){
filters[1] <- gsub(paste0(" ",a, " "), paste0(" ", a, "max "), filters[1])
filters[2] <- gsub(paste0(" ",a, " "), paste0(" ", a, "min "), filters[2])
}
# ref <- above %>% slice(a)
#
#  allsquares %>%
#   filter(!!parse_expr(filters[2]))
#
#
# ref <- above %>% slice(a)
#
# # allsquares <- allsquares %>%
#   # filter(!!parse_expr(filter_above))
# allsquares %>%
#   filter(k2max <= 0)
#   filter(kemin >=0.6 & Vdmin >=0 & lambda0min >= 0.03 &  lambda1min >= 10 & k2max <= 0 & k1min ==0.5)
filter_above <- filters[1]
# above <- self$filters_neg_above %>% filter(cmt == x)
allsquares$above <- na_lgl
# allsquares %>% filter(above)
if(nrow(above) > 0){
for(a in 1:nrow(above)){
print(a)
ref <- above %>% slice(a)
allsquares <-
allsquares %>%
mutate(above = if_else(!!parse_expr(filter_above), T, above))
}
}
filter_below<- filters[2]
allsquares$below <- na_lgl
# filters_neg_below <- self$filters_neg_below %>% filter(cmt == x)
if(nrow(below) > 0){
for(a in 1:nrow(below)){
ref <- below %>% slice(a)
allsquares <- allsquares %>%
mutate(below = if_else(!!parse_expr(filter_below), T, below))
}
}
}
names(self$param_increase)[[1]]
param_unique <- map(self$param[!self$param %in% c("w0", "k1")], function(x){
temp <-  c(self$poolVP[[x]],0, Inf )  %>% unique
maxcol <- paste0(x, "max")
mincol <- paste0(x, "min")
if(length(temp) == 1){
df_temp <- tibble(max = temp, min = temp)
}else{
df_temp <-tibble(max =  temp) %>%
# add_row(lambda0max = 0) %>%
# add_row(lambda0max = 1) %>%
arrange(max) %>%
mutate(min = lag(max)) %>%
slice(-1) %>%
bind_rows(tibble(max =  temp))
}
df_temp <- df_temp %>%
select(min, max)
names(df_temp) <- c(mincol, maxcol)
df_temp
})
allsquares <- rlang::invoke(.fn = crossing, .args = param_unique ) %>%
mutate(w0min = 50 , w0max = 50, k1min = 0.5, k1max = 0.5)#%>%
x ="tumVol"
allsquares[[paste0(x,"_above")]] <- na_lgl
allsquares[[paste0(x,"_below")]] <- na_lgl
filtres <- filters <- self$make_filters(x) %>%
map_chr(~ gsub("line\\$", "", .x))
above <- filter_reduc(df = self$poolVP %>% select(-simul), filtre = filtres[1],
param_increase = self$param_increase[[x]], param_reduce = self$param_reduce[[x]], direction = "above")
below <- filter_reduc(df = self$poolVP %>% select(-simul), filtre = filtres[2],
param_increase = self$param_increase[[x]], param_reduce = self$param_reduce[[x]], direction = "below")
above
below
filters <- paste0("( ", filters, ")")
other <- self$param[! self$param %in% c(self$param_increase[[x]], self$param_reduce[[x]])]
for(a in c(self$param_increase[[x]], other)){
filters[1] <- gsub(paste0(" ",a, " "), paste0(" ", a, "min "), filters[1])
filters[2] <- gsub(paste0(" ",a, " "), paste0(" ", a, "max "), filters[2])
}
for(a in self$param_reduce[[x]]){
filters[1] <- gsub(paste0(" ",a, " "), paste0(" ", a, "max "), filters[1])
filters[2] <- gsub(paste0(" ",a, " "), paste0(" ", a, "min "), filters[2])
}
filter_above <- filters[1]
allsquares$above <- na_lgl
# allsquares %>% filter(above)
if(nrow(above) > 0){
for(a in 1:nrow(above)){
print(a)
ref <- above %>% slice(a)
allsquares <-
allsquares %>%
mutate(above = if_else(!!parse_expr(filter_above), T, above))
}
}
filter_below<- filters[2]
allsquares$below <- na_lgl
# filters_neg_below <- self$filters_neg_below %>% filter(cmt == x)
if(nrow(below) > 0){
for(a in 1:nrow(below)){
ref <- below %>% slice(a)
allsquares <- allsquares %>%
mutate(below = if_else(!!parse_expr(filter_below), T, below))
}
}
allsquares %>% filter(above & below)
allsquares %>%
filter(k2min <= 0.25, k2max >=0.25, lambda0min <= 1.05, lambda0max >=1.05, kemin <= 0.3, kemax >=0.3, Vdmin <= 27, Vdmax >=27,
lambda1min <= 6, lambda1max >=6)
allsquares %>%
filter(k2min == 0.25, k2max == 0.25)
allsquares
df_temp <-tibble(max =  temp) %>%
# add_row(lambda0max = 0) %>%
# add_row(lambda0max = 1) %>%
arrange(max) %>%
mutate(min = lag(max)) %>%
slice(-1) %>%
bind_rows(tibble(max =  temp))
df_temp
df_temp %>% distinct()
df_temp %>% distinct() %>% tail
param_unique <- map(self$param[!self$param %in% c("w0", "k1")], function(x){
temp <-  c(self$poolVP[[x]],0, Inf )  %>% unique
maxcol <- paste0(x, "max")
mincol <- paste0(x, "min")
if(length(temp) == 1){
df_temp <- tibble(max = temp, min = temp)
}else{
df_temp <-tibble(max =  temp) %>%
# add_row(lambda0max = 0) %>%
# add_row(lambda0max = 1) %>%
arrange(max) %>%
mutate(min = lag(max)) %>%
slice(-1) %>%
bind_rows(tibble(max =  temp, min = temp))
}
df_temp <- df_temp %>%
select(min, max)
names(df_temp) <- c(mincol, maxcol)
df_temp
})
allsquares <- rlang::invoke(.fn = crossing, .args = param_unique ) %>%
mutate(w0min = 50 , w0max = 50, k1min = 0.5, k1max = 0.5)#%>%
allsquares
for(x in names(self$param_increase)[[1]]){
allsquares[[paste0(x,"_above")]] <- na_lgl
allsquares[[paste0(x,"_below")]] <- na_lgl
filtres <- filters <- self$make_filters(x) %>%
map_chr(~ gsub("line\\$", "", .x))
# filtres
above <- filter_reduc(df = self$poolVP %>% select(-simul), filtre = filtres[1],
param_increase = self$param_increase[[x]], param_reduce = self$param_reduce[[x]], direction = "above")
below <- filter_reduc(df = self$poolVP %>% select(-simul), filtre = filtres[2],
param_increase = self$param_increase[[x]], param_reduce = self$param_reduce[[x]], direction = "below")
filters <- paste0("( ", filters, ")")
other <- self$param[! self$param %in% c(self$param_increase[[x]], self$param_reduce[[x]])]
for(a in c(self$param_increase[[x]], other)){
filters[1] <- gsub(paste0(" ",a, " "), paste0(" ", a, "min "), filters[1])
filters[2] <- gsub(paste0(" ",a, " "), paste0(" ", a, "max "), filters[2])
}
for(a in self$param_reduce[[x]]){
filters[1] <- gsub(paste0(" ",a, " "), paste0(" ", a, "max "), filters[1])
filters[2] <- gsub(paste0(" ",a, " "), paste0(" ", a, "min "), filters[2])
}
# ref <- above %>% slice(a)
#
#  allsquares %>%
#   filter(!!parse_expr(filters[2]))
#
#
# ref <- above %>% slice(a)
#
# # allsquares <- allsquares %>%
#   # filter(!!parse_expr(filter_above))
# allsquares %>%
#   filter(k2max <= 0)
#   filter(kemin >=0.6 & Vdmin >=0 & lambda0min >= 0.03 &  lambda1min >= 10 & k2max <= 0 & k1min ==0.5)
filter_above <- filters[1]
# above <- self$filters_neg_above %>% filter(cmt == x)
allsquares$above <- na_lgl
# allsquares %>% filter(above)
if(nrow(above) > 0){
for(a in 1:nrow(above)){
print(a)
ref <- above %>% slice(a)
allsquares <-
allsquares %>%
mutate(above = if_else(!!parse_expr(filter_above), T, above))
}
}
filter_below<- filters[2]
allsquares$below <- na_lgl
# filters_neg_below <- self$filters_neg_below %>% filter(cmt == x)
if(nrow(below) > 0){
for(a in 1:nrow(below)){
ref <- below %>% slice(a)
allsquares <- allsquares %>%
mutate(below = if_else(!!parse_expr(filter_below), T, below))
}
}
}
allsquares %>% filter(above & below)
