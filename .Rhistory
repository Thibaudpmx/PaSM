plotF <-  datas %>%
mutate(Old = 50.1 * nCohort / 2E5 / 60) %>% # considering a strict proportionality
rename(New = timeTotal) %>%
mutate(time =  round(New / Old,1)) %>%
{pregather <<- .} %>%
gather("Method", "value", Old, New) %>%
mutate(pctExtra = round((nCohort-nsimul)/ nCohort * 100 )) %>%
mutate(label = if_else(Method == "Old", "",as.character(time))) %>%
ggplot()+
scale_y_log10()+
scale_x_log10()+
# stat_function(fun = function(x)55.1 * x / 2E5, aes(col = "Blue") , size = 2)+
geom_vline(aes(xintercept = 2E5, lty = "Used in\nmain\nanalysis"))+
# geom_segment(aes(x = 2.6E5, xend = 2.2E5, y = 35, yend = 42), col = "red",  arrow = arrow(length = unit(0.2, "cm")))+
# geom_text(aes(nCohort, value* 1E19, label = label), nudge_y = -20)+
geom_line(aes(nCohort, value, col = Method), size = 2) +
geom_ribbon(data = pregather, aes(x = nCohort, ymin = Old, ymax = New), alpha = 0.3)+
geom_point(aes(nCohort, value, col = Method), size = 3)+
theme_bw() +
# geom_segment(aes(x = 2.6E5, xend = 2.2E5, y = 0.36, yend = 0.44), col = "red",  arrow = arrow(length = unit(0.2, "cm")))+
# facet_wrap(~iteration)+
scale_linetype_manual(values = 2)+
labs(x = "Number of VPs in original cohort", y = "Time of computation (minute)");plotF
setwd("D:/these/Second_project/QSP/modeling_work/VT_simeoni/article_QSPVP/data/ImpactSizeCohort")
plot_grid(plotA, plotB, plotC, plotD, plotE, plotF, labels = LETTERS, nrow = 2)
datas <- readRDS("full_analysis.RDS") %>%
arrange(nCohort) %>%
mutate(timeTotal = case_when(nCohort %in% (c(10,50,100,200,2000,3000,1000,4000) * 1000 )& iteration == 1 ~ timeTotal /60,
T ~timeTotal))
plotSupA <- datas %>%
mutate( Old = 55.1 * nCohort / 2E5 / 60) %>%
mutate(New = timeTotal) %>%
mutate(timeTotal=timeTotal*60) %>%
mutate(time =  round(New / Old,1)) %>%
# filter(iteration == 1) %>%
select(-iteration) %>%
mutate(delta = nCohort - nsimul, Rxodeid =  RxODE /nsimul ) %>%
mutate(TodeSaved = delta * Rxodeid, deltaratio = delta/nCohort ) %>%
select(TodeSaved, Rxodeid,delta, deltaratio, everything()) %>%
gather("step", "value", TodeSaved, GreenFilter, Other, RedFilter,RxODE, timeTotal ) %>%
# filter(step == "t2") %>%
mutate(value = value / nCohort) %>%
# filter(nCohort >= 2E5) %>%
ggplot(aes(x = nCohort, y = value, col = step))+
geom_point()+
geom_line()+
scale_y_log10()+
scale_x_log10()+
theme_bw()+
labs(x= "Size cohort (VPs)", y = "Time per size cohort (sec / VP)"); plotSupA
datas
datas <- readRDS("full_analysis.RDS") %>%
arrange(nCohort) %>%
mutate(timeTotal = case_when(nCohort %in% (c(10,50,100,200,2000,3000,1000,4000) * 1000 )& iteration == 1 ~ timeTotal /60,
T ~timeTotal)) %>%
group_by(nCohort) %>%
mutate(mediant = median(timeTotal))
datas <- readRDS("full_analysis.RDS") %>%
arrange(nCohort) %>%
mutate(timeTotal = case_when(nCohort %in% (c(10,50,100,200,2000,3000,1000,4000) * 1000 )& iteration == 1 ~ timeTotal /60,
T ~timeTotal)) %>%
group_by(nCohort) %>%
mutate(mediant = median(timeTotal)) %>%
filter(timeTotal == mediant)
plotSupA <- datas %>%
mutate( Old = 55.1 * nCohort / 2E5 / 60) %>%
mutate(New = timeTotal) %>%
mutate(timeTotal=timeTotal*60) %>%
mutate(time =  round(New / Old,1)) %>%
# filter(iteration == 1) %>%
select(-iteration) %>%
mutate(delta = nCohort - nsimul, Rxodeid =  RxODE /nsimul ) %>%
mutate(TodeSaved = delta * Rxodeid, deltaratio = delta/nCohort ) %>%
select(TodeSaved, Rxodeid,delta, deltaratio, everything()) %>%
gather("step", "value", TodeSaved, GreenFilter, Other, RedFilter,RxODE, timeTotal ) %>%
# filter(step == "t2") %>%
mutate(value = value / nCohort) %>%
# filter(nCohort >= 2E5) %>%
ggplot(aes(x = nCohort, y = value, col = step))+
geom_point()+
geom_line()+
scale_y_log10()+
scale_x_log10()+
theme_bw()+
labs(x= "Size cohort (VPs)", y = "Time per size cohort (sec / VP)"); plotSupA
plot_grid(
plotSupA,
datas %>%
ggplot()+
scale_x_log10()+
geom_point(aes(nCohort, sinuosity))+
geom_line(aes(nCohort, sinuosity))+
theme_bw()+
labs(x = "Size cohort (VPs)", y = "Sinuosity (number of filters)"),
datas %>%
mutate(ratioRxode =  nsimul/nCohort) %>%
ggplot()+
scale_x_log10()+
geom_point(aes(nCohort, ratioRxode * 100))+
geom_line(aes(nCohort, ratioRxode*100))+
theme_bw()+
labs(x = "Size cohort (VPs)", y=  "Percentage of VPs with ODE solved"),
nrow = 1, labels = LETTERS, rel_widths = c(1.4,1,1)
)
stepname
library(peccary)
tibble(t = seq(0,10,0.1)) %>%
mutate(conc = 3 * t * exp(-0.5 *t +1))
tibble(t = seq(0,10,0.1)) %>%
mutate(conc = 3 * t * exp(-0.5 *t +1)) %>%
ggplot()+
geom_line(aes(t, conc))
tibble(t = seq(0,15,0.1)) %>%
mutate(conc = 3 * t * exp(-0.5 *t +1)) %>%
ggplot()+
geom_line(aes(t, conc))
exp(5)
exp(4) * exp(1)
exp(6) * exp(-2)
exp(6) * exp(-1)
3 * t * exp(-0.5 * t) * exp(1)
tibble(t = seq(0,15,0.1)) %>%
mutate(conc = 3 * t * exp(-0.5 *t +1)) %>%
mutate(conc2 = 3 * t * exp(-0.5 *t) * exp(1))
ggplot()+
geom_line(aes(t, conc))+
scale_y_log10()
tibble(t = seq(0,100,1)) %>%
mutate(conc = 3 * t * exp(-0.5 *t +1)) %>%
mutate(conc2 = 3 * t * exp(-0.5 *t) * exp(1)) %>%
ggplot()+
geom_line(aes(t, conc))+
scale_y_log10()
tibble(t = seq(0,100,1)) %>%
mutate(conc = 3 * t * exp(-0.5 *t +1)) %>%
mutate(conc2 = 3 * t * exp(-0.5 *t) * exp(1))
tibble(t = seq(0,10,0.1)) %>%
mutate(conc = 3 * t * exp(-0.5 *t +1)) %>%
mutate(conc2 = 3 * t * exp(-0.5 *t) * exp(1))
tibble(t = seq(0,10,0.1)) %>%
mutate(conc = 3 * t * exp(-0.5 *t +1)) %>%
mutate(conc2 = 3 * t * exp(-0.5 *t) * exp(1)) %>%
ggplot()+
geom_line(aes(t, conc))+
scale_y_log10()
tibble(t = seq(0,10,0.1)) %>%
mutate(conc = 3 * t * exp(-0.5 *t +1)) %>%
mutate(conc2 = 3 * t * exp(-0.5 *t) * exp(1)) %>%
ggplot()+
geom_line(aes(t, conc))
3 * exp(1)
library(peccary)
launch_shinystan
library(future)
pecc_nb <- function() {
library(future)
plan(multisession)
future(
peccary_app3() #You can replace this with any other Shiny app
)
}
pecc_nb()
future(
peccary_app3() #You can replace this with any other Shiny app
)
future(
peccary_app3() #You can replace this with any other Shiny app
)
peccary_app3() #Yo
pecc_nb <- function() {
library(future)
plan(multisession)
future(
peccary_app3() #You can replace this with any other Shiny app
)
}
pecc_nb()
explo <- read.table(file = "D:/Peccary_Annexe/Exemple_demo/DATA//Theoph.txt", header = T, na.strings = ".", sep = ";", dec = ".")
plot_spagh(df = explo, x = "TIME", y = "DV", group = "ID", col = "doseCAT", standardisation = "Dose", bkgrd = FALSE, workwithexpr = F)
plot_spagh(df = explo, x = "TIME", y = "DV", group = "ID", col = "doseCAT", standardisation = "Dose", bkgrd = FALSE, workwithexpr = T)
plot_spagh(df = explo, x = "TIME", y = "DV", group = "ID", col = "doseCAT", standardisation = "Dose", bkgrd = TRUE)
plot_spagh(df = explo, x = "TIME", y = "DV", group = "ID", col = "doseCAT", standardisation = "Dose", bkgrd = TRUE, workwithexpr = F)
plot_spagh(df = explo, x = "TIME", y = "DV", group = "ID", col = "doseCAT", standardisation = "Dose",output = 2, bkgrd = TRUE, workwithexpr = F)
"explo %>%\nfilter(!is.na(DV)) %>%\nmutate(`:=`(DV, DV/Dose)) %>%\n{ explo_post_treatment <<- . } %>%\nggplot() +\ngeom_line(data = explo_post_treatment %>%\nmutate(peccaryTemp = paste0(group = ID, col = doseCAT)), aes(x = TIME, y = DV, group = peccaryTemp), col = \"darkgrey\", alpha = 0.3) +\ngeom_point(aes(x = TIME, y = DV, col = factor(doseCAT)), alpha = 1) +\ngeom_line(aes(x = TIME, y = DV, group = ID, col = factor(doseCAT)), alpha = 1) +\nscale_y_log10(labels = labels_log, breaks = breaks_log) +\nlabs(col = \"doseCAT\") +\ntheme_bw(base_size = 15) +\ntheme(plot.title = element_text(hjust = 0.5), plot.subtitle = element_text(hjust = 0.5), plot.caption = element_text(hjust = 0, face = \"italic\", colour = \"grey18\"))" %>% cat
explo <- read.table(file = "D:/Peccary_Annexe/Exemple_demo/DATA//Theoph.txt", header = T, na.strings = ".", sep = ";", dec = ".")
explo %>%
filter(!is.na(DV)) %>%
mutate(`:=`(DV, DV/Dose)) %>%
ggplot() +
geom_point(aes(x = TIME, y = DV, col = factor(doseCAT)), alpha = 1) +
geom_line(aes(x = TIME, y = DV, group = ID, col = factor(doseCAT)), alpha = 1) +
scale_y_log10(labels = labels_log, breaks = breaks_log) +
labs(col = "doseCAT") +
theme_bw(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5), plot.subtitle = element_text(hjust = 0.5), plot.caption = element_text(hjust = 0, face = "italic", colour = "grey18"))
pecc_table1(dataset = explo %>% distinct(ID, Wt, Dose, cov, bool, doseCAT), rowl = c("Dose_cont", "Dose_cat"), coll = "cov")
pecc_table1(dataset = explo %>% distinct(ID, Wt, Dose, cov, bool, doseCAT), rowl = c("Dose_cont", "doseCAT_cat"), coll = "cov")
peccary_NCA(dataset = explo, timecol = TIME, obscol = DV, doseCAT, ID, IVbackextr = FALSE, add_Obs0_Time0 = FALSE, auc_0_X = 0L, BLQcol = NULL, filter = "")
explo %>%
mutate(pecc_extra = FALSE) %>%
filter(!is.na(DV)) %>%
group_by(doseCAT, ID) %>%
nest() %>%
mutate(AUCblocs = map(data, function(data) {
data %>%
mutate(TimePrev = lag(TIME)) %>%
mutate(ObsPrev = lag(DV)) %>%
slice(-1) %>%
mutate(AUCbloc = (TIME - TimePrev) * (DV + ObsPrev)/2) %>%
mutate(AUCblocloglinear = pmap_dbl(list(TimePrev, TIME, ObsPrev, DV), function(TimePrev, time, ObsPrev, obs) {
if (obs >= ObsPrev | obs == 0) {
(time - TimePrev) * (obs + ObsPrev)/2
}
else {
(time - TimePrev) * (ObsPrev - obs)/(log(ObsPrev/obs))
}
}))
})) %>%
mutate(outp = map2(AUCblocs, data, function(AUCblocs, data) {
tibble(Cmax = max(data[["DV"]][data$pecc_extra == F], na.rm = T), Cmin = min(data[["DV"]][data$pecc_extra == F], na.rm = T), AUCTlast = sum(AUCblocs$AUCbloc, na.rm = T), AUCTlastlog = sum(AUCblocs$AUCblocloglinear, na.rm = T), Tmax = min(data[["TIME"]][data[["DV"]] == max(data[["DV"]][data$pecc_extra == F], na.rm = T) & data$pecc_extra == F]), Tfirst = min(data[["TIME"]][data$pecc_extra == F], na.rm = T)[[1]], Tlast = max(data[["TIME"]][data$pecc_extra == F], na.rm = T))
})) %>%
unnest(outp) %>%
left_join(explo %>%
mutate(pecc_extra = FALSE) %>%
distinct(ID, Wt, Dose, cov, bool, doseCAT))
explotemp <- explo
NCA_eval <- {
conc_obj <- PKNCAconc(data = explotemp %>% filter(EVID == 0) %>% group_by(ID, TIME) %>% summarise(`:=`(DV, median(DV))), formula = DV ~ TIME | ID)
dose_obj <- PKNCAdose(data = explotemp %>% filter(EVID == 1), formula = Dose ~ TIME | ID, route = "extravascular")
data_obj_automatic <- PKNCAdata(conc_obj, dose_obj, options = list(auc.method = "lin up/log down", single.dose.aucs = PKNCA.options()$single.dose.aucs %>% mutate(end = Inf)))
pk.nca(data_obj_automatic)
}
Indiv_table <- explotemp %>%
select(ID, doseCAT) %>%
distinct() %>%
full_join(NCA_eval$result %>%
select(ID, PPTESTCD, PPORRES) %>%
distinct() %>%
spread(key = PPTESTCD, value = PPORRES))
summary <- pecc_table1(explo = Indiv_table, rowl = c("adj.r.squared_cont", "aucinf.obs_cont", "auclast_cont", "clast.obs_cont", "clast.pred_cont", "cmax_cont", "half.life_cont", "lambda.z_cont", "lambda.z.n.points_cont", "lambda.z.time.first_cont", "r.squared_cont", "span.ratio_cont", "tlast_cont", "tmax_cont"), coll = "doseCAT")
Indiv_table
summary <- pecc_table1(explo = Indiv_table, rowl = c("adj.r.squared_cont", "aucinf.obs_cont", "auclast_cont", "clast.obs_cont", "clast.pred_cont", "cmax_cont", "half.life_cont", "lambda.z_cont", "lambda.z.n.points_cont", "lambda.z.time.first_cont", "r.squared_cont", "span.ratio_cont", "tlast_cont", "tmax_cont"), coll = "doseCAT")
NCA_boxplot <- explo %>%
select(ID, doseCAT) %>%
distinct() %>%
full_join(NCA_eval$result) %>%
filter(PPTESTCD %in% c("cmax", "auclast", "tlast", "half.life")) %>%
ggplot() + geom_boxplot(aes(factor(doseCAT), PPORRES, fill = factor(doseCAT))) + geom_point(aes(factor(doseCAT), PPORRES)) + facet_wrap(~PPTESTCD, scales = "free")
Indiv_table
summary <- pecc_table1(dataset = Indiv_table, rowl = c("adj.r.squared_cont", "aucinf.obs_cont", "auclast_cont", "clast.obs_cont", "clast.pred_cont", "cmax_cont", "half.life_cont", "lambda.z_cont", "lambda.z.n.points_cont", "lambda.z.time.first_cont", "r.squared_cont", "span.ratio_cont", "tlast_cont", "tmax_cont"), coll = "doseCAT")
summary
NCA_boxplot <- explo %>%
select(ID, doseCAT) %>%
distinct() %>%
full_join(NCA_eval$result) %>%
filter(PPTESTCD %in% c("cmax", "auclast", "tlast", "half.life")) %>%
ggplot() + geom_boxplot(aes(factor(doseCAT), PPORRES, fill = factor(doseCAT))) + geom_point(aes(factor(doseCAT), PPORRES)) + facet_wrap(~PPTESTCD, scales = "free")
NCA_boxplot
explo <- read.table(file = "D:/Peccary_Annexe/Exemple_demo/DATA//Theoph.txt", header = T, na.strings = ".", sep = ";", dec = ".")
breaks_log <- lapply(-7:7, function(x) 1:9*10^x) %>% reduce(c)
labels_log <- as.character(breaks_log); labels_log[-seq(1,length(labels_log),9)] <- ""
explo %>%
filter(!is.na(DV)) %>%
ggplot() +
geom_point(aes(x = TIME, y = DV, col = factor(doseCAT)), alpha = 1) +
geom_line(aes(x = TIME, y = DV, group = ID, col = factor(doseCAT)), alpha = 1) +
scale_y_log10(labels = labels_log, breaks = breaks_log) +
labs(col = "doseCAT") +
theme_bw(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5), plot.subtitle = element_text(hjust = 0.5), plot.caption = element_text(hjust = 0, face = "italic", colour = "grey18"))
plot_spagh(df = explo, x = "TIME", y = "DV", group = "ID", col = "doseCAT", bkgrd = FALSE, workwithexpr = F)
plot_spagh
plot_spagh(df = explo, x = "TIME", y = "DV", group = "ID", col = "doseCAT", bkgrd = FALSE, workwithexpr = F)
plot_spagh(df = explo, x = TIME, y = DV, group = ID, col = doseCAT, bkgrd = FALSE)
plot_spagh(df = explo, x = TIME, y = DV, group = ID, col = doseCAT, bkgrd = FALSE, output = "expr")
plot_spagh(df = explo, x = TIME, y = DV, group = ID, col = doseCAT, bkgrd = FALSE, output = "expr") %>% cat
plot_spagh
pecc_table1(dataset = explo %>% distinct(ID, Wt, Dose, cov, bool, doseCAT), rowl = c("Wt_cont", "doseCAT_cat"), coll = "cov")
explo %>% distinct(ID, Wt, Dose, cov, bool, doseCAT)
peccary_NCA(dataset = explo, timecol = TIME, obscol = DV, doseCAT, ID, IVbackextr = FALSE, add_Obs0_Time0 = FALSE, auc_0_X = 0L, BLQcol = NULL, filter = "")
explo %>%
mutate(pecc_extra = FALSE) %>%
filter(!is.na(DV)) %>%
group_by(doseCAT, ID) %>%
nest() %>%
mutate(AUCblocs = map(data, function(data) {
data %>%
mutate(TimePrev = lag(TIME)) %>%
mutate(ObsPrev = lag(DV)) %>%
slice(-1) %>%
mutate(AUCbloc = (TIME - TimePrev) * (DV + ObsPrev)/2) %>%
mutate(AUCblocloglinear = pmap_dbl(list(TimePrev, TIME, ObsPrev, DV), function(TimePrev, time, ObsPrev, obs) {
if (obs >= ObsPrev | obs == 0) {
(time - TimePrev) * (obs + ObsPrev)/2
}
else {
(time - TimePrev) * (ObsPrev - obs)/(log(ObsPrev/obs))
}
}))
})) %>%
mutate(outp = map2(AUCblocs, data, function(AUCblocs, data) {
tibble(Cmax = max(data[["DV"]][data$pecc_extra == F], na.rm = T), Cmin = min(data[["DV"]][data$pecc_extra == F], na.rm = T), AUCTlast = sum(AUCblocs$AUCbloc, na.rm = T), AUCTlastlog = sum(AUCblocs$AUCblocloglinear, na.rm = T), Tmax = min(data[["TIME"]][data[["DV"]] == max(data[["DV"]][data$pecc_extra == F], na.rm = T) & data$pecc_extra == F]), Tfirst = min(data[["TIME"]][data$pecc_extra == F], na.rm = T)[[1]], Tlast = max(data[["TIME"]][data$pecc_extra == F], na.rm = T))
})) %>%
unnest(outp) %>%
left_join(explo %>%
mutate(pecc_extra = FALSE) %>%
distinct(ID, Wt, Dose, cov, bool, doseCAT))
explotemp <- explo
NCA_eval <- {
conc_obj <- PKNCAconc(data = explotemp %>% filter(EVID == 0) %>% group_by(ID, TIME) %>% summarise(`:=`(DV, median(DV))), formula = DV ~ TIME | ID)
dose_obj <- PKNCAdose(data = explotemp %>% filter(EVID == 1), formula = Dose ~ TIME | ID, route = "extravascular")
data_obj_automatic <- PKNCAdata(conc_obj, dose_obj, options = list(auc.method = "lin up/log down", single.dose.aucs = PKNCA.options()$single.dose.aucs %>% mutate(end = Inf)))
pk.nca(data_obj_automatic)
}
NCA_eval
Indiv_table <- explotemp %>%
select(ID, doseCAT) %>%
distinct() %>%
full_join(NCA_eval$result %>%
select(ID, PPTESTCD, PPORRES) %>%
distinct() %>%
spread(key = PPTESTCD, value = PPORRES))
Indiv_table
NCA_eval <- {
conc_obj <- PKNCAconc(data = explotemp %>% filter(EVID == 0) %>% group_by(ID, TIME) %>% summarise(`:=`(DV, median(DV))), formula = DV ~ TIME | ID)
dose_obj <- PKNCAdose(data = explotemp %>% filter(EVID == 1), formula = Dose ~ TIME | ID, route = "extravascular")
data_obj_automatic <- PKNCAdata(conc_obj, dose_obj, options = list(auc.method = "lin up/log down", single.dose.aucs = PKNCA.options()$single.dose.aucs %>% mutate(end = Inf)))
pk.nca(data_obj_automatic)
}
Indiv_table <- explotemp %>%
select(ID, doseCAT) %>%
distinct() %>%
full_join(NCA_eval$result %>%
select(ID, PPTESTCD, PPORRES) %>%
distinct() %>%
spread(key = PPTESTCD, value = PPORRES))
Indiv_table
ind_param <- tibble(Cl = c(3, 5, 10), ka = c(5, 5, 5), Vd = c(25, 25, 25), nameparset = c("Cl = 3", "Cl = 5", "Cl = 10"))
parameters_df <- ind_param %>%
rownames_to_column("id") %>%
group_by(id, nameparset) %>%
nest(.key = "parameter")
times <- seq(0L, 100L, by = 1L)
events_df <- tibble(Proto = "1", cmt = "Gut", time = "0", amt = 50, method = "add", ADM = "1", Perf = structure(1L, .Label = c("None", "rate", "time"), class = c("ordered", "factor")), evid = 1) %>%
mutate(time = map(time, ~eval(parse_expr(.x)))) %>%
unnest(time) %>%
mutate(Proto = "") %>%
bind_rows(crossing(time = seq(0L, 100L, by = 1L), evid = 0, cmt = c("Gut", "Central", "Conc"), Proto = "")) %>%
arrange(time) %>%
mutate(amt = as.double(amt), time = as.double(time)) %>%
group_by(Proto) %>%
nest(.key = "events")
states <- c(Gut = 0, Central = 0)
model <- RxODE({
ke <- Cl/Vd
d/dt(Gut) <- -ka * Gut
d/dt(Central) <- -ke * Central + ka * Gut
Conc <- Central/Vd
})
simulations <- crossing(parameters_df, events_df) %>%
mutate(simul = map2(parameter, events, function(parameter, events) {
as_tibble(model$solve(parameter, events, states))
})) %>%
select(-parameter, -events) %>%
unnest
library(RxODE)
model <- RxODE({
ke <- Cl/Vd
d/dt(Gut) <- -ka * Gut
d/dt(Central) <- -ke * Central + ka * Gut
Conc <- Central/Vd
})
simulations <- crossing(parameters_df, events_df) %>%
mutate(simul = map2(parameter, events, function(parameter, events) {
as_tibble(model$solve(parameter, events, states))
})) %>%
select(-parameter, -events) %>%
unnest
df_filtered <- tibble(Plot = 1L, Todisplay = "Conc", Filter_of_dataset = NA_character_) %>%
mutate(dataset = map2(Filter_of_dataset, Todisplay, function(x, y) {
if (is.na(x) | x == "") {
explo_temp <- crossing(explo, key = y) %>%
mutate()
try(explo_temp <- explo_temp %>%
filter(!is.na(Proto)), silent = T)
}
else {
explo_temp <- crossing(explo %>%
filter_(x), key = y) %>%
mutate()
try(explo_temp <- explo_temp %>%
filter(!is.na(Proto)), silent = T)
}
explo_temp
}))
breaks2 <- map(-40:40, ~1:9 * 10^.x) %>%
reduce(c)
labels2 <- as.character(breaks2)
labels2[-seq(1, length(labels2), 9)] <- ""
simulations
simulations %>%
gather(-id, -nameparset, -Proto, -time, key = "key", value = "value") %>%
mutate(color = paste0(nameparset, "\n", Proto, "\n") %>%
gsub(pattern = "\n\n\n?", replacement = "\n")) %>%
filter(key %in% c("Central", "Conc", "Gut")) %>%
ggplot + geom_point(data = reduce(df_filtered$dataset, bind_rows), aes(TIME, DV)) + geom_line(aes(time, value, col = fct_reorder(color, as.double(id))), size = 1.5) + labs(x = "Time", y = "", col = "") + theme_bw() + facet_wrap(~key, scales = "free") + scale_y_log10()
events_df
parameters_df
events_df
crossing(parameters_df, events_df)
parameters_df
events_df
simulations
df_filtered <- tibble(Plot = 1L, Todisplay = "Conc", Filter_of_dataset = NA_character_) %>%
mutate(dataset = map2(Filter_of_dataset, Todisplay, function(x, y) {
if (is.na(x) | x == "") {
explo_temp <- crossing(explo, key = y) %>%
mutate()
try(explo_temp <- explo_temp %>%
filter(!is.na(Proto)), silent = T)
}
else {
explo_temp <- crossing(explo %>%
filter_(x), key = y) %>%
mutate()
try(explo_temp <- explo_temp %>%
filter(!is.na(Proto)), silent = T)
}
explo_temp
}))
df_filtered
breaks2 <- map(-40:40, ~1:9 * 10^.x) %>%
reduce(c)
labels2 <- as.character(breaks2)
labels2[-seq(1, length(labels2), 9)] <- ""
simulations %>%
gather(-id, -nameparset, -Proto, -time, key = "key", value = "value") %>%
mutate(color = paste0(nameparset, "\n", Proto, "\n") %>%
gsub(pattern = "\n\n\n?", replacement = "\n")) %>%
filter(key %in% c("Central", "Conc", "Gut")) %>%
ggplot + geom_point(data = reduce(df_filtered$dataset, bind_rows), aes(TIME, DV)) + geom_line(aes(time, value, col = fct_reorder(color, as.double(id))), size = 1.5) + labs(x = "Time", y = "", col = "") + theme_bw() + facet_wrap(~key, scales = "free") + scale_y_log10()
library(PopED)
modelpopEd <- function(Time, State, Pars) {
with(as.list(c(State, Pars)), {
ke <- Cl/Vd
dGut <- -ka * Gut
dCentral <- -ke * Central + ka * Gut
Conc <- Central/Vd
list(c(dGut, dCentral), c(Conc = Conc))
})
}
modelpopEd
events_input <- data.frame(var = "Gut", time = 0, value = 50, method = "add", Proto = 1L, Group = 1L)
model2 <- function(model_switch, xt, parameters, poped.db) {
with(as.list(parameters), {
A_ini <- c(Gut = 0, Central = 0)
times_xt <- drop(xt)
eventdat <- events_input %>% filter(Group == group)
times <- sort(c(times_xt, eventdat$time))
out <- ode(A_ini, times, modelpopEd, parameters, events = list(data = eventdat))
out <- out[match(times_xt, out[, "time"]), ]
y <- xt * 0
y <- out[, "Conc"]
y = cbind(y)
return(list(y = y, poped.db = poped.db))
})
}
model2
fg <- function(x, a, bpop, b, bocc) {
parameters = c(Cl = bpop[1] * exp(b[1]), ka = bpop[2] * exp(b[2]), Vd = bpop[3] * exp(b[3]), group = a[1])
return(parameters)
}
poped.db <- create.poped.database(ff_fun = "model2", fError_fun = "feps.prop", fg_fun = "fg", groupsize = c(30), m = 1L, sigma = c(prop = 0.2), notfixed_sigma = c(1), bpop = c(Cl = 3, ka = 5, Vd = 25), notfixed_bpop = c(1, 1, 1), d = c(Cl = 0.3, ka = 0.3, Vd = 0.3), notfixed_d = c(Cl = 1, ka = 1, Vd = 1), xt = list(c(0, 1, 5, 10, 20, 30)), model_switch = list(c(1, 1, 1, 1, 1, 1)), a = list(group = 1))
popedResult <- list()
popedResult$plot_OD <- plot_model_prediction(poped.db, model_num_points = 500, facet_scales = "free")
popedResult$result_OD <- evaluate_design(poped.db)
names(popedResult$result_OD$rse) <- c("Cl_pop", "ka_pop", "Vd_pop", "Cl_omega", "ka_omega", "Vd_omega", "prop")
popedResult
events_input
explo <- read.table(file = "D:/Peccary_Annexe/Exemple_demo/DATA//Theoph.txt", header = T, na.strings = ".", sep = ";", dec = ".")
breaks_log <- lapply(-7:7, function(x) 1:9*10^x) %>% reduce(c)
labels_log <- as.character(breaks_log); labels_log[-seq(1,length(labels_log),9)] <- ""
explo %>%
filter(!is.na(DV)) %>%
mutate(`:=`(DV, DV/Dose)) %>%
ggplot() +
geom_point(aes(x = TIME, y = DV, col = factor(doseCAT)), alpha = 1) +
geom_line(aes(x = TIME, y = DV, group = ID, col = factor(doseCAT)), alpha = 1) +
scale_y_log10(labels = labels_log, breaks = breaks_log) +
labs(col = "doseCAT") +
theme_bw(base_size = 15) +
theme(plot.title = element_text(hjust = 0.5), plot.subtitle = element_text(hjust = 0.5), plot.caption = element_text(hjust = 0, face = "italic", colour = "grey18"))
explotemp <- explo
NCA_eval <- {
conc_obj <- PKNCAconc(data = explotemp %>% filter(EVID == 0) %>% group_by(ID, TIME) %>% summarise(`:=`(DV, median(DV))), formula = DV ~ TIME | ID)
dose_obj <- PKNCAdose(data = explotemp %>% filter(EVID == 1), formula = Dose ~ TIME | ID, route = "extravascular")
data_obj_automatic <- PKNCAdata(conc_obj, dose_obj, options = list(auc.method = "lin up/log down", single.dose.aucs = PKNCA.options()$single.dose.aucs %>% mutate(end = Inf)))
pk.nca(data_obj_automatic)
}
Indiv_table <- explotemp %>%
select(ID, doseCAT) %>%
distinct() %>%
full_join(NCA_eval$result %>%
select(ID, PPTESTCD, PPORRES) %>%
distinct() %>%
spread(key = PPTESTCD, value = PPORRES))
Indiv_table
read.table("file:///D:/Peccary_Annexe/Exemple_demo/DATA/Theoph.txt")
read.table("file:///D:/Peccary_Annexe/Exemple_demo/DATA/Theoph.txt"; header = T, sep = ",")
read.table("file:///D:/Peccary_Annexe/Exemple_demo/DATA/Theoph.txt", header = T, sep = ",")
read.table("file:///D:/Peccary_Annexe/Exemple_demo/DATA/Theoph.txt", header = T, sep = ".,")
read.table("file:///D:/Peccary_Annexe/Exemple_demo/DATA/Theoph.txt", header = T, sep = ";")
